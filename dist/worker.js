(()=>{var Xf=Symbol("_size"),Es=Symbol("_buffer"),kx=Symbol("_value"),Ex=Symbol("_receivers"),jf=Symbol("_mask"),Pt=[0,255,65535,16777215,4294967295],C=class{constructor(x=2,f=4294967295){this[Xf]=x,this[jf]=f&Pt[x],this[kx]=0,this[Ex]=[]}addReceiver(x){x&&this[Ex].push(x)}set value(x){this[kx]=(x<0?~x+1:x)&this[jf]}get value(){return this[kx]}get size(){return this[Xf]}signal(x,f=!1){x!==void 0&&(this.value=x);let t=this.value;for(let r=this[Ex].length-1;r>=0;r--)this[Ex][r](t);f||(this.value=0)}};var Ft=2,zf=65535,Dt=4,Bt=524287,It=2,yt=65535,Lt=1,Mt=3,Ct=1,Nt=1,Rx=Symbol("_mapBus"),N0=Symbol("_addressBus"),T0=Symbol("_dataBus"),w0=Symbol("_commandBus"),$0=Symbol("_executeBus"),vx=0,Ux=1,$x=2,Gx=3,Wx=class{constructor(){this[Rx]=new C(Ft,zf),this[N0]=new C(Dt,Bt),this[T0]=new C(It,yt),this[w0]=new C(Lt,Mt),this[$0]=new C(Ct,Nt)}get mapBus(){return this[Rx]}get addressBus(){return this[N0]}get dataBus(){return this[T0]}get commandBus(){return this[w0]}get executeBus(){return this[$0]}get map(){return this[Rx].value}set map(x){this[Rx].value=x&zf}get command(){return this[w0].value}get address(){return this[N0].value}get data(){return this[T0].value}set data(x){this[T0].value=x}readByte(x){return this[N0].value=x,this[T0].value=0,this[w0].value=vx,this[$0].signal(1),this[T0].value}readWord(x){return this[N0].value=x,this[T0].value=0,this[w0].value=Ux,this[$0].signal(1),this[T0].value}writeByte(x,f){this[N0].value=x,this[T0].value=f&255,this[w0].value=$x,this[$0].signal(1)}writeWord(x,f){this[N0].value=x,this[T0].value=f,this[w0].value=Gx,this[$0].signal(1)}};var Hx=Symbol("_rom"),Zf=Symbol("_shared"),gx=Symbol("_startingAddress"),Yx=Symbol("_endingAddress"),Qf=Symbol("_size"),P0=Symbol("_buffer"),Vx=Symbol("_data"),F0=Symbol("_systemBus"),Jf=class{constructor({systemBus:x,address:f=0,size:t=0,rom:r=!1,shared:a=!1,buffer:i=void 0}){this[P0]=i||new(a?SharedArrayBuffer:ArrayBuffer)(t),this[Vx]=new Uint8Array(this[P0],i?f:0,t),this[Qf]=t,this[gx]=f,this[Yx]=f+t-1,this[Zf]=a,this[Hx]=r,this[F0]=x,this.signaled=this.signaled.bind(this),x&&x.executeBus.addReceiver(this.signaled)}get shared(){return this[Zf]}get rom(){return this[Hx]}get startingAddress(){return this[gx]}get size(){return this[Qf]}get endingAddress(){return this[Yx]}read(x){return this[Vx][x&16383]}write(x,f,t=!1){(!this[Hx]||t)&&(this[Vx][x-this[gx]]=f)}signaled(){let x=this[F0].command,f=this[F0].address;if(f>=this[gx]&&f<=this[Yx])switch(x){default:case vx:this[F0].data=this.read(f);break;case Ux:this[F0].data=this.read(f)<<8|this.read(f+1);break;case $x:this.write(f,this[F0].data);break;case Gx:let t=this[F0].data,r=(t&65280)>>8,a=t&255;this.write(f,r),this.write(f+1,a);break}}},G0=Symbol("_pages"),Kx=class{constructor({systemBus:x,pageCount:f=32,pageSize:t=16384,romPages:r=[28,29,30,31],shared:a=!1,buffer:i=null}){let s=[];this[P0]=i||new(a?SharedArrayBuffer:ArrayBuffer)(f*t);for(let c=0;c<f;c++)s.push(new Jf({systemBus:x,address:c*t,size:t,rom:r.indexOf(c)>-1,shared:a,buffer:this[P0]}));this[G0]=s,this[F0]=x}get pages(){return this[G0]}get size(){let x=this[G0],f=0;return x.forEach(t=>f+=t.size),f}pageForAddress(x){let f=this[G0],t=this[F0].map,r=(x&507904)>>14;switch(r){case 1:return f[t&31];case 2:return f[(t&992)>>5];case 3:return f[(t&31744)>>10];default:return f[r]}}readByte(x){return this.pageForAddress(x).read(x)}readBytes(x,f){return Array.from({length:f},(t,r)=>this.readByte(x+r))}readUnmappedByte(x){return this[G0][(x&507904)>>14].read(x)}readWord(x){let f=this.pageForAddress(x);return(f.read(x)<<8)+f.read(x+1)}writeByte(x,f,t=!1){this.pageForAddress(x).write(x,f,t)}writeUnmappedByte(x,f){return this[G0][(x&507904)>>14].write(x,f)}writeWord(x,f){let t=this.pageForAddress(x),r=(f&65280)>>8,a=f&255;t.write(x,r),t.write(x+1,a)}loadFromJS(x,f=!1){x.forEach(t=>{let r=t.addr;t.data.forEach((a,i)=>{this.writeByte(i+r,a,f)})})}copyWithin(x,f,t){new Uint8Array(this[P0]).copyWithin(f,x,x+t)}setWithin(x,f){new Uint8Array(this[P0]).set(x,f)}fillWithin(x,f,t){new Uint8Array(this[P0]).fill(x,f,f+t)}swapWithin(x,f,t){let r=Uint8Array.from(new Uint8Array(this[P0],x,t)),a=Uint8Array.from(new Uint8Array(this[P0],f,t));this.setWithin(r,f),this.setWithin(a,x)}reset(x=!1){for(let f=0;f<this.size;f++)this.writeUnmappedByte(f,x?(f&3)*31:0)}};var xe=Symbol("_irqService"),fe=Symbol("_irqSignal"),ee=Symbol("_deviceSelect"),te=Symbol("_addressSeect"),se=Symbol("_data"),re=Symbol("_command"),ae=Symbol("_execute"),qx=class{constructor(){this[xe]=new C(2),this[fe]=new C(1,15),this[ee]=new C(1,15),this[te]=new C(1,15),this[se]=new C(1),this[re]=new C(1,1),this[ae]=new C(1,1)}get irqServiceBus(){return this[xe]}get irqSignalBus(){return this[fe]}get deviceSelectBus(){return this[ee]}get addressSelectBus(){return this[te]}get dataBus(){return this[se]}get commandBus(){return this[re]}get executeBus(){return this[ae]}};var ie=Symbol("_op1"),ce=Symbol("_op2"),oe=Symbol("_ret"),ne=Symbol("_flags"),de=Symbol("_command"),Xx=Symbol("_execute"),m={ADD:1,SUB:2,MUL:3,DIV:4,MOD:5,SMUL:6,SDIV:7,SMOD:8,NEG:9,SHL:10,SHR:11,AND:12,OR:13,XOR:14,NOT:15},E0={BYTE:0,WORD:1,ADDR:2,RET_8:0,RET_16:256,RET_19:512,RET_32:768,OP1_8:0,OP1_16:64,OP1_19:128,OP1_32:192,OP2_8:0,OP2_16:16,OP2_19:32,OP2_32:48},jx=[128,32768,262144];var Ax=[255,65535,524287],zx=[256,65536,524288];var Zx=class{constructor(){this[ie]=new C(4),this[ce]=new C(4),this[oe]=new C(4),this[ne]=new C(1,7),this[de]=new C(2,1023),this[Xx]=new C(1,1),this.signaled=this.signaled.bind(this),this[Xx].addReceiver(this.signaled),this.stats={ops:0,[m.ADD]:0,[m.AND]:0,[m.DIV]:0,[m.MOD]:0,[m.MUL]:0,[m.NEG]:0,[m.NOT]:0,[m.OR]:0,[m.SDIV]:0,[m.SMOD]:0,[m.SMUL]:0,[m.SHL]:0,[m.SHR]:0,[m.SUB]:0,[m.XOR]:0}}resetStats(){this.stats={ops:0,[m.ADD]:0,[m.AND]:0,[m.DIV]:0,[m.MOD]:0,[m.MUL]:0,[m.NEG]:0,[m.NOT]:0,[m.OR]:0,[m.SDIV]:0,[m.SMOD]:0,[m.SMUL]:0,[m.SHL]:0,[m.SHR]:0,[m.SUB]:0,[m.XOR]:0}}get op1Bus(){return this[ie]}get op2Bus(){return this[ce]}get retBus(){return this[oe]}get flagsBus(){return this[ne]}get commandBus(){return this[de]}get executeBus(){return this[Xx]}signaled(){let x=this.commandBus.data,f=this.op1Bus.data,t=this.op2Bus.data,r=(x&768)>>8,a=(x&192)>>6,i=(x&48)>>4,s=x&15;this.stats[s]++,this.stats.ops++;let c=f;c<0&&(c+=zx[a]),c&=Ax[a];let n=t;n<0&&(n+=zx[i]),n&=Ax[i];let u=c&jx[a]?1:0,R=n&jx[i]?1:0,g=0,p=0,A=(this.flagsBus.data&4)>>2,O=0,T=0,S=0;switch(s){case m.SUB:{S=c+-n+A,S<0&&(p=1);break}case m.ADD:S=c+n+A;break;case m.MUL:S=c*n;break;case m.MOD:case m.DIV:n===0?(p=1,T=1,O=1,g=1,S=0):s===m.DIV?S=Math.floor(c/n):S=c%n;break;case m.AND:S=c&n;break;case m.OR:S=c|n;break;case m.XOR:S=c^n;break;case m.NOT:S=~c;break;case m.NEG:S=-c;break;case m.SHL:S=c<<(n&63);break;case m.SHR:S=c>>(n&63);break;default:}S<0&&(S+=zx[r]),O=S&jx[r]?1:0,p=p|(S&~Ax[r]?1:0),S&=Ax[r],(s===m.ADD||s===m.MUL)&&u===R?u!==O&&(T=1):s===m.SUB&&u!==R&&u!==O&&(T=1),g=S===0?1:0,this.retBus.data=S,this.flagsBus.data=O<<3|p<<2|T<<1|g}};var Qx=class{constructor(){this.init()}init(){this.stack=new Float64Array(8),this.flags={overflow:!1,underflow:!1,infinity:!1,nan:!1,negative:!1,zero:!1,stackException:!1,divideByZero:!1},this.SP=0}updateFlags(){let x=this.peek();this.flags.infinity=!Number.isFinite(x),this.flags.nan=Number.isNaN(x),this.flags.negative=x<0,this.flags.zero=x===0}pop(){return this.SP--,this.SP<0&&(this.SP=this.stack.length-1,this.flags.stackException=!0),this.SP=this.SP&7,this.stack[this.SP]}peek(){return this.stack[this.SP-1&7]}push(x){this.stack[this.SP]=x,this.SP++,this.SP>this.stack.length-1&&(this.SP=0,this.flags.stackException=!0)}pushBytes(x){let f=new DataView(this.stack.buffer);for(let t=0;t<8;t++)f.setUint8(this.SP*8+t,x[t]);this.SP++,this.SP>this.stack.length-1&&(this.SP=0,this.flags.stackException=!0)}popBytes(){this.SP--,this.SP<0&&(this.SP=this.stack.length-1,this.flags.stackException=!0),this.SP=this.SP&7;let x=new DataView(this.stack.buffer);return Array.from({length:8},(f,t)=>x.getUint8(this.SP*8+t))}dup(){let x=this.peek();this.push(x)}swap(){let x=this.pop(),f=this.pop();this.push(x),this.push(f)}int(){let x=this.pop();this.push(Math.round(x))}add(){let x=this.pop(),f=this.pop();this.push(f+x)}sub(){let x=this.pop(),f=this.pop();this.push(f-x)}mul(){let x=this.pop(),f=this.pop();this.push(f*x)}div(){let x=this.pop(),f=this.pop();if(x===0){this.flags.divideByZero=!0,this.push(0);return}this.push(f/x)}mod(){let x=this.pop(),f=this.pop();if(x===0){this.flags.divideByZero=!0,this.push(0);return}this.push(f%x)}pow(){let x=this.pop(),f=this.pop();this.push(Math.pow(f,x))}sqrt(){let x=this.pop(),f=this.pop();this.push(Math.sqrt(f,x))}abs(){let x=this.pop();this.push(Math.abs(x))}neg(){let x=this.pop();this.push(-x)}sin(){let x=this.pop();this.push(Math.sin(x))}cos(){let x=this.pop();this.push(Math.cos(x))}tan(){let x=this.pop();this.push(Math.tan(x))}asin(){let x=this.pop();this.push(Math.asin(x))}acos(){let x=this.pop();this.push(Math.acos(x))}atan(){let x=this.pop();this.push(Math.atan(x))}log(){let x=this.pop();this.push(Math.log(x))}log2(){let x=this.pop();this.push(Math.log2(x))}log10(){let x=this.pop();this.push(Math.log10(x))}e(){this.push(Math.E)}pi(){this.push(Math.PI)}isnan(){let x=this.pop();Number.isNaN(x)?this.push(1):this.push(0)}isinf(){let x=this.pop();Number.isFinite(x)?this.push(0):this.push(1)}ld0(){this.push(0)}ld1(){this.push(1)}};var _e=Symbol("_controller"),q0=Symbol("_ioBus"),he=Symbol("_memory"),k0=Symbol("_buffer"),ue=Symbol("_device"),pe=Symbol("_priority"),X0=Symbol("_addrStart"),Jx=Symbol("_addrEnd"),R0=class{constructor({device:x=0,length:f=16,priority:t=15,controller:r,memory:a=void 0,clock:i=void 0}){this[_e]=r,this[q0]=r.ioBus,this[he]=a,this[ue]=x,this[pe]=t,this._length=f,this[X0]=x<<4,this[Jx]=this[X0]+f-1,this[k0]=new Uint8Array(new ArrayBuffer(f<<1)),this.putOnBus=this.putOnBus.bind(this),this.pullFromBus=this.pullFromBus.bind(this),this._read=this._read.bind(this),this._write=this._write.bind(this),r.register(this),this.ioBus.executeBus.addReceiver(()=>{let s=this[q0],u=(s.deviceSelectBus.value<<4)+s.addressSelectBus.value;if(u>=this[X0]&&u<=this[Jx]){let R=s.commandBus.value,g=u-this[X0],p=R===0?this.putOnBus:this.pullFromBus;p&&p(g)}}),this.tick=this.tick.bind(this),i&&i.addReceiver(this.tick)}_read(x=0){return this[k0][x]}_write(x=0,f=0){this[k0][this._length+x]=f,this.mirrored[x]&&(this[k0][x]=f)}putOnBus(x=0){let f=this[q0];f.dataBus.value=this._read(x)}pullFromBus(x=0){let f=this[q0].dataBus.value;this._write(x,f)}get addrStart(){return this[X0]}get addrEnd(){return this[Jx]}get mirrored(){return{}}get device(){return this[ue]}get ioBus(){return this[q0]}get memory(){return this[he]}get priority(){return this[pe]}get controller(){return this[_e]}requestService(x){this.controller.sendInterruptForDevice(this)}tick(){}};var le=Symbol("_processor"),xf=Symbol("_ioBus"),j0=Symbol("_devices"),Tx=Symbol("_deviceMap"),ff=class{constructor({processor:x,ioBus:f,clock:t}){this[le]=x,x.registerController(this),this[xf]=f,this[j0]=[],this[Tx]=[],this.tick=this.tick.bind(this),t&&t.addReceiver(this.tick)}get ioBus(){return this[xf]}get processor(){return this[le]}get devices(){return this[j0]}register(x){this[j0].push(x),this[j0].sort((f,t)=>f.priority-t.priority),this[Tx]=this[j0].reduce((f,t)=>{for(let r=t.addrStart;r<=t.addrEnd;r+=16)f[r>>4]=t;return f},[])}pureRead(x){let f=x>>4,t=this[Tx][f];return(t?t._read(x-t.addrStart):0)||0}pureWrite(x,f){let t=x>>4,r=this[Tx][t];r&&r._write(x-r.addrStart,f)}readBytes(x=0,f=256){return Array.from({length:f},(t,r)=>this.pureRead(x+r))}sendInterruptForDevice(x){let f=this[xf];f.irqServiceBus.value|=1<<x.device}pingProcessor(){if(this.ioBus.irqServiceBus.value!==0){for(let x of this.devices)if(this.ioBus.irqServiceBus.value&1<<x.device){this.ioBus.irqSignalBus.signal(x.device);break}}}ackInterrupt(x){this.ioBus.irqServiceBus.value&=~(1<<x),this.ioBus.irqSignalBus.value=0}tick(){this.pingProcessor()}};var Se=new ArrayBuffer(2),wt=new Uint8Array(Se),kt=new Uint16Array(Se);kt[0]=4660;var vt=wt[0]==18?"big":"little";var ef=vt==="little";var tf=Symbol("_buffer"),sf=Symbol("_data"),rf=Symbol("_word"),Ut=24,h={A:0,AL:1,B:2,BL:3,C:4,CL:5,D:6,DL:7,X:8,XL:9,Y:10,YL:11,BP:12,SP:14,STATUS:16,FLAGS:17,PC:18,MM:20,MP:22},P={Z:0,ZERO:0,Z_SET_MASK:1,Z_CLR_MASK:254,V:1,OVERFLOW:1,V_SET_MASK:2,V_CLR_MASK:253,C:2,CARRY:2,C_SET_MASK:4,C_CLR_MASK:251,N:3,NEGATIVE:3,N_SET_MASK:8,N_CLR_MASK:247,SS:4,SINGLE_STEP:4,SS_SET_MASK:16,SS_CLR_MASK:239,IS:5,INTERRUPT_SERVICE:5,IS_SET_MASK:32,IS_CLR_MASK:223,ID:6,INTERRUPT_DISABLE:6,ID_SET_MASK:64,ID_CLR_MASK:191,EX:7,EXCEPTION:7,EX_SET_MASK:128,EX_CLR_MASK:127},af=class{constructor(){this[tf]=new ArrayBuffer(Ut),this[sf]=new Uint8Array(this[tf]),this[rf]=new Uint16Array(this[tf])}getRegister(x){return(x&1)==0?this[rf][x>>1]:this[sf][x-(ef?1:0)]}getSizeOfRegister(x){return x&1?E0.BYTE:E0.WORD}getRegisterMask(x){return(x&1)==0?65535:255}setRegister(x,f){(x&1)==0?this[rf][x>>1]=f&65535:this[sf][x-(ef?1:0)]=f}get A(){return this.getRegister(h.A)}get AL(){return this.getRegister(h.AL)}get B(){return this.getRegister(h.B)}get BL(){return this.getRegister(h.BL)}get C(){return this.getRegister(h.C)}get CL(){return this.getRegister(h.CL)}get D(){return this.getRegister(h.D)}get DL(){return this.getRegister(h.DL)}get X(){return this.getRegister(h.X)}get XL(){return this.getRegister(h.XL)}get Y(){return this.getRegister(h.Y)}get YL(){return this.getRegister(h.YL)}get BP(){return this.getRegister(h.BP)}get SP(){return this.getRegister(h.SP)}get STATUS(){return this.getRegister(h.STATUS)}get FLAGS(){return this.getRegister(h.FLAGS)}get PC(){return this.getRegister(h.PC)}get MM(){return this.getRegister(h.MM)}get MP(){return this.getRegister(h.MP)}set A(x){this.setRegister(h.A,x)}set AL(x){this.setRegister(h.AL,x)}set B(x){this.setRegister(h.B,x)}set BL(x){this.setRegister(h.BL,x)}set C(x){this.setRegister(h.C,x)}set CL(x){this.setRegister(h.CL,x)}set D(x){this.setRegister(h.D,x)}set DL(x){this.setRegister(h.DL,x)}set X(x){this.setRegister(h.X,x)}set XL(x){this.setRegister(h.XL,x)}set Y(x){this.setRegister(h.Y,x)}set YL(x){this.setRegister(h.YL,x)}set BP(x){this.setRegister(h.BP,x)}set SP(x){this.setRegister(h.SP,x)}set STATUS(x){this.setRegister(h.STATUS,x)}set FLAGS(x){this.setRegister(h.FLAGS,x)}set PC(x){this.setRegister(h.PC,x)}set MM(x){this.setRegister(h.MM,x)}set MP(x){this.setRegister(h.MP,x)}get ZERO(){return this.FLAGS&P.Z_SET_MASK}get CARRY(){return(this.FLAGS&P.C_SET_MASK)>>P.CARRY}get SINGLE_STEP(){return(this.FLAGS&P.SS_SET_MASK)>>P.SINGLE_STEP}get INTERRUPT_SERVICE(){return(this.FLAGS&P.IS_SET_MASK)>>P.INTERRUPT_SERVICE}get INTERRUPT_DISABLE(){return(this.FLAGS&P.ID_SET_MASK)>>P.INTERRUPT_DISABLE}get EXCEPTION(){return(this.FLAGS&P.EX_SET_MASK)>>P.EXCEPTION}get OVERFLOW(){return(this.FLAGS&P.V_SET_MASK)>>P.OVERFLOW}get NEGATIVE(){return(this.FLAGS&P.N_SET_MASK)>>P.NEGATIVE}set ZERO(x){this.FLAGS=this.FLAGS&P.Z_CLR_MASK|(x&&P.Z_SET_MASK)}set CARRY(x){this.FLAGS=this.FLAGS&P.C_CLR_MASK|(x&&P.C_SET_MASK)}set SINGLE_STEP(x){this.FLAGS=this.FLAGS&P.SS_CLR_MASK|(x&&P.SS_SET_MASK)}set INTERRUPT_SERVICE(x){this.FLAGS=this.FLAGS&P.IS_CLR_MASK|(x&&P.IS_SET_MASK)}set INTERRUPT_DISABLE(x){this.FLAGS=this.FLAGS&P.ID_CLR_MASK|(x&&P.ID_SET_MASK)}set EXCEPTION(x){this.FLAGS=this.FLAGS&P.EX_CLR_MASK|(x&&P.EX_SET_MASK)}set OVERFLOW(x){this.FLAGS=this.FLAGS&P.V_CLR_MASK|(x&&P.V_SET_MASK)}set NEGATIVE(x){this.FLAGS=this.FLAGS&P.N_CLR_MASK|(x&&P.N_SET_MASK)}toJSON(){return{A:this.A,B:this.B,C:this.C,D:this.D,X:this.X,Y:this.Y,BP:this.BP,SP:this.SP,STATUS:this.STATUS,PC:this.PC,MP:this.MP,MM:this.MM,FLAGS:{ZERO:this.ZERO,CARRY:this.CARRY,SINGLE_STEP:this.SINGLE_STEP,INTERRUPT_SERVICE:this.INTERRUPT_SERVICE,INTERRUPT_DISABLE:this.INTERRUPT_DISABLE,EXCEPTION:this.EXCEPTION,OVERFLOW:this.OVERFLOW,NEGATIVE:this.NEGATIVE}}}};var g0=E0.BYTE,D0=E0.WORD,Ox=E0.ADDR,be=0,me=536870912,Ee=1073741824,$t=1610612736,Re=536870911,cf=1,_0=2,h0=3,ge=e=>e===g0?be:e===D0?me:e===Ox?Ee:e===be?g0:e===me?D0:e===Ee?Ox:e,X=(e,x,f)=>{let t=ge(f);return e.push(t|x)},Y=e=>(e.pop()|0)&Re,Ae=e=>{let x=e.pop()|0,f=x&Re,t=x&$t,r=ge(t);return[f,r]},Gt=2130706432,Wt=16777215,Te=e=>e&Gt,Oe=e=>e&Wt,d={NOP:0,GET_REGISTER_AND_PUSH:16777216,POP_INTO_REGISTER:33554432,PUSH_BYTE:50331648,PUSH_WORD:67108864,PUSH_ADDR:83886080,GET_BYTE_FROM_MEMORY:100663296,GET_WORD_FROM_MEMORY:117440512,POP_BYTE_INTO_MEMORY:134217728,POP_WORD_INTO_MEMORY:150994944,DECOMPOSE_WORD_TO_BYTES:268435456,RECOMPOSE_BYTES_TO_WORD:285212672,DECOMPOSE_BYTE_TO_NIBBLE:301989888,RECOMPOSE_NIBBLE_TO_BYTE:318767104,DECOMPOSE_ADDR:805306368,RECOMPOSE_ADDR:822083584,GET_ADDR_FROM_MEMORY:838860800,SET_BIT:335544320,CLEAR_BIT:352321536,PICK:369098752,TRAP:385875968,DUP:402653184,SWAP:419430400,CLEAR_FLAG_IMM:436207616,SET_FLAG_IMM:452984832,TEST_FLAG_IMM:469762048,PULL_FLAGS_FROM_ALU:486539264,PUSH_FLAGS_TO_ALU:503316480,IO_IN:536870912,IO_OUT:553648128,ADD:1073741824,SUB:1107296256,CMP:1140850688,AND:1174405120,OR:1207959552,TEST:1241513984,XOR:1275068416,SHL:1342177280,SHR:1375731712,MUL:1610612736,DIV:1644167168,MOD:1677721600,SMUL:1879048192,SDIV:1912602624,SMOD:1946157056},of=new Array(256).fill(()=>0);[[d.NOP,()=>0],[d.GET_REGISTER_AND_PUSH,({stack:e,registerFile:x,arg:f})=>{X(e,x.getRegister(f),x.getSizeOfRegister(f))}],[d.POP_INTO_REGISTER,({stack:e,registerFile:x,arg:f})=>{x.setRegister(f,Y(e))}],[d.PUSH_BYTE,({stack:e,arg:x})=>{X(e,x,g0)}],[d.PUSH_WORD,({stack:e,arg:x})=>{X(e,x,D0)}],[d.PUSH_ADDR,({stack:e,arg:x})=>{X(e,x,Ox)}],[d.GET_BYTE_FROM_MEMORY,({stack:e,memory:x})=>{X(e,x.readByte(Y(e)),g0)}],[d.GET_WORD_FROM_MEMORY,({stack:e,memory:x})=>{X(e,x.readWord(Y(e)),D0)}],[d.GET_ADDR_FROM_MEMORY,({stack:e,memory:x})=>{let f=Y(e);X(e,x.readWord(f),D0),X(e,x.readWord(f+2),D0)}],[d.POP_BYTE_INTO_MEMORY,({stack:e,memory:x})=>{let f=Y(e),t=Y(e);x.writeByte(t,f)}],[d.POP_WORD_INTO_MEMORY,({stack:e,memory:x})=>{let f=Y(e),t=Y(e);x.writeWord(t,f)}],[d.DECOMPOSE_WORD_TO_BYTES,({stack:e})=>{let x=Y(e);X(e,(x&65280)>>8,g0),X(e,x&255,g0)}],[d.RECOMPOSE_BYTES_TO_WORD,({stack:e})=>{let x=Y(e),f=Y(e);X(e,f<<8|x,D0)}],[d.DECOMPOSE_BYTE_TO_NIBBLE,({stack:e})=>{let x=Y(e);X(e,(x&240)>>4,g0),X(e,x&15,g0)}],[d.RECOMPOSE_NIBBLE_TO_BYTE,({stack:e})=>{let x=Y(e),f=Y(e);X(e,f<<4|x,g0)}],[d.DECOMPOSE_ADDR,({stack:e})=>{let x=Y(e);X(e,x>>3,D0),X(e,x&7,D0)}],[d.RECOMPOSE_ADDR,({stack:e})=>{let x=Y(e),f=Y(e);X(e,(f<<3)+x,Ox)}],[d.TRAP,({stack:e,ioBus:x})=>{let f=Y(e)&15;x.irqServiceBus.value=f,x.irqSignalBus.signal()}],[d.IO_IN,({stack:e,ioBus:x})=>{let f=Y(e)&255;x.deviceSelectBus.value=(f&240)>>4,x.addressSelectBus.value=f&15,x.commandBus.value=0,x.executeBus.signal(),X(e,x.dataBus.value,g0)}],[d.IO_OUT,({stack:e,ioBus:x})=>{let f=Y(e)&255,t=Y(e)&255;x.deviceSelectBus.value=(t&240)>>4,x.addressSelectBus.value=t&15,x.dataBus.value=f,x.commandBus.value=1,x.executeBus.signal()}],[d.DUP,({stack:e})=>{let x=e.pop();e.push(x),e.push(x)}],[d.SWAP,({stack:e})=>{let x=e.pop(),f=e.pop();e.push(x),e.push(f)}],[d.SET_BIT,({stack:e,arg:x})=>{let f=1<<x;e.push(e.pop()|f)}],[d.CLEAR_BIT,({stack:e,arg:x})=>{let f=~(1<<x);e.push(e.pop()&f)}],[d.PICK,({stack:e})=>{let x=Y(e),f=e.pop(),t=e.pop();e.push(x!==0?t:f)}],[d.SET_FLAG_IMM,({arg:e,registerFile:x})=>{let f=x.FLAGS,t=1<<e;x.FLAGS=f|t}],[d.CLEAR_FLAG_IMM,({arg:e,registerFile:x})=>{let f=x.FLAGS,t=~(1<<e);x.FLAGS=f&t}],[d.TEST_FLAG_IMM,({stack:e,arg:x,registerFile:f})=>{let t=f.FLAGS,r=1<<x;X(e,(t&r)>>x>0?1:0,g0)}],[d.PULL_FLAGS_FROM_ALU,({arg:e,alu:x,registerFile:f})=>{f.FLAGS=f.FLAGS&240|x.flagsBus.data&e}],[d.PUSH_FLAGS_TO_ALU,({arg:e,alu:x,registerFile:f})=>{x.flagsBus.data=f.FLAGS&15&e}]].forEach(([e,x])=>{let f=e>>>24;of[f]=x});var Ht=(e,x)=>({arg:f,stack:t,alu:r,registerFile:a})=>{let[i,s]=Ae(t),[c,n]=Ae(t),u=n>s?n:s;r.op1Bus.data=c,r.op2Bus.data=i,r.commandBus.data=u<<8|n<<6|s<<4|e,r.flagsBus.data=f&cf?a.FLAGS&15:0,r.executeBus.signal(),f&_0&&(a.FLAGS=a.FLAGS&240|r.flagsBus.data,(e===m.SDIV||e===m.DIV||e===m.SMOD||e===m.MOD)&&i===0&&(a.EXCEPTION=1));let R=r.retBus.data;x||X(t,R,u)};Object.entries(d).forEach(([e,x])=>{if(x>=1073741824){let f=!1;e.startsWith("CMP")&&(e=e.replace("CMP","SUB"),f=!0);let t=e.split("_")[0],r=m[t];of[x>>>24]=Ht(r,f)}});var nf=e=>e.toString(16).padStart(8,"0"),Yt=new Map(Object.entries(d).map(([e,x])=>[x,e])),Pe=e=>{let x=Te(e),f=Oe(e),t=Yt.get(x);return`${nf(e)} => ${nf(x)}(${t}) ${nf(f)}`},Fe=(e,{stack:x,alu:f,registerFile:t,ioBus:r,memory:a})=>{let i=Te(e),s=Oe(e);of[i>>>24]({arg:s,stack:x,alu:f,registerFile:t,ioBus:r,memory:a})};var De=new Map,Be=new Map,i0=E0.BYTE,u0=E0.WORD,E1=E0.ADDR;function Ie(e,x){let f={},t=Object.entries(x),r,a,i,s,c,n,u,R;for(r=0,a=t.length;r<a;r++){for([i,[s,c]]=t[r],R=0,n=s;n>=c;n--)u=e&1<<n?1:0,R=R<<1|u;f[i]=R}return f}function Vt(e,{operands:x,decode:f}){let t=De.get(e);if(t)return t;let r=Ie(e,x),a=f(r);return De.set(e,a),a}function Kt(e,{operands:x,equiv:f}){let t=Be.get(e),r,a;return t?(r=t.args,a=t.fn):(r=Ie(e,x),a=f.bind(void 0,r),Be.set(e,{args:r,fn:a})),a}function ye(e,x,f=!0){return x.equiv&&f?Kt(e,x):Vt(e,x)}var B0=({alu:e,registerFile:x,command:f,op0:t,sz0:r,op1:a,sz1:i,flagHandling:s})=>{let c=i>r?i:r;return e.op1Bus.data=t,e.op2Bus.data=a,e.commandBus.data=c<<8|r<<6|i<<4|f,e.flagsBus.data=s&cf?x.FLAGS&15:0,e.executeBus.signal(),s&_0&&(x.FLAGS=x.FLAGS&240|e.flagsBus.data,(f===m.SDIV||f===m.DIV||f===m.SMOD||f===m.MOD)&&a===0&&(x.EXCEPTION=1)),e.retBus.data},o={};[["fclr","Clears Floating Point Unit","0000_0000",{},(e,{fpu:x})=>x.init()],["fadd","Add two FP numbers together","0001_0000",{},(e,{fpu:x})=>x.add()],["fsub","Subtract two FP numbers","0001_0001",{},(e,{fpu:x})=>x.sub()],["fcmp","Compare two FP numbers","0001_0010",{},(e,{fpu:x})=>x.sub()],["fmul","Multiply two FP numbers","0001_0011",{},(e,{fpu:x})=>x.mul()],["fmod","Return modulo of two FP numbers","0001_0100",{},(e,{fpu:x})=>x.mod()],["fdiv","Divide two FP numbers","0001_0101",{},(e,{fpu:x})=>x.div()],["fpow","Raise to power","0001_0110",{},(e,{fpu:x})=>x.pow()],["fsqrt","Square Root","0001_0111",{},(e,{fpu:x})=>x.sqrt()],["fneg","Negate FP Number","0001_1000",{},(e,{fpu:x})=>x.neg()],["fexc","Exchange top two FP numbers","0001_1001",{},(e,{fpu:x})=>x.swap()],["fint","Convert FP number to integer","0001_1010",{},(e,{fpu:x})=>x.int()],["fabs","Absolute Value of FP Number","0001_1011",{},(e,{fpu:x})=>x.abs()],["fsin","Sine","0010_0000",{},(e,{fpu:x})=>x.sin()],["fcos","Cosine","0010_0001",{},(e,{fpu:x})=>x.cos()],["ftan","Tangent","0010_0010",{},(e,{fpu:x})=>x.tan()],["fasin","Arc Sine","0010_0100",{},(e,{fpu:x})=>x.asin()],["facos","Arc Cosine","0010_0101",{},(e,{fpu:x})=>x.acos()],["fatan","Arc Tangent","0010_0110",{},(e,{fpu:x})=>x.atan()],["fisnan","Check if FP Number is NaN","0011_0000",{},(e,{fpu:x})=>x.isnan()],["fisinf","Check if FP Number is Infinte","0011_0001",{},(e,{fpu:x})=>x.isinf()],["flog2","Perform Log 2","0011_0010",{},(e,{fpu:x})=>x.log2()],["flog10","Perform Log 10","0011_0011",{},(e,{fpu:x})=>x.log10()],["fld0","Load zero constant","0111_0000",{},(e,{fpu:x})=>x.ld0()],["fld1","Load one constant","0111_0001",{},(e,{fpu:x})=>x.ld1()],["flde","Load e constant","0111_0010",{},(e,{fpu:x})=>x.e()],["fldpi","Load pi constant","0111_0011",{},(e,{fpu:x})=>x.pi()],["fldr","Load from register","1000_0000",{r:[3,0]},({r:e},{registerFile:x,fpu:f})=>f.push(x.getRegister(e))],["fldm","Load from memory","1000_0001",{b:[7,4],r:[3,0]},({b:e,r:x},{memory:f,registerFile:t,fpu:r})=>{let a=(t.getRegister(e)<<3)+t.getRegister(x);r.pushBytes([f.readByte(a+0),f.readByte(a+1),f.readByte(a+2),f.readByte(a+3),f.readByte(a+4),f.readByte(a+5),f.readByte(a+6),f.readByte(a+7)])}],["fldim","Load from memory, indirect","1000_0010",{b:[7,4],r:[3,0]},({b:e,r:x},{memory:f,registerFile:t,fpu:r})=>{let a=(t.getRegister(e)<<3)+t.getRegister(x),i=f.readWord(a),s=f.readWord(a+2);a=(i<<3)+s,r.pushBytes([f.readByte(a+0),f.readByte(a+1),f.readByte(a+2),f.readByte(a+3),f.readByte(a+4),f.readByte(a+5),f.readByte(a+6),f.readByte(a+7)])}],["fstr","Store to register","1000_0100",{r:[3,0]},({r:e},{registerFile:x,fpu:f})=>x.setRegister(e,f.pop())],["fstm","Store to memory","1000_0101",{b:[7,4],r:[3,0]},({b:e,r:x},{memory:f,registerFile:t,fpu:r})=>{let a=r.popBytes(),i=(t.getRegister(e)<<3)+t.getRegister(x);for(let s=0;s<8;s++)f.writeByte(i+s,a[s])}],["fstim","Store to memory, indirect","1000_0110",{b:[7,4],r:[3,0]},({b:e,r:x},{memory:f,registerFile:t,fpu:r})=>{let a=r.popBytes(),i=(t.getRegister(e)<<3)+t.getRegister(x),s=f.readWord(i),c=f.readWord(i+2);i=(s<<3)+c;for(let n=0;n<8;n++)f.writeByte(i+n,a[n])}]].forEach(([e,x,f,t,r])=>{o[e]={asm:e,pattern:`1010_1110 ${f}`,operands:t,description:x,flags:"xdshncvz",equiv:r}});o.nop={asm:"nop",pattern:"0000_0000",operands:{},description:"Performs no operation",flags:"xdshncvz",equiv:()=>{},decode:()=>[d.NOP]};o.halt={asm:"halt",pattern:"0011_1110",operands:{},description:"Halts the processor until an interrupt occurs",flags:"xdshncvz",equiv:(e,{registerFile:x})=>x.SINGLE_STEP=1,decode:()=>[d.SET_FLAG_IMM|P.SINGLE_STEP]};o.wait={asm:"wait $r",pattern:"1010_1111 bbbb_bbbb",operands:{b:[7,0]},description:"[TODO] Waits until a specific interrupt occurs",flags:"xdshncvz",equiv:(e,{registerFile:x})=>x.SINGLE_STEP=1,decode:({b:e=0}={})=>[d.SET_FLAG_IMM|P.SINGLE_STEP]};o.brk={asm:"brk",pattern:"0011_1111",operands:{},description:"Halts the processor if a debugger is attached",flags:"xdshncvz",equiv:(e,{registerFile:x})=>{x.SINGLE_STEP=1,x.INTERRUPT_DISABLE=1},decode:()=>[d.SET_FLAG_IMM|P.INTERRUPT_DISABLE,d.SET_FLAG_IMM|P.SINGLE_STEP]};o.not={asm:"not $r",pattern:"0000_1001 0000_rrrr",operands:{r:[3,0]},description:"!reg",flags:"xdshNcvZ",equiv:({r:e},{alu:x,registerFile:f})=>{let t=e&1?255:65535,r=e&1?128:32768,a=~f.getRegister(e)&t;f.setRegister(e,a),f.NEGATIVE=a&r?1:0,f.ZERO=a===0?1:0},decode:({r:e=0}={})=>[d.GET_REGISTER_AND_PUSH|e,(e&1?d.PUSH_BYTE:d.PUSH_WORD)|(e&1?255:65535),d.XOR|_0,d.POP_INTO_REGISTER|e]};o.neg={asm:"neg $r",pattern:"0000_1001 0001_rrrr",operands:{r:[3,0]},description:"-1 * reg",flags:"xdshNcvZ",equiv:({r:e},{alu:x,registerFile:f})=>{let t=e&1?255:65535,r=e&1?128:32768,a=-f.getRegister(e)&t;f.setRegister(e,a),f.NEGATIVE=a&r?1:0,f.ZERO=a===0?1:0},decode:({r:e=0}={})=>[d.GET_REGISTER_AND_PUSH|e,(e&1?d.PUSH_BYTE:d.PUSH_WORD)|(e&1?255:65535),d.XOR,(e&1?d.PUSH_BYTE:d.PUSH_WORD)|1,d.ADD|_0,d.POP_INTO_REGISTER|e]};o.exc={asm:"exc $r",pattern:"0000_1001 0010_rrrr",operands:{r:[3,0]},description:"Swaps high and low regions of the register",flags:"xdshNcvZ",equiv:({r:e},{alu:x,registerFile:f})=>{let t=e&1?255:65535,r=e&1?128:32768,a=f.getRegister(e);e&1?a=(a&15)<<4|(a&240)>>4:a=(a&255)<<8|(a&65280)>>8,f.setRegister(e,a),f.NEGATIVE=a&r?1:0,f.ZERO=a===0?1:0},decode:({r:e=0}={})=>[d.GET_REGISTER_AND_PUSH|e,e&1?d.DECOMPOSE_BYTE_TO_NIBBLE:d.DECOMPOSE_WORD_TO_BYTES,d.PUSH_WORD|(e&1?4:8),d.SHL,d.OR|_0,d.POP_INTO_REGISTER|e]};o.swap_ds={asm:"swap $d, $s",pattern:"0000_1110 dddd_ssss",operands:{s:[3,0],d:[7,4]},description:"Swaps register values",flags:"xdshncvz",equiv:({d:e,s:x},{registerFile:f})=>{let t=f.getRegister(e),r=f.getRegister(x);f.setRegister(e,r),f.setRegister(x,t)},decode:({d:e=0,s:x=0}={})=>[d.GET_REGISTER_AND_PUSH|e,d.GET_REGISTER_AND_PUSH|x,d.POP_INTO_REGISTER|e,d.POP_INTO_REGISTER|x]};o.mov_ds={asm:"mov $d, $s",pattern:"0000_1111 dddd_ssss",operands:{s:[3,0],d:[7,4]},description:"Moves value of source to dest",flags:"xdshncvz",equiv:({d:e,s:x},{registerFile:f})=>{let t=f.getRegister(x);f.setRegister(e,t)},decode:({d:e=0,s:x=0}={})=>[d.GET_REGISTER_AND_PUSH|x,d.POP_INTO_REGISTER|e]};[["inc",d.ADD,"1100_rrrr",m.ADD],["dec",d.SUB,"1101_rrrr",m.SUB]].forEach(([e,x,f,t])=>{o[`${e}_r`]={asm:`${e} $r`,pattern:f,operands:{r:[3,0]},description:`${e}rements register`,flags:"xdshNCVZ",equiv:({r},{registerFile:a,alu:i})=>{a.setRegister(r,B0({alu:i,registerFile:a,command:t,op0:a.getRegister(r),sz0:r&1?i0:u0,op1:1,sz1:r&1?i0:u0,flagHandling:_0}))},decode:({r=0}={})=>[d.GET_REGISTER_AND_PUSH|r,(r&1?d.PUSH_BYTE:d.PUSH_WORD)|1,x|_0,d.POP_INTO_REGISTER|r]}});[["set",d.SET_FLAG_IMM,"1011_0fff"],["clr",d.CLEAR_FLAG_IMM,"1011_1fff"]].forEach(([e,x,f])=>{o[`${e}_f`]={asm:`${e} $f`,pattern:f,operands:{f:[2,0]},description:`${e}s specified flag`,flags:"XDSHNCVZ",equiv:x===d.SET_FLAG_IMM?({f:t},{registerFile:r})=>r.FLAGS|=1<<t:({f:t},{registerFile:r})=>r.FLAGS&=~(1<<t),decode:({f:t=0}={})=>[x|t]}});[["add",d.ADD,"0000_0001","0100_1dd1","0100_1dd0",m.ADD,h0,!0],["sub",d.SUB,"0000_0010","0101_0dd1","0101_0dd0",m.SUB,h0,!0],["cmp",d.CMP,"0000_0011","0101_1dd1","0101_1dd0",m.SUB,_0,!1],["and",d.AND,"0000_0100","0110_0dd1","0110_0dd0",m.AND,h0,!0],["or",d.OR,"0000_0101","0110_1dd1","0110_1dd0",m.OR,h0,!0],["test",d.AND,"0000_0110","0111_0dd1","0111_0dd0",m.AND,_0,!1],["xor",d.XOR,"0000_0111","0111_1dd1","0111_1dd0",m.XOR,h0,!0]].forEach(([e,x,f,t,r,a,i,s],c)=>{o[`${e}_ds`]={asm:`${e} $d, $s`,pattern:`${f} dddd_ssss`,operands:{s:[3,0],d:[7,4]},description:`${e}s dest and source, storing result in dest`,flags:c<3?"xdshNCVZ":"xdshNcvZ",equiv:s?({d:n,s:u},{registerFile:R,alu:g})=>{R.setRegister(n,B0({alu:g,registerFile:R,command:a,op0:R.getRegister(n),sz0:n&1?i0:u0,op1:R.getRegister(u),sz1:u&1?i0:u0,flagHandling:i}))}:({d:n,s:u},{registerFile:R,alu:g})=>{B0({alu:g,registerFile:R,command:a,op0:R.getRegister(n),sz0:n&1?i0:u0,op1:R.getRegister(u),sz1:u&1?i0:u0,flagHandling:i})},decode:s?({d:n=0,s:u=0}={})=>[d.GET_REGISTER_AND_PUSH|n,d.GET_REGISTER_AND_PUSH|u,x|h0,d.POP_INTO_REGISTER|n]:({d:n=0,s:u=0}={})=>[d.GET_REGISTER_AND_PUSH|n,d.GET_REGISTER_AND_PUSH|u,x|_0]},o[`${e}_db`]={asm:`${e} $d, $b`,pattern:`${t} bbbb_bbbb`,operands:{d:[10,9],b:[7,0]},description:`${e}s dest and imm8, storing result in dest`,flags:c<3?"xdshNCVZ":"xdshNcvZ",equiv:s?({d:n,b:u},{registerFile:R,alu:g})=>{R.setRegister(n*2+1,B0({alu:g,registerFile:R,command:a,op0:R.getRegister(n*2+1),sz0:i0,op1:u,sz1:i0,flagHandling:i}))}:({d:n,b:u},{registerFile:R,alu:g})=>{B0({alu:g,registerFile:R,command:a,op0:R.getRegister(n*2+1),sz0:i0,op1:u,sz1:i0,flagHandling:i})},decode:s?({d:n=0,b:u=0}={})=>[d.GET_REGISTER_AND_PUSH|(n<<1|1),d.PUSH_BYTE|u,x|h0,d.POP_INTO_REGISTER|(n<<1|1)]:({d:n=0,b:u=0}={})=>[d.GET_REGISTER_AND_PUSH|(n<<1|1),d.PUSH_BYTE|u,x|_0]},o[`${e}_dw`]={asm:`${e} $d, $w`,pattern:`${r} wwww_wwww wwww_wwww`,operands:{d:[18,17],w:[15,0]},description:`${e}s dest and imm16, storing result in dest`,flags:c<3?"xdshNCVZ":"xdshNcvZ",equiv:s?({d:n,w:u},{registerFile:R,alu:g})=>{R.setRegister(n*2,B0({alu:g,registerFile:R,command:a,op0:R.getRegister(n*2),sz0:u0,op1:u,sz1:u0,flagHandling:i}))}:({d:n,w:u},{registerFile:R,alu:g})=>{B0({alu:g,registerFile:R,command:a,op0:R.getRegister(n*2),sz0:u0,op1:u,sz1:u0,flagHandling:i})},decode:s?({d:n=0,w:u=0}={})=>[d.GET_REGISTER_AND_PUSH|n<<1,d.PUSH_WORD|u,x|h0,d.POP_INTO_REGISTER|n<<1]:({d:n=0,w:u=0}={})=>[d.GET_REGISTER_AND_PUSH|n<<1,d.PUSH_WORD|u,x|_0]}});o.trap_b={asm:"trap $b",pattern:"0000_1000 bbbb_bbbb",operands:{b:[7,0]},description:"Executes the specified trap",flags:"xdshncvz",equiv:({r:e},{registerFile:x,memory:f})=>{o.br_call_f.equiv({w:1,i:1,m:1,a:b},{registerFile:x,memory:f})},decode:({b:e=0}={})=>[...o.br_call_f.decode({w:1,i:1,m:1,a:e})]};o.trap_r={asm:"trap $r",pattern:"0100_0rrr",operands:{r:[2,0]},description:"[TODO] Executes the specified trap in the given register",flags:"xdshncvz",equiv:({r:e},{registerFile:x,memory:f})=>{},decode:({r:e=0}={})=>[d.NOP]};o.enter_n={asm:"enter $n",pattern:"0011_1000 nnnn_nnnn",operands:{n:[7,0]},description:"Enters a stack frame",flags:"xdshncvz",equiv:({n:e},{registerFile:x,memory:f})=>{o.push_r.equiv({r:h.BP},{registerFile:x,memory:f}),o.mov_ds.equiv({d:h.BP,s:h.SP},{registerFile:x,memory:f}),x.SP-=e},decode:({n:e=0}={})=>[...o.push_r.decode({r:h.BP}),...o.mov_ds.decode({d:h.BP,s:h.SP}),d.GET_REGISTER_AND_PUSH|h.SP,d.PUSH_WORD|e,d.SUB,d.POP_INTO_REGISTER|h.SP]};o.exit_n={asm:"exit $n",pattern:"0011_1001 nnnn_nnnn",operands:{n:[7,0]},description:"Leaves a stack frame",flags:"xdshncvz",equiv:({n:e},{registerFile:x,memory:f})=>{x.SP+=e,o.pop_r.equiv({r:h.BP},{registerFile:x,memory:f})},decode:({n:e=0}={})=>[d.GET_REGISTER_AND_PUSH|h.SP,d.PUSH_WORD|e,d.ADD,d.POP_INTO_REGISTER|h.SP,...o.pop_r.decode({r:h.BP})]};[["shl",d.SHL,"0000_1011 dddd_ssss",m.SHL],["shr",d.SHR,"0000_1101 dddd_ssss",m.SHR],["mul",d.MUL,"1010_1000 dddd_ssss",m.MUL],["div",d.DIV,"1010_1001 dddd_ssss",m.DIV],["mod",d.MOD,"1010_1010 dddd_ssss",m.MOD],["smul",d.SMUL,"1010_1011 dddd_ssss",m.SMUL],["sdiv",d.SDIV,"1010_1100 dddd_ssss",m.SDIV],["smod",d.SMOD,"1010_1101 dddd_ssss",m.SMOD]].forEach(([e,x,f,t],r)=>{o[`${e}_ds`]={asm:`${e} $d, $s`,pattern:f,operands:{s:[3,0],d:[7,4]},description:`${e} dest and source, storing result in dest`,flags:r<2?"xdshNCvZ":(e.indexOf("mul")>-1?"x":"X")+"dshNCVZ",equiv:({d:a=0,s:i=0}={},{registerFile:s,alu:c})=>{s.setRegister(a,B0({alu:c,registerFile:s,command:t,op0:s.getRegister(a),sz0:a&1?i0:u0,op1:s.getRegister(i),sz1:i&1?i0:u0,flagHandling:h0}))},decode:({d:a=0,s:i=0}={})=>[d.GET_REGISTER_AND_PUSH|a,d.GET_REGISTER_AND_PUSH|i,x|h0,d.POP_INTO_REGISTER|a]}});[["shl",d.SHL,"0000_1010 rrrr_nnnn",m.SHL],["shr",d.SHR,"0000_1100 rrrr_nnnn",m.SHR]].forEach(([e,x,f,t])=>{o[`${e}_rn`]={asm:`${e} $r, $n`,pattern:f,operands:{n:[3,0],r:[7,4]},description:`${e} reg by specified bits`,flags:"xdshNCvZ",equiv:({r,n:a},{registerFile:i,alu:s})=>{i.setRegister(r,B0({alu:s,registerFile:i,command:t,op0:i.getRegister(r),sz0:r&1?i0:u0,op1:a,sz1:i0,flagHandling:h0}))},decode:({r=0,n:a=0}={})=>[d.GET_REGISTER_AND_PUSH|r,d.PUSH_BYTE|a,x|h0,d.POP_INTO_REGISTER|r]}});o.in_rp={asm:"in $r, $p",pattern:"0011_0000 rrrr_0000 pppppppp",operands:{r:[15,12],p:[7,0]},description:"Reads a value from port and stores in reg",flags:"xdshncvz",equiv:({r:e,p:x},{registerFile:f,ioBus:t})=>{t.deviceSelectBus.value=(x&240)>>4,t.addressSelectBus.value=x&15,t.commandBus.value=0,t.executeBus.signal(),f.setRegister(e,t.dataBus.value)},decode:({r:e=0,p:x=0}={})=>[d.PUSH_BYTE|x,d.IO_IN,d.POP_INTO_REGISTER|e]};o.out_rp={asm:"out $r, $p",pattern:"0011_0001 rrrr_0000 pppppppp",operands:{r:[15,12],p:[7,0]},description:"Writes value in reg to port",flags:"xdshncvz",equiv:({r:e,p:x},{registerFile:f,ioBus:t})=>{t.deviceSelectBus.value=(x&240)>>4,t.addressSelectBus.value=x&15,t.dataBus.value=f.getRegister(e),t.commandBus.value=1,t.executeBus.signal()},decode:({r:e=0,p:x=0}={})=>[d.PUSH_BYTE|x,d.GET_REGISTER_AND_PUSH|e,d.IO_OUT]};o.ld_dw={asm:"ld $d, $w",pattern:"0001_ddd0 0000_0000 wwww_wwww wwww_wwww",operands:{d:[27,25],w:[15,0]},description:"Loads an immediate word into dest",flags:"xdshncvz",equiv:({d:e,w:x},{registerFile:f})=>{f.setRegister(e*2,x)},decode:({d:e=0,w:x=0}={})=>[d.PUSH_WORD|x,d.POP_INTO_REGISTER|e<<1]};o.ld_db={asm:"ld $d, $b",pattern:"0001_ddd1 0000_0000 bbbb_bbbb",operands:{d:[19,17],b:[7,0]},description:"Loads an immediate byte into dest",flags:"xdshncvz",equiv:({d:e,b:x},{registerFile:f})=>{f.setRegister(e*2+1,x)},decode:({d:e=0,b:x=0}={})=>[d.PUSH_BYTE|x,d.POP_INTO_REGISTER|(e<<1|1)]};var z0=({m:e,i:x,x:f,y:t,a:r},{registerFile:a,memory:i})=>{let s=r;return e===2&&(s=s+a.BP&65535),e===3&&(s=s+(a.D<<3)),f===1&&(s+=a.X),x===1&&(s=(i.readWord(s)<<3)+i.readWord(s+2)),t===1&&(s+=a.Y),s&524287},df=({m:e=0,i:x=0,x:f=0,y:t=0,a:r=0}={})=>[...e===2?[d.GET_REGISTER_AND_PUSH|h.BP,d.ADD,d.PUSH_WORD|65535,d.AND]:e===3?[d.GET_REGISTER_AND_PUSH|h.D,d.PUSH_WORD|0,d.RECOMPOSE_ADDR,d.ADD]:[],...f===1?[d.GET_REGISTER_AND_PUSH|h.X,d.ADD]:[],...x===1?[d.GET_ADDR_FROM_MEMORY,d.RECOMPOSE_ADDR]:[],...t===1?[d.GET_REGISTER_AND_PUSH|h.Y,d.ADD]:[]];o.ld={asm:"ld $d, $a $x $y $m:$i",pattern:"0001_dddd mmix_yaaa aaaa_aaaa aaaa_aaaa",operands:{d:[27,24],m:[23,22],i:[21,21],x:[20,20],y:[19,19],a:[18,0]},description:"Loads a value from memory",flags:"xdshncvz",equiv:({d:e,m:x,i:f,x:t,y:r,a},{registerFile:i,memory:s})=>{e&1?i.setRegister(e,s.readByte(z0({m:x,i:f,x:t,y:r,a},{registerFile:i,memory:s}))):i.setRegister(e,s.readWord(z0({m:x,i:f,x:t,y:r,a},{registerFile:i,memory:s})))},decode:({d:e=0,m:x=0,i:f=0,x:t=0,y:r=0,a=0}={})=>[d.PUSH_ADDR|a,...df({m:x,i:f,x:t,y:r,a}),e&1?d.GET_BYTE_FROM_MEMORY:d.GET_WORD_FROM_MEMORY,d.POP_INTO_REGISTER|e]};o.st={asm:"st $a, $s $x $y $m:$i",pattern:"0010_ssss mmix_yaaa aaaa_aaaa aaaa_aaaa",operands:{s:[27,24],m:[23,22],i:[21,21],x:[20,20],y:[19,19],a:[18,0]},description:"Stores a value to memory",flags:"xdshncvz",equiv:({s:e,m:x,i:f,x:t,y:r,a},{registerFile:i,memory:s})=>{let c=i.getRegister(e);e&1?s.writeByte(z0({m:x,i:f,x:t,y:r,a},{registerFile:i,memory:s}),c):s.writeWord(z0({m:x,i:f,x:t,y:r,a},{registerFile:i,memory:s}),c)},decode:({s:e=0,m:x=0,i:f=0,x:t=0,y:r=0,a=0}={})=>[d.PUSH_ADDR|a,...df({m:x,i:f,x:t,y:r,a}),d.GET_REGISTER_AND_PUSH|e,e&1?d.POP_BYTE_INTO_MEMORY:d.POP_WORD_INTO_MEMORY]};o.push_r={asm:"push $r",pattern:"1110_rrrr",operands:{r:[3,0]},description:"Push the register on stack",flags:"xdshncvz",equiv:({r:e},{registerFile:x,memory:f})=>{x.SP-=e&1?1:2,e&1?f.writeByte(x.SP,x.getRegister(e)):f.writeWord(x.SP,x.getRegister(e))},decode:({r:e=0}={})=>[d.GET_REGISTER_AND_PUSH|h.SP,d.PUSH_WORD|(e&1?1:2),d.SUB,d.DUP,d.GET_REGISTER_AND_PUSH|e,e&1?d.POP_BYTE_INTO_MEMORY:d.POP_WORD_INTO_MEMORY,d.POP_INTO_REGISTER|h.SP]};o.pop_r={asm:"pop $r",pattern:"1111_rrrr",operands:{r:[3,0]},description:"Pop top of stack into register",flags:"xdshncvz",equiv:({r:e},{registerFile:x,memory:f})=>{let t;e&1?t=f.readByte(x.SP):t=f.readWord(x.SP),x.SP+=e&1?1:2,x.setRegister(e,t)},decode:({r:e=0}={})=>[d.GET_REGISTER_AND_PUSH|h.SP,d.DUP,d.PUSH_WORD|(e&1?1:2),d.ADD,d.POP_INTO_REGISTER|h.SP,e&1?d.GET_BYTE_FROM_MEMORY:d.GET_WORD_FROM_MEMORY,d.POP_INTO_REGISTER|e]};o.pushall={asm:"pushall",pattern:"1010_0000",operands:{},description:"Pushes SP, A, B, C, D, X, Y, and BP",flags:"xdshncvz",equiv:({},{registerFile:e,memory:x})=>{o.push_r.equiv({r:h.SP},{registerFile:e,memory:x}),o.push_r.equiv({r:h.A},{registerFile:e,memory:x}),o.push_r.equiv({r:h.B},{registerFile:e,memory:x}),o.push_r.equiv({r:h.C},{registerFile:e,memory:x}),o.push_r.equiv({r:h.D},{registerFile:e,memory:x}),o.push_r.equiv({r:h.X},{registerFile:e,memory:x}),o.push_r.equiv({r:h.Y},{registerFile:e,memory:x}),o.push_r.equiv({r:h.BP},{registerFile:e,memory:x})},decode:()=>[...o.push_r.decode({r:h.SP}),...o.push_r.decode({r:h.A}),...o.push_r.decode({r:h.B}),...o.push_r.decode({r:h.C}),...o.push_r.decode({r:h.D}),...o.push_r.decode({r:h.X}),...o.push_r.decode({r:h.Y}),...o.push_r.decode({r:h.BP})]};o.popall={asm:"popall",pattern:"1010_0001",operands:{},description:"Reverse of pushall",flags:"xdshncvz",equiv:({},{registerFile:e,memory:x})=>{o.pop_r.equiv({r:h.BP},{registerFile:e,memory:x}),o.pop_r.equiv({r:h.Y},{registerFile:e,memory:x}),o.pop_r.equiv({r:h.X},{registerFile:e,memory:x}),o.pop_r.equiv({r:h.D},{registerFile:e,memory:x}),o.pop_r.equiv({r:h.C},{registerFile:e,memory:x}),o.pop_r.equiv({r:h.B},{registerFile:e,memory:x}),o.pop_r.equiv({r:h.A},{registerFile:e,memory:x}),o.pop_r.equiv({r:h.SP},{registerFile:e,memory:x})},decode:()=>[...o.pop_r.decode({r:h.BP}),...o.pop_r.decode({r:h.Y}),...o.pop_r.decode({r:h.X}),...o.pop_r.decode({r:h.D}),...o.pop_r.decode({r:h.C}),...o.pop_r.decode({r:h.B}),...o.pop_r.decode({r:h.A}),...o.pop_r.decode({r:h.SP})]};o.pushf={asm:"pushf",pattern:"1010_0010",operands:{},description:"Push flags onto stack",flags:"xdshncvz",equiv:({},{registerFile:e,memory:x})=>{o.push_r.equiv({r:h.STATUS},{registerFile:e,memory:x})},decode:()=>[...o.push_r.decode({r:h.STATUS})]};o.popf={asm:"popf",pattern:"1010_0011",operands:{},description:"Pops flags from stack",flags:"XDSHNCVZ",equiv:({},{registerFile:e,memory:x})=>{o.pop_r.equiv({r:h.STATUS},{registerFile:e,memory:x})},decode:()=>[...o.pop_r.decode({r:h.STATUS})]};o.pushmm={asm:"pushmm",pattern:"1010_0100",operands:{},description:"Push memory map register to stack",flags:"xdshncvz",equiv:({},{registerFile:e,memory:x})=>{o.push_r.equiv({r:h.MM},{registerFile:e,memory:x})},decode:()=>[...o.push_r.decode({r:h.MM})]};o.popmm={asm:"popmm",pattern:"1010_0101",operands:{},description:"Pops value on stack into memory map register",flags:"xdshncvz",equiv:({},{registerFile:e,memory:x})=>{o.pop_r.equiv({r:h.MM},{registerFile:e,memory:x})},decode:()=>[...o.pop_r.decode({r:h.MM})]};o.ret={asm:"ret",pattern:"1010_0111",operands:{},description:"Return from subroutine",flags:"xdshncvz",equiv:({},{registerFile:e,memory:x})=>{o.pop_r.equiv({r:h.PC},{registerFile:e,memory:x})},decode:()=>[...o.pop_r.decode({r:h.PC})]};[["brs_calls_f","1001_nfff mmix_yuw1 aaaa_aaaa",8],["br_call_f","1001_nfff mmix_yuw0 aaaa_aaaa aaaa_aaaa",0]].forEach(([e,x,f])=>{o[e]={asm:`${e} $n $f $m $i $x $y $u $w $a`,pattern:x,operands:{n:[27-f,27-f],f:[26-f,24-f],m:[23-f,22-f],i:[21-f,21-f],x:[20-f,20-f],y:[19-f,19-f],u:[18-f,18-f],w:[17-f,17-f],s:[16-f,16-f],a:[15-f,0]},description:"Conditional branch/call to address (U=unconditional; N=Not; W=Call)",flags:"xdshncvz",equiv:({n:t,f:r,m:a,i,x:s,y:c,u:n,w:u,s:R,a:g},{registerFile:p,memory:A})=>{u===1&&o.push_r.equiv({r:h.PC},{registerFile:p,memory:A});let O=R===0?g:((g&128)>0?65280:0)|g;if(a===0&&(O=O+p.PC&65535),O=z0({m:a,i,x:s,y:c,a:O},{registerFile:p,memory:A}),a!==0&&(O=A.readWord(O)),n===1)switch(r){case 0:p.PC=O;break;case 2:(t===0&&p.NEGATIVE!==p.OVERFLOW||t===1&&p.CARRY)&&(p.PC=O);break;case 3:(t===0&&(p.NEGATIVE!==p.OVERFLOW||p.ZERO)||t===1&&(p.CARRY||p.ZERO))&&(p.PC=O);break;case 4:(t===0&&p.NEGATIVE===p.OVERFLOW&&!p.ZERO||t===1&&!p.CARRY&&!p.ZERO)&&(p.PC=O);break;case 5:(t===0&&p.NEGATIVE===p.OVERFLOW&&p.ZERO||t===1&&(!p.CARRY||p.ZERO))&&(p.PC=O);break}else{let T=p.FLAGS&1<<r?1:0;t===1&&(T=1-T),T===1&&(p.PC=O)}},decode:({n:t=0,f:r=0,m:a=0,i=0,x:s=0,y:c=0,u:n=0,w:u=0,s:R=0,a:g=0}={})=>[...u===1?[d.GET_REGISTER_AND_PUSH|h.SP,d.PUSH_WORD|2,d.SUB,d.DUP,d.POP_INTO_REGISTER|h.SP,d.GET_REGISTER_AND_PUSH|h.PC,d.POP_WORD_INTO_MEMORY]:[],...R===0?[d.PUSH_WORD|g]:[d.PUSH_WORD|(((g&128)>0?65280:0)|g)],...a===0?[d.GET_REGISTER_AND_PUSH|h.PC,d.ADD]:[],...df({m:a,i,x:s,y:c,a:g}),...a!==0?[d.GET_WORD_FROM_MEMORY]:[],...n===1?[d.POP_INTO_REGISTER|h.PC]:[d.GET_REGISTER_AND_PUSH|h.PC,t===1?d.SWAP:d.NOP,d.TEST_FLAG_IMM|r,d.PICK,d.POP_INTO_REGISTER|h.PC]]}});[["loops_r","1000_rrrr mmix_y..1 aaaa_aaaa",8],["loop_r","1000_rrrr mmix_y..0 aaaa_aaaa aaaa_aaaa",0]].forEach(([e,x,f])=>{o[e]={asm:`${e} $r $m $i $x $y $a`,pattern:x,operands:{r:[27-f,24-f],m:[23-f,22-f],i:[21-f,21-f],x:[20-f,20-f],y:[19-f,19-f],s:[16-f,16-f],a:[15-f,0]},description:"Decrements register and branches if carry is not set",flags:"xdshncvz",equiv:e==="loops_r"?({r:t,m:r,i:a,x:i,y:s,s:c,a:n},{registerFile:u,memory:R,alu:g})=>{o.dec_r.equiv({r:t},{registerFile:u,memory:R,alu:g}),o.brs_calls_f.equiv({n:1,f:P.CARRY,m:r,i:a,x:i,y:s,s:c,a:n},{registerFile:u,memory:R})}:({r:t,m:r,i:a,x:i,y:s,s:c,a:n},{registerFile:u,memory:R,alu:g})=>{o.dec_r.equiv({r:t},{registerFile:u,memory:R,alu:g}),o.br_call_f.equiv({n:1,f:P.CARRY,m:r,i:a,x:i,y:s,s:c,a:n},{registerFile:u,memory:R})},decode:e==="loops_r"?({r:t=0,m:r=0,i:a=0,x:i=0,y:s=0,s:c=0,a:n=0}={})=>[...o.dec_r.decode({r:t}),...o.brs_calls_f.decode({n:1,f:P.CARRY,m:r,i:a,x:i,y:s,s:c,a:n})]:({r:t=0,m:r=0,i:a=0,x:i=0,y:s=0,s:c=0,a:n=0}={})=>[...o.dec_r.decode({r:t}),...o.br_call_f.decode({n:1,f:P.CARRY,m:r,i:a,x:i,y:s,s:c,a:n})]}});var qt={size:0,tasks:null},c0={size:0,opcode:null,instruction:0},S0=[null,new Map,new Map,new Map,new Map];function Px(e){let x=!1,f=0,t=0,r=0,a=0,i,s,c;for(;!x;){if(t=e[a],a+=1,t===void 0||(f=f<<8|t,r=a,r>4))return c0;if(s=f>>(r-1<<3)&255,r===1&&(s===0&&(i=o.nop),s===62&&(i=o.halt),s===63&&(i=o.brk),s===160&&(i=o.pushall),s===161&&(i=o.popall),s===162&&(i=o.pushf),s===163&&(i=o.popf),s===164&&(i=o.pushmm),s===165&&(i=o.popmm),s===167&&(i=o.ret),s>=64&&s<=71&&(i=o.trap_r),s>=176&&s<=183&&(i=o.set_f),s>=184&&s<=191&&(i=o.clr_f),s>=192&&s<=207&&(i=o.inc_r),s>=208&&s<=223&&(i=o.dec_r),s>=224&&s<=239&&(i=o.push_r),s>=240&&s<=255&&(i=o.pop_r)),c=r>1?f>>(r-2<<3)&255:0,r===2){if(s===1&&(i=o.add_ds),s===2&&(i=o.sub_ds),s===3&&(i=o.cmp_ds),s===4&&(i=o.and_ds),s===5&&(i=o.or_ds),s===6&&(i=o.test_ds),s===7&&(i=o.xor_ds),s===8&&(i=o.trap_b),s===9&&(c>=0&&c<=15&&(i=o.not),c>=16&&c<=31&&(i=o.neg),c>=32&&c<=47&&(i=o.exc)),s===10&&(i=o.shl_rn),s===11&&(i=o.shl_ds),s===12&&(i=o.shr_rn),s===13&&(i=o.shr_ds),s===14&&(i=o.swap_ds),s===15&&(i=o.mov_ds),s===56&&(i=o.enter_n),s===57&&(i=o.exit_n),s===168&&(i=o.mul_ds),s===169&&(i=o.div_ds),s===170&&(i=o.mod_ds),s===171&&(i=o.smul_ds),s===172&&(i=o.sdiv_ds),s===173&&(i=o.smod_ds),s===174)switch(c){case 0:i=o.fclr;break;case 16:i=o.fadd;break;case 17:i=o.fsub;break;case 18:i=o.fcmp;break;case 19:i=o.fmul;break;case 20:i=o.fmod;break;case 21:i=o.fdiv;break;case 22:i=o.fpow;break;case 23:i=o.fsqrt;break;case 24:i=o.fneg;break;case 25:i=o.fexc;break;case 26:i=o.fint;break;case 27:i=o.fabs;break;case 32:i=o.fsin;break;case 33:i=o.fcos;break;case 34:i=o.ftan;break;case 36:i=o.fasin;break;case 37:i=o.facos;break;case 38:i=o.fatan;break;case 48:i=o.fisnan;break;case 49:i=o.fisinf;break;case 50:i=o.flog2;break;case 51:i=o.flog10;break;case 112:i=o.fld0;break;case 113:i=o.fld1;break;case 114:i=o.flde;break;case 115:i=o.fldpi;break;default:}s===175&&(i=o.wait),s>=72&&s<=79&&(s&1)==1&&(i=o.add_db),s>=80&&s<=87&&(s&1)==1&&(i=o.sub_db),s>=88&&s<=95&&(s&1)==1&&(i=o.cmp_db),s>=96&&s<=103&&(s&1)==1&&(i=o.and_db),s>=104&&s<=111&&(s&1)==1&&(i=o.or_db),s>=112&&s<=119&&(s&1)==1&&(i=o.test_db),s>=120&&s<=127&&(s&1)==1&&(i=o.xor_db)}if(r===3&&(s>=72&&s<=79&&(s&1)==0&&(i=o.add_dw),s>=80&&s<=87&&(s&1)==0&&(i=o.sub_dw),s>=88&&s<=95&&(s&1)==0&&(i=o.cmp_dw),s>=96&&s<=103&&(s&1)==0&&(i=o.and_dw),s>=104&&s<=111&&(s&1)==0&&(i=o.or_dw),s>=112&&s<=119&&(s&1)==0&&(i=o.test_dw),s>=120&&s<=127&&(s&1)==0&&(i=o.xor_dw),s>=16&&s<=31&&(s&1)==1&&c===0&&(i=o.ld_db),s===48&&(i=o.in_rp),s===49&&(i=o.out_rp),s>=128&&s<=143&&(c&1)==1&&(i=o.loops_r),s>=144&&s<=159&&(c&1)==1&&(i=o.brs_calls_f),s===174))switch(c){case 128:i=o.fldr;break;case 129:i=o.fldm;break;case 130:i=o.fldim;break;case 132:i=o.fstr;break;case 133:i=o.fstm;break;case 134:i=o.fstim;break;default:}r===4&&(s>=16&&s<=31&&(s&1)==0&&c===0&&(i=o.ld_dw),s>=16&&s<=31&&c!=0&&(i=o.ld),s>=32&&s<=47&&(i=o.st),s>=128&&s<=143&&(c&1)==0&&(i=o.loop_r),s>=144&&s<=159&&(c&1)==0&&(i=o.br_call_f)),x=i!==void 0}return x?{size:r,opcode:i,instruction:f}:c0}for(let e=0;e<256;e++){let x=Px([e]);x!==c0&&S0[x.size].set(e,x.opcode)}for(let e=0;e<256;e++)for(let x=0;x<256;x++){let f=e<<8|x,t=Px([e,x]);t!==c0&&S0[2].set(f,t.opcode),t=Px([e,x,0]),t!==c0&&S0[3].set(f,t.opcode),t=Px([e,x,0,0]),t!==c0&&S0[4].set(f,t.opcode)}var _f=e=>{let x=0,f=0,t=e.length;return t===0?-1:(x=e[f++],S0[1].has(x)?1:f>=t?-1:(x=x<<8|e[f++],S0[2].has(x)?2:f>=t?-1:(f++,S0[3].has(x)?3:f>=t?-1:(f++,S0[4].has(x)?4:(f>=t,-1)))))},Xt=e=>{let x=0,f=0,t=null,r=0,a=e.length;return a===0?c0:(x=e[f++],r=x,(t=S0[1].get(x))?{size:1,opcode:t,instruction:r}:f>=a?c0:(x=x<<8|e[f++],r=x,(t=S0[2].get(x))?{size:2,opcode:t,instruction:r}:f>=a?c0:(r=r<<8|e[f++],(t=S0[3].get(x))?{size:3,opcode:t,instruction:r}:f>=a?c0:(r=r<<8|e[f++],(t=S0[4].get(x))?{size:4,opcode:t,instruction:r}:(f>=a,c0)))))},Le=(e,x=!0)=>{let f=Xt(e);return f!==c0?{size:f.size,tasks:ye(f.instruction,f.opcode,x)}:qt};var hf=Symbol("_alu"),uf=Symbol("_fpu"),O0=Symbol("_registerFile"),Me=Symbol("_controller"),pf=Symbol("_memory"),Fx=Symbol("_systemBus"),lf=Symbol("_ioBus"),Ce=Symbol("_clock"),Ne=Symbol("_debug"),y0=Symbol("_taskQueue"),Dx=Symbol("_stack"),L0=Symbol("_cache"),v0=Symbol("_pendingServiceRequest");var Sf=class{constructor({memory:x,systemBus:f,ioBus:t,clock:r,debug:a=null}={}){this[hf]=new Zx,this[uf]=new Qx,this[O0]=new af,this[pf]=x,this[Fx]=f,this[Fx].map=this[O0].MM,this[lf]=t,this[Ce]=r,this[Ne]=a,this[v0]=-1,this[Dx]=[],this[y0]=[],this[L0]=[],this.useEquiv=!0,this.tick=this.tick.bind(this),this.clock.addReceiver(this.tick),this.serviceDevices=this.serviceDevices.bind(this),t.irqSignalBus.addReceiver(this.serviceDevices),this.stats={ticks:0,insts:0,misses:0,decodes:0,reads:0,tasks:0},this._context={stack:this[Dx],registerFile:this[O0],alu:this[hf],fpu:this[uf],memory:this[pf],ioBus:this[lf]},this.reset()}reset(){this[Dx]=[],this[y0]=[],this[L0]=[],this[v0]=-1,this[O0].PC=65280,this[O0].MP=65280,this[O0].BP=8192,this[O0].SP=8192,this[O0].MM=31809,this.registers.SINGLE_STEP=0,this.registers.INTERRUPT_DISABLE=1}resetStats(){this.stats.ticks=0,this.stats.insts=0,this.stats.misses=0,this.stats.decodes=0,this.stats.reads=0,this.stats.tasks=0}get alu(){return this[hf]}get fpu(){return this[uf]}get registers(){return this[O0]}get memory(){return this[pf]}get systemBus(){return this[Fx]}get ioBus(){return this[lf]}get controller(){return this[Me]}get clock(){return this[Ce]}get debug(){return this[Ne]}get internalState(){return{pc:this.registers.PC,mp:this.registers.MP,cache:this[L0],stack:this[Dx],tasks:this[y0],stats:this.stats}}registerController(x){this[Me]=x}inject(x,f){this[L0].push(f),this.stats.reads++}jump(x,f=!1){this[L0]=[],this[y0]=[],this.stats.misses++,f&&(this.registers.SP-=2,this.memory.writeWord(this.registers.SP,this.registers.PC)),this.registers.PC=x,this.registers.MP=x}_fetch(){let x=this.memory,f=this.registers.MP,t=[x.readByte(f++)],r=_f(t);for(;(r<0||t.length<r)&&t.length<5;)t.push(x.readByte(f++)),r=_f(t);r<0&&(f=this.registers.MP+1),this[L0]=t,this.registers.PC=f,this.registers.MP=f}_decode(){let x=this[L0],{tasks:f}=Le(x,this.useEquiv);f?(this.stats.decodes++,this[y0]=f):this[y0]=[]}_execute(){let x=this[y0],f=this.registers.PC,t=this.registers.MP,r=this.registers.MM,a=!1;if(this[Fx].map=this[O0].MM,this.stats.insts++,Array.isArray(x))for(let i=0,s=x.length;i<s;i++)this.stats.tasks++,Fe(x[i],this._context);else this.stats.tasks++,x(this._context);this.registers.PC!==f&&(a=!0,this.stats.misses++,f=this.registers.PC,t=this.registers.PC),this.debug&&this.registers.SINGLE_STEP&&this.registers.INTERRUPT_DISABLE&&this.debug.signal(),this.registers.PC=f,this.registers.MP=t,this[L0]=[],this[y0]=[]}serviceDevices(){let x=this.ioBus;if(x.irqServiceBus.value!==0&&!this.registers.INTERRUPT_DISABLE){let f=x.irqSignalBus.value;if(this[v0]>-1&&this[v0]!==f)throw new Error("Multiple services at the same time!");this[v0]=f}}_reallyServiceDevices(){let x=this[v0];if(x<0)return;this[v0]=-1;let f=128|x<<3,t=f<<1,r=this.memory.readWord(t);this.registers.INTERRUPT_DISABLE||(this.registers.SINGLE_STEP=0),this.registers.STATUS=this.registers.STATUS&255|f<<8,this.jump(r,!0),this.controller.ackInterrupt(x)}tick(){if(this.stats.ticks++,this.registers.SINGLE_STEP&&!this.registers.INTERRUPT_DISABLE){this._reallyServiceDevices();return}this._fetch(),this._decode(),this._execute(),this._reallyServiceDevices()}};var we=typeof SharedArrayBuffer!="undefined";var K={AUTO:0,INTERVAL:1,TIMEOUT:2,RAF:3,BLOCKING:4,FIXED:5,SENTINEL:6},Bx={AUTO:0,NOT_SHARED:1,SHARED:2},bf=typeof requestAnimationFrame!="undefined"?K.RAF:K.TIMEOUT,ke=Symbol("_clock"),ve=Symbol("_processor"),Ue=Symbol("_memory"),$e=Symbol("_ioBus"),Ge=Symbol("_systemBus"),We=Symbol("_controller"),He=Symbol("_debug"),I0=Symbol("_stopSignal"),s0=Symbol("_runID"),mf=Symbol("_sentinel"),Ef=class{constructor({performance:x,debug:f=!1,sliceTime:t=16,sliceGranularity:r=4095,timingMethod:a=K.AUTO,shared:i=Bx.AUTO,stats:s,sentinel:c}={}){let n=new C(1,1),u=new Wx,R=!1;switch(i){case Bx.AUTO:R=we;break;case Bx.SHARED:R=!0;break;default:case Bx.NOT_SHARED:R=!1;break}let g=new Kx({systemBus:u,shared:R}),p=new qx,A=f?new C(1,1):null,O=new Sf({memory:g,systemBus:u,ioBus:p,clock:n,debug:A}),T=new ff({processor:O,ioBus:p,clock:n});this.stats={time:0,ticks:0,slices:0,timeThisSlice:0,ticksThisSlice:0,ticksLastSlice:0,processorStats:{...O.stats},processorStatsLastSlice:{...O.stats},processorStatsThisSecond:{...O.stats},processorStatsLastSecond:{...O.stats},aluStats:{...O.alu.stats},aluStatsLastSlice:{...O.alu.stats},aluStatsThisSecond:{...O.alu.stats},aluStatsLastSecond:{...O.alu.stats},timeSinceLastSecond:0},this._stats=s,this[I0]=!1,A&&A.addReceiver(()=>{this[I0]=!0,this.stop()}),this[ke]=n,this[Ge]=u,this[Ue]=g,this[$e]=p,this[He]=A,this[ve]=O,this[We]=T,this[mf]=c?new Uint8Array(c):null,this._options={sliceTime:t,sliceGranularity:r,timingMethod:a===K.AUTO?bf:a,performance:x},this[s0]=null}get clock(){return this[ke]}get systemBus(){return this[Ge]}get memory(){return this[Ue]}get ioBus(){return this[$e]}get controller(){return this[We]}get debugLine(){return this[He]}get processor(){return this[ve]}reset(){this.memory.reset(!0),this.processor.reset()}tick(){this.stats.ticksThisSlice++,this.clock.signal()}step(){this.debug?(this.running&&this.stop(),this.processor.registers.INTERRUPT_DISABLE=1,this.processor.registers.SINGLE_STEP=1,this.runSlice(),this._stopSignal=!1):(this.tick(),this._updateStatsAfterSlice())}runSlice(){this._stats&&this._stats.begin();let{sliceTime:x,sliceGranularity:f,performance:t,timingMethod:r}=this._options;this[I0]=!1,this.stats.slices++;let a=t.now();if(r===K.SENTINEL){for(;!this[I0];)if(this.tick(),Atomics.load(this[mf],0)!==0){Atomics.store(this[mf],0,0);break}}else if(x>0&&r!==K.BLOCKING){let c=a,n=c,u=0,R=0;if(r===K.FIXED){let g=0;for(;!this[I0]&&g++<=f;)this.tick()}else for(;!this[I0]&&(this.tick(),!(R++>=f&&(R=0,n=c,c=t.now(),u=c-n,c+u>=a+x))););}else for(;!this[I0];)this.tick();this[I0]&&this.stop();let s=t.now()-a;return this.stats.timeThisSlice=s,this.stats.time+=s,this._updateStatsAfterSlice(),this._stats&&this._stats.end(),s}run(){let{timingMethod:x,sliceTime:f}=this._options,t=x===K.FIXED?bf:x;switch(this.running&&this.stop(),t){case K.SENTINEL:{this[s0]=setInterval(function(){this.runSlice()}.bind(this),0);break}case K.TIMEOUT:{this[s0]=setTimeout(function r(){let a=this.runSlice();this.running&&(this[s0]=setTimeout(r.bind(this),f-a))}.bind(this),0);break}case K.RAF:{this[s0]=requestAnimationFrame(function r(){let a=this.runSlice();this.running&&(this[s0]=requestAnimationFrame(r.bind(this)))}.bind(this));break}case K.BLOCKING:{this[s0]=1,this.runSlice();break}case K.INTERVAL:default:this[s0]=setInterval(()=>{this.runSlice()},f+1)}}stop(){let{timingMethod:x}=this._options,f=x===K.FIXED?bf:x;if(this[I0]=!0,this[s0])switch(f){case K.SENTINEL:clearInterval(this[s0]);break;case K.BLOCKING:break;case K.TIMEOUT:{clearTimeout(this[s0]);break}case K.RAF:{cancelAnimationFrame(this[s0]);break}case K.INTERVAL:default:clearInterval(this[s0])}this[s0]=null}get running(){return this[s0]!==null}get stepping(){return this.processor.registers.SINGLE_STEP}get options(){return this._options}set options(x){let f=this.running;this.stop(),this._options=x,f&&this.run()}_updateStatsAfterSlice(){this.stats.ticksLastSlice=this.stats.ticksThisSlice,this.stats.ticks+=this.stats.ticksThisSlice,this.stats.ticksThisSlice=0,this.stats.timeSinceLastSecond+=this.stats.timeThisSlice;for(let[x,f]of Object.entries(this.processor.stats))this.stats.processorStats[x]+=f,this.stats.processorStatsThisSecond[x]+=f;this.stats.processorStatsLastSlice={...this.processor.stats};for(let[x,f]of Object.entries(this.processor.alu.stats))this.stats.aluStats[x]+=f,this.stats.aluStatsThisSecond[x]+=f;if(this.stats.aluStatsLastSlice={...this.processor.alu.stats},this.stats.timeSinceLastSecond>=1e3){this.stats.processorStatsLastSecond={...this.stats.processorStatsThisSecond};for(let[x,f]of Object.entries(this.processor.stats))this.stats.processorStatsThisSecond[x]=0;this.stats.aluStatsLastSecond={...this.stats.aluStatsThisSecond};for(let[x,f]of Object.entries(this.processor.alu.stats))this.stats.aluStatsThisSecond[x]=0;this.stats.timeSinceLastSecond-=1e3}this.processor.resetStats(),this.processor.alu.resetStats()}};var jt={A:0,AL:1,B:2,BL:3,C:4,CL:5,D:6,DL:7,X:8,XL:9,Y:10,YL:11,BP:12,BPL:13,SP:14,SPL:15},E=Object.entries(jt).reduce((e,[x,f])=>(e[f]=x,e),{});var Ix=["Z","V","C","N","SS","IS","ID","EX"],_={NOP:"nop",ADD:"add",AND:"and",CMP:"cmp",SUB:"sub",OR:"or",TEST:"test",XOR:"xor",TRAP:"trap",NOT:"not",NEG:"neg",EXC:"exc",SHL:"shl",SHR:"shr",SWAP:"swap",MOV:"mov",LD:"ld",ST:"st",INC:"inc",IN:"in",OUT:"out",ENTER:"enter",EXIT:"exit",BRK:"brk",LOOP:"loop",LOOPS:"loops",BR:"br",BRS:"brs",CALL:"call",CALLS:"calls",PUSHALL:"pushall",POPALL:"popall",PUSHF:"pushf",POPF:"popf",PUSHMM:"pushmm",POPMM:"popmm",PUSH:"push",POP:"pop",RET:"ret",MUL:"mul",MOD:"mod",DIV:"div",SMUL:"smul",SMOD:"smod",SDIV:"sdiv",SET:"set",CLR:"clr",DEC:"dec",HALT:"halt",WAIT:"wait",FCLR:"fclr",FLDR:"fldr",FLDM:"fldm",FLDIM:"fldim",FSTR:"fstr",FSTM:"fstm",FSTIM:"fstim",FADD:"fadd",FSUB:"fsub",FCMP:"fcmp",FMUL:"fmul",FDIV:"fdiv",FMOD:"fmod",FPOW:"fpow",FSQRT:"fsqrt",FABS:"fabs",FSIN:"fsin",FCOS:"fcos",FTAN:"ftan",FASIN:"fasin",FACOS:"facos",FATAN:"fatan",FNEG:"fneg",FEXC:"fexc",FINT:"fint",FISNAN:"fisnan",FISINF:"fisinf",FLOG2:"flog2",FLOG10:"flog10",FLD0:"fld0",FLD1:"fld1",FLDE:"flde",FLDPI:"fldpi"};var D=(e,x,f)=>(e<0?"-":"")+(f===16?"0x":f===2?"0b":"")+(Math.abs(e)||0).toString(f).padStart(f===16?x:f===2?x*8:0,"0").toUpperCase(),M0=({size:e,instruction:x,opcode:f,base:t}={})=>{let r=e===3?(x&65280)>>>8:(x&16711680)>>>16,a=e===3?(x&983040)>>>16:(x&251658240)>>>24,i=e===3?(x&458752)>>>16:(x&117440512)>>>24,s=e===3?(x&983040)>>>16:(x&251658240)>>>24,c=!!(e===3?x&524288:x&134217728),n=!!(r&32),u=!!(r&16),R=!!(r&8),g=(r&192)>>6,p=!!(r&1),A=!!(r&2),O=!!(r&4),T=!(f===_.LD||f===_.ST),S=f===_.BR||f===_.BRS||f===_.CALL||f===_.CALLS,v=f===_.LD||f===_.ST,F=e===3?x&255:x&65535;v&&(F|=e===3?x&1792:x&458752);let I=-(F&262144)+(F&262143),U=-(F&32768)+(F&32767),$=-(F&128)+(F&127),l=`${f}`;if(S)if(!O)l=`${l} ${c?"!":""}${Ix[i]},`;else switch(s){case 0:break;case 2:l=`${l} .lt,`;break;case 3:l=`${l} .lte,`;break;case 4:l=`${l} .gt,`;break;case 5:l=`${l} .gte,`;break;case 10:l=`${l} .blo,`;break;case 11:l=`${l} .ble,`;break;case 12:l=`${l} .abv,`;break;case 13:l=`${l} .abe,`;break;default:l=`${l} .???,`}else(f===_.LD||f===_.LOOP||f===_.LOOPS)&&(l=`${l} ${E[a]},`);switch(g){case 0:n?l=`${l} ?${D(F,(e-2)*2,t)}?`:f===_.CALLS||f===_.BRS?l=`${l} ${D($,(e-2)*2,t)} `:f===_.CALL||f===_.BR?l=`${l} ${D(U,(e-2)*2,t)} `:l=`${l} ${D(F,(e-2)*2,t)} `;break;case 1:n?l=`${l} <${D(F,(e-2)*2,t)}>`:l=`${l} [${D(F,(e-2)*2,t)}]`;break;case 2:n?l=`${l} <BP+${D(I,(e-2)*2,t)}>`:l=`${l} [BP+${D(I,(e-2)*2,t)}]`;break;case 3:n?l=`${l} <D+${D(F,(e-2)*2,t)}>`:l=`${l} [D+${D(F,(e-2)*2,t)}]`;break}return u&&(l=`${l.substr(0,l.length-1)}, X${l.substr(l.length-1)}`),R&&(n?l=`${l}, Y`:l=`${l.substr(0,l.length-1)}, Y${l.substr(l.length-1)}`),S||f===_.ST&&(l=`${l}, ${E[a]}`),l};function zt(e,{base:x=16}={}){let f=!1,t=0,r=0,a=0,i=0,s,c,n;for(;!f&&i<e.length;){if(r=e[i],i+=1,r===void 0||(t=t<<8|r,a=i,a>4))return null;if(c=t>>(a-1<<3)&255,a===1&&(c===0&&(s=`${_.NOP}`),c===62&&(s=`${_.HALT}`),c===63&&(s=`${_.BRK}`),c===160&&(s=`${_.PUSHALL}`),c===161&&(s=`${_.POPALL}`),c===162&&(s=`${_.PUSHF}`),c===163&&(s=`${_.POPF}`),c===164&&(s=`${_.PUSHMM}`),c===165&&(s=`${_.POPMM}`),c===167&&(s=`${_.RET}`),c>=64&&c<=71&&(s=`${_.TRAP} ${E[c&7]}`),c>=176&&c<=183&&(s=`${_.SET} ${Ix[c&7]}`),c>=184&&c<=191&&(s=`${_.CLR} ${Ix[c&7]}`),c>=192&&c<=207&&(s=`${_.INC} ${E[c&15]}`),c>=208&&c<=223&&(s=`${_.DEC} ${E[c&15]}`),c>=224&&c<=239&&(s=`${_.PUSH} ${E[c&15]}`),c>=240&&c<=255&&(s=`${_.POP} ${E[c&15]}`)),n=a>1?t>>(a-2<<3)&255:0,a===2){if(c===1&&(s=`${_.ADD} ${E[(n&240)>>4]}, ${E[n&15]}`),c===2&&(s=`${_.SUB} ${E[(n&240)>>4]}, ${E[n&15]}`),c===3&&(s=`${_.CMP} ${E[(n&240)>>4]}, ${E[n&15]}`),c===4&&(s=`${_.AND} ${E[(n&240)>>4]}, ${E[n&15]}`),c===5&&(s=`${_.OR} ${E[(n&240)>>4]}, ${E[n&15]}`),c===6&&(s=`${_.TEST} ${E[(n&240)>>4]}, ${E[n&15]}`),c===7&&(s=`${_.XOR} ${E[(n&240)>>4]}, ${E[n&15]}`),c===8&&(s=`${_.TRAP} ${D(n,2,x)}`),c===9&&(n>=0&&n<=15&&(s=`${_.NOT} ${E[n&15]}`),n>=16&&n<=31&&(s=`${_.NEG} ${E[n&15]}`),n>=32&&n<=47&&(s=`${_.EXC} ${E[n&15]}`)),c===10&&(s=`${_.SHL} ${E[(n&240)>>4]}, ${D(n&15,2,x)}`),c===11&&(s=`${_.SHL} ${E[(n&240)>>4]}, ${E[n&15]}`),c===12&&(s=`${_.SHR} ${E[(n&240)>>4]}, ${D(n&15,2,x)}`),c===13&&(s=`${_.SHR} ${E[(n&240)>>4]}, ${E[n&15]}`),c===14&&(s=`${_.SWAP} ${E[(n&240)>>4]}, ${E[n&15]}`),c===15&&(s=`${_.MOV} ${E[(n&240)>>4]}, ${E[n&15]}`),c===56&&(s=`${_.ENTER} ${D(n,2,x)}`),c===57&&(s=`${_.EXIT} ${D(n,2,x)}`),c===168&&(s=`${_.MUL} ${E[(n&240)>>4]}, ${E[n&15]}`),c===169&&(s=`${_.DIV} ${E[(n&240)>>4]}, ${E[n&15]}`),c===170&&(s=`${_.MOD} ${E[(n&240)>>4]}, ${E[n&15]}`),c===171&&(s=`${_.SMUL} ${E[(n&240)>>4]}, ${E[n&15]}`),c===172&&(s=`${_.SDIV} ${E[(n&240)>>4]}, ${E[n&15]}`),c===173&&(s=`${_.SMOD} ${E[(n&240)>>4]}, ${E[n&15]}`),c===174)switch(n){case 0:s=`${_.FCLR}`;break;case 16:s=`${_.FADD}`;break;case 17:s=`${_.FSUB}`;break;case 18:s=`${_.FCMP}`;break;case 19:s=`${_.FMUL}`;break;case 20:s=`${_.FMOD}`;break;case 21:s=`${_.FDIV}`;break;case 22:s=`${_.FPOW}`;break;case 23:s=`${_.FSQRT}`;break;case 24:s=`${_.FNEG}`;break;case 25:s=`${_.FEXC}`;break;case 26:s=`${_.FINT}`;break;case 27:s=`${_.FABS}`;break;case 32:s=`${_.FSIN}`;break;case 33:s=`${_.FCOS}`;break;case 34:s=`${_.FTAN}`;break;case 36:s=`${_.FASIN}`;break;case 37:s=`${_.FACOS}`;break;case 38:s=`${_.FATAN}`;break;case 48:s=`${_.FISNAN}`;break;case 49:s=`${_.FISINF}`;break;case 50:s=`${_.FLOG2}`;break;case 51:s=`${_.FLOG10}`;break;case 112:s=`${_.FLD0}`;break;case 113:s=`${_.FLD1}`;break;case 114:s=`${_.FLDE}`;break;case 115:s=`${_.FLDPI}`;break}c>=72&&c<=79&&(c&1)==1&&(s=`${_.ADD} ${E[c&7]}, ${D(n,2,x)}`),c>=80&&c<=87&&(c&1)==1&&(s=`${_.SUB} ${E[c&7]}, ${D(n,2,x)}`),c>=88&&c<=95&&(c&1)==1&&(s=`${_.CMP} ${E[c&7]}, ${D(n,2,x)}`),c>=96&&c<=103&&(c&1)==1&&(s=`${_.AND} ${E[c&7]}, ${D(n,2,x)}`),c>=104&&c<=111&&(c&1)==1&&(s=`${_.OR} ${E[c&7]}, ${D(n,2,x)}`),c>=112&&c<=119&&(c&1)==1&&(s=`${_.TEST} ${E[c&7]}, ${D(n,2,x)}`),c>=120&&c<=127&&(c&1)==1&&(s=`${_.XOR} ${E[c&7]}, ${D(n,2,x)}`)}let u=a>2?t>>(a-3<<3)&255:0;if(a===3&&(c>=72&&c<=79&&(c&1)==0&&(s=`${_.ADD} ${E[c&7]}, ${D(n<<8|u,4,x)}`),c>=80&&c<=87&&(c&1)==0&&(s=`${_.SUB} ${E[c&7]}, ${D(n<<8|u,4,x)}`),c>=88&&c<=95&&(c&1)==0&&(s=`${_.CMP} ${E[c&7]}, ${D(n<<8|u,4,x)}`),c>=96&&c<=103&&(c&1)==0&&(s=`${_.AND} ${E[c&7]}, ${D(n<<8|u,4,x)}`),c>=104&&c<=111&&(c&1)==0&&(s=`${_.OR} ${E[c&7]}, ${D(n<<8|u,4,x)}`),c>=112&&c<=119&&(c&1)==0&&(s=`${_.TEST} ${E[c&7]}, ${D(n<<8|u,4,x)}`),c>=120&&c<=127&&(c&1)==0&&(s=`${_.XOR} ${E[c&7]}, ${D(u<<8|u,4,x)}`),c>=16&&c<=31&&(c&1)==1&&n===0&&(s=M0({size:a,instruction:t,base:x,opcode:_.LD})),c===48&&(s=`${_.IN} ${E[n>>>4]}, ${D(u,2,x)}`),c===49&&(s=`${_.OUT} ${D(u,2,x)}, ${E[n>>>4]}`),c>=128&&c<=143&&(n&1)==1&&(s=M0({size:a,instruction:t,base:x,opcode:_.LOOPS})),c>=144&&c<=159&&(n&1)==1&&(s=M0({size:a,instruction:t,base:x,opcode:n&2?_.CALLS:_.BRS})),c===174))switch(n){case 128:s=`${_.FLDR} ${E[u&15]}`;break;case 129:s=`${_.FLDM} [${E[(u&240)>>4]}, ${E[u&15]}]`;break;case 130:s=`${_.FLDIM} <${E[(u&240)>>4]}, ${E[u&15]}>`;break;case 132:s=`${_.FSTR} ${E[u&15]}`;break;case 133:s=`${_.FSTM} [${E[(u&240)>>4]}, ${E[u&15]}]`;break;case 134:s=`${_.FSTIM} <${E[(u&240)>>4]}, ${E[u&15]}>`;break;default:s="???"}let R=a>3?t>>(a-4<<3)&255:0;a===4&&(c>=16&&c<=31&&(c&1)==0&&n===0&&(s=M0({size:a,instruction:t,base:x,opcode:_.LD})),c>=16&&c<=31&&n!=0&&(s=M0({size:a,instruction:t,base:x,opcode:_.LD})),c>=32&&c<=47&&(s=M0({size:a,instruction:t,base:x,opcode:_.ST})),c>=128&&c<=143&&(n&1)==0&&(s=M0({size:a,instruction:t,base:x,opcode:_.LOOP})),c>=144&&c<=159&&(n&1)==0&&(s=M0({size:a,instruction:t,base:x,opcode:n&2?_.CALL:_.BR}))),f=s!==void 0}return f?{size:a,code:s,instruction:t}:null}function Ye(e,{base:x=16,addr:f}={}){let t=e.map(i=>i),r="",a=0;for(;t.length>0;){let i,s=1,c="",n=0;do{let R=t.slice(0,s+1);i=zt(R,x),s++}while(i===null&&s<t.length&&s<5);i?(n=i.size,c=i.code):(c="???",n=1);let u=t.splice(0,n);r+=(f!==void 0?D(f+a,5,16).substr(2)+": ":"")+u.map(R=>D(R,2,16).substr(2)).join(" ").padEnd(11," ")+"    "+c+`
`,a+=n}return r}var W0=(e,x=0)=>{let f=10**x;return Math.round(e*f)/f},p0=(e,{padWhole:x=0,padDecimal:f=2,padSign:t=0}={})=>{let[r,a]=Math.abs(e).toString().split(".");return`${(e<0?"-":"").padStart(t)}${r.padStart(x,"0")}${f?".":""}${(a||"").padEnd(f,"0")}`},Rf={PAUSED:"paused",RUNNING:"running",STEPPING:"stepping"},gf=class{constructor(x){this.computer=x}get state(){let x=Rf.PAUSED;return this.computer.running&&(x=Rf.RUNNING),this.computer.stepping&&this.computer.debug&&(x=Rf.STEPPING),x}dumpRegisters(){return[this.computer.processor.registers.A,this.computer.processor.registers.B,this.computer.processor.registers.C,this.computer.processor.registers.D,this.computer.processor.registers.X,this.computer.processor.registers.Y,this.computer.processor.registers.BP,this.computer.processor.registers.SP,this.computer.processor.registers.STATUS,this.computer.processor.registers.PC,this.computer.processor.registers.MP,this.computer.processor.registers.MM]}dumpFPU(){return[...this.computer.processor.fpu.stack,this.computer.processor.fpu.SP]}dumpFlags(){let x=this.computer.processor.registers;return{N:x.NEGATIVE,V:x.OVERFLOW,Z:x.ZERO,C:x.CARRY,EX:x.EXCEPTION,ID:x.INTERRUPT_DISABLE,IS:x.INTERRUPT_SERVICE,SS:x.SINGLE_STEP}}dumpMemory({start:x=0,length:f=256,width:t=16}={}){let r=Math.ceil(f/t),a=t;return Array.from({length:r},(i,s)=>[...Array.from({length:a},(c,n)=>this.computer.memory.readByte(x+(s*t+n)))])}disassembleMemory({start:x=0,length:f=16}={}){return Ye(Array.from({length:f},(t,r)=>this.computer.memory.readByte(x+r)),{addr:x})}dumpInstructionCache(){return this.computer.processor.internalState.cache}dumpTaskQueue({mapped:x=!1}={}){return this.computer.processor.internalState.tasks.reduce((f,t,r)=>{if(r%2===0)f.push([t,void 0]);else{let i=f.pop();i[1]=x?Pe(t):t,f.push(i)}return f},[])}dumpTaskStack(){return this.computer.processor.internalState.stack}dumpStatistics(){return{ticks:p0(this.computer.stats.processorStats.ticks,{padDecimal:0}),tasks:p0(this.computer.stats.processorStats.tasks,{padDecimal:0}),insts:p0(this.computer.stats.processorStats.insts,{padDecimal:0}),aluOps:p0(this.computer.stats.aluStats.ops,{padDecimal:0}),slices:p0(this.computer.stats.slices,{padDecimal:0}),microOpsPerSlice:p0(this.computer.stats.processorStatsLastSlice.tasks,{padDecimal:0}),instsPerSlice:p0(this.computer.stats.processorStatsLastSlice.insts,{padDecimal:0}),totalTime:p0(W0(this.computer.stats.time,0),{padDecimal:0}),timeThisSlice:p0(W0(this.computer.stats.timeThisSlice,0),{padDecimal:0}),MMOPs:p0(W0(this.computer.stats.processorStatsLastSecond.tasks/1e6,4),{padDecimal:4}),MIPs:p0(W0(this.computer.stats.processorStatsLastSecond.insts/1e6,4),{padDecimal:4}),MAOPs:p0(W0(this.computer.stats.aluStatsLastSecond.ops/1e6,4),{padDecimal:4}),microOpsPerInst:p0(W0(this.computer.stats.processorStatsLastSlice.insts!==0?this.computer.stats.processorStatsLastSlice.tasks/this.computer.stats.processorStatsLastSlice.insts:0,4),{padDecimal:4})}}resetStatistics(){this.computer.stats.slices=0,this.computer.stats.time=0,this.computer.processor.stats.ticks=0,this.computer.processor.stats.tasks=0,this.computer.processor.stats.insts=0,this.computer.processor.alu.stats.ops=0}};var Af=0,Zt=1,Ve=2,Ke=3,Qt=2;var Jt=1,Tf=class extends R0{_put(x){typeof process!="undefined"?process.stdout.write(x):console.log(x)}pullFromBus(x){if(super.pullFromBus(x),x===Af&&(this._read(Af)&Qt)!=0){let t=this._read(Ve);this._put(String.fromCharCode(t)),this._write(Ke,Jt)}}get mirrored(){return{[Af]:!0,[Ve]:!0,[Zt]:!0,[Ke]:!0}}};var Of=class extends Tf{constructor(x){super(x);this._output=""}_put(x){this._output+=x,x===`
`&&(console.log(this._output),this._output="")}};var Z0=0,Q0=1,J0=2,qe=3,Xe=4,je=5,ze=6,Ze=7,Qe=8,Je=9,xt=10,ft=11,U0=12,et=13,tt=14,st=15,rt=16,at=17,it=18,ct=19,ot=20,nt=21,dt=22,Pf=25,xs=26,xx=27,fx=28,H0=29,ex=30,Ff=31;var fs=60,q=640,J=480,yx=512,Lx=384;var o0=(q-yx)/2,n0=(J-Lx)/2,_t=1e3;var ht={FAST:1,SLOW:2},es={[Z0]:!0,[Q0]:!0,[J0]:!0,[U0]:!0,[Pf]:!0,[xs]:!0,[xx]:!0,[fx]:!0,[H0]:!0,[ex]:!0,[Ff]:!0},Df=class extends R0{constructor({device:x=1,length:f=32,controller:t,memory:r=void 0,clock:a=void 0,performance:i,stats:s}){super({device:x,length:f,controller:t,memory:r,clock:a});this._baseDevice=x,this._raster=0,this._column=0,this._delta=0,this._wait=!1,this._mode=ht.SLOW,this._performance=i,this._ticksPerRaster=8,this._ticksSinceRaster=0,this._ticksPerSecond=248e3,this._ticksThisSecond=0,this._ticksLastSecond=0,this._adjustPerformance=!0,this._lastPerformance=i.now(),this._startTime=this._lastPerformance,this._stats=s,this._frame=new Uint8Array(new ArrayBuffer(J*q*4)),this._pixelFrame=new Uint8Array(new ArrayBuffer(J*q)),this._cfg={},this._spritesByLayer=[[],[],[],[]],this.reset()}get adjustPerformance(){return this._adjustPerformance}set adjustPerformance(x){this._adjustPerformance=x}get frame(){return this._frame}get transferrableFrame(){let x=this._frame;return this._frame=new Uint8Array(new ArrayBuffer(J*q*4)),x}get ticksBetweenRasterLines(){return this._ticksPerRaster}set ticksBetweenRasterLines(x){this._ticksPerRaster=Number(x)}get mode(){return this._mode}set mode(x){this._mode=x}reset(){this._write(Z0,29),this._write(Q0,9),this._write(fx,128),this._write(xx,128),this._write(H0,0),this._write(ex,0),this._write(Ff,0),this._cfg={layers:Array.from({length:4},(x,f)=>({src:(f===0?128:0)|f+4,cfg:28,bg:0,fg:255,mode:0,visible:f===0?1:0,zIndex:f,page:f+4,scale:0,tilePage:28,yOffset:0,xOffset:0,yWindow:0,xWindow:0,lineSpacing:0})),sprites:Array.from({length:16},()=>({src:0,idx:0,page:0,zIndex:0,tilePage:28,dimensions:0,height:0,width:0,bg:0,fg:0,x:0,y:0,scale:0,visible:0,collided:0}))}}_read(x=0){let f=super._read(x);if(x>J0&&x<U0){let t=this._cfg.layers[this._read(J0)&3];switch(x){case qe:return t.src;case Xe:return t.cfg;case je:return t.bg;case ze:return t.fg;case Ze:return t.xOffset;case Qe:return t.yOffset;case Je:return t.xWindow;case xt:return t.yWindow;case ft:return t.mode}}if(x>U0&&x<Pf){let t=this._cfg.sprites[this._read(U0)&15];switch(x){case et:return t.src;case st:return t.cfg;case tt:return t.idx;case rt:return t.dimensions;case it:return t.fg;case at:return t.bg;case ct:return(t.x&65280)>>>8;case ot:return t.x&255;case nt:return(t.y&65280)>>>8;case dt:return t.y&255}}return f}_write(x=0,f=0){if(super._write(x,f),x>J0&&x<U0){let t=this._cfg.layers[this._read(J0)&3];switch(x){case qe:{t.src=f,t.visible=(t.src&128)>>>7,t.zIndex=(t.src&96)>>>5,t.page=t.src&31;return}case Xe:{t.cfg=f,t.scale=(t.cfg&192)>>6,t.lineSpacing=(t.cfg&32)>>5,t.tilePage=t.cfg&31;return}case je:return t.bg=f;case ze:return t.fg=f;case Ze:return t.xOffset=f;case Qe:return t.yOffset=f;case Je:return t.xWindow=f;case xt:return t.yWindow=f;case ft:return t.mode=f&3}}if(x>U0&&x<Pf){let t=this._cfg.sprites[this._read(U0)&15];switch(x){case et:{t.src=f,t.visible=(t.src&128)>>>7,t.zIndex=(t.src&96)>>>5,t.page=t.src&31;return}case st:{t.cfg=f,t.scale=(t.cfg&192)>>>6,t.tilePage=t.cfg&31;return}case tt:return t.idx=f;case rt:{t.dimensions=f,t.height=(t.dimensions&240)>>>4,t.width=t.dimensions&15;return}case it:return t.fg=f;case at:return t.bg=f;case ct:return t.x=t.x&255|f<<8;case ot:return t.x=t.x&65280|f;case nt:return t.y=t.y&255|f<<8;case dt:return t.y=t.y&65280|f}}}pullFromBus(x){switch(super.pullFromBus(x),x){case Ff:return this.resetWait()}}get mirrored(){return es}resetWait(){this._wait=!1,this._stats&&this._stats.begin()}tick(){if(super.tick(),this._ticksThisSecond++,this._mode===ht.FAST){if(this._ticksSinceRaster++,this._wait){this._ticksSinceRaster>this._ticksPerRaster&&(this._ticksSinceRaster=0,this._raster++,this._raster>480&&(this._raster=480)),this._write(ex,this._raster>>1);return}this._spritesByLayer=this._getSprites(),this._generateScreen(),this._raster=0,this._wait=!0,this.requestService(),this._write(ex,this._raster>>1),this._adjustRasterSpeed()}else{if(this._wait)return;this._ticksSinceRaster++,this._raster===0&&this._stats&&this._stats.begin(),this._ticksSinceRaster>=this._ticksPerRaster&&(this._ticksSinceRaster=0,this._generateRasterLine2(),this._raster++,this._raster>J&&(this._stats&&this._stats.end(),this._raster=0,this._wait=!0,this._spritesByLayer=this._getSprites()),this._raster===this._read(H0)<<1&&this.requestService(),this._write(ex,this._raster>>1),this._adjustRasterSpeed())}}_getLayers(){return this._cfg.layers}_getSprites(){let x=[[],[],[],[]],f=this._cfg.sprites;for(let t=0;t<16;t++){let r=f[t];r.visible===1&&(r.pageAddr=(r.page<<14)+(r.idx<<8)),r.tilePageAddr=r.tilePage<<14,r.xOffset=r.x-(r.x>32767?65536:0),r.yOffset=r.y-(r.y>32767?65536:0),r.maxWidth=r.width<<3,r.maxHeight=r.height<<3,x[r.zIndex&3].push(r)}return x}_drawPixelOnRaster(x,f,t,r,a){for(let i=(1<<t)-1;i>=0;i--)if(f+i===a)for(let s=(1<<t)-1;s>=0;s--){let c=(f+i)*q+(x+s);this._pixelFrame[c]=r}}_drawPixel(x,f,t,r){for(let a=(1<<t)-1;a>=0;a--)for(let i=(1<<t)-1;i>=0;i--){let s=(f+a)*q+(x+i);this._pixelFrame[s]=r}}_generateScreen(){this._stats&&this._stats.begin();let f=this._read(Z0)<<14,t=this._read(Q0),r=this._read(fx),a=r&128?this._read(xx):t,i=(r&7)<<1,s=(r&56)>>2,c=this._read(H0),n=this._raster,u=this._getLayers(),R=this._spritesByLayer;this._pixelFrame.fill(t);for(let g=0;g<4;g++){let p=u[g],A=R[g];if(p.visible){let O=p.page<<14,T=p.tilePage<<14,S=(p.mode&1)==0,v=q-(o0<<1)>>S,F=J-(n0<<1)>>S,I=p.xOffset-((p.xOffset>127)<<8)<<S,U=p.yOffset-((p.yOffset>127)<<8)<<S,$=p.xWindow<<S,l=v-$,x0=p.yWindow<<S,f0=F-x0,Z=p.scale+1-(p.mode&1);if(p.mode>=2){let N=Lx/(2-(p.mode&1)),V=yx/(2-(p.mode&1)),w=p.yWindow,B=N-p.yWindow,G=p.xWindow,r0=V-p.xWindow;for(let W=B-1;W>=w;W--)for(let k=r0-1;k>=G;k--){let M=o0+(k<<Z)+I,j=n0+(W<<Z)+U;if(M>=0&&j>=0&&M<q&&j<J){let y=this.memory.readUnmappedByte(O+(W<<8)+k);y===0&&(y=p.bg),y===255&&(y=p.fg),y!==0&&this._drawPixel(M,j,Z,y)}}}else{let N=24*(p.mode+1),V=32*(p.mode+1),w=p.yWindow,B=N-p.yWindow,G=p.xWindow,r0=V-p.xWindow,W=p.lineSpacing,k=8+W,M=k-1,j,y,e0,b0,l0,A0,m0,a0,Q,t0,H,K0=p.fg,z=p.bg;for(l0=B-1;l0>=w;l0--)for(a0=r0-1;a0>=G;a0--)for(j=(l0<<5+(p.mode!==0))+a0,y=this.memory.readUnmappedByte(O+j),e0=this.memory.readUnmappedByte(O+j+4096),b0=this.memory.readUnmappedByte(O+j+8192),A0=M;A0>=0;A0--)for(Q=7;Q>=0;Q--)t0=o0+(a0*8+Q<<Z)+I,m0=n0+(l0*k+A0<<Z)+U,t0>=0&&m0>=0&&t0<q&&m0<J&&(H=this.memory.readUnmappedByte(T+(y<<6)+(A0<<3)+Q),A0>7&&(y<128?H=0:H=this.memory.readUnmappedByte(T+(y<<6)+(7<<3)+Q)),H=H<1?b0:H<255?H:e0,H=H<1?z:H<255?H:K0,H!==0&&this._drawPixel(t0,m0,Z,H))}}for(let O=A.length-1;O>=0;O--){let T=A[O];if(T.visible){let S=T.height,v=T.width,F,I,U,$,l,x0,f0,Z,N,V,w,B,G=T.bg,r0=T.fg;for(F=S-1;F>=0;F--)for($=v-1;$>=0;$--)for(f0=F*v+$,Z=this.memory.readUnmappedByte(T.pageAddr+f0),N=this.memory.readUnmappedByte(T.pageAddr+f0+64),V=this.memory.readUnmappedByte(T.pageAddr+f0+128),w=T.scale,U=7;U>=0;U--)for(I=(F*8+U<<w)+T.yOffset,x0=7;x0>=0;x0--)l=($*8+x0<<w)+T.xOffset,B=this.memory.readUnmappedByte(T.tilePageAddr+(Z<<6)+(U<<3)+x0),B=B<1?V:B<255?B:N,B=B<1?G:B<255?B:r0,B!==0&&this._drawPixel(l,I,w,B)}}}for(let g=J-1;g>=0;g--)for(let p=q-1;p>=0;p--){let A=g*q+p,T=(g<n0+s||g>=J-(n0+s)||p<o0+i||p>=q-(o0+i)?a:this._pixelFrame[A])<<2,S=this.memory.readUnmappedByte(f+T+0),v=this.memory.readUnmappedByte(f+T+1),F=this.memory.readUnmappedByte(f+T+2),I=A*4;this._frame[I+0]=S,this._frame[I+1]=v,this._frame[I+2]=F,this._frame[I+3]=255}this._stats&&this._stats.end()}_generateRasterLine2(){let f=this._read(Z0)<<14,t=this._read(Q0),r=this._read(fx),a=r&128?this._read(xx):t,i=(r&7)<<1,s=(r&56)>>2,c=this._read(H0),n=this._raster,u=this._getLayers(),R=this._spritesByLayer;n===0&&this._pixelFrame.fill(t);for(let p=0;p<4;p++){let A=u[p],O=R[p];if(A.visible){let T=A.page<<14,S=A.tilePage<<14,v=(A.mode&1)==0,F=q-(o0<<1)>>v,I=J-(n0<<1)>>v,U=A.xOffset-((A.xOffset>127)<<8)<<v,$=A.yOffset-((A.yOffset>127)<<8)<<v,l=A.xWindow<<v,x0=F-l,f0=A.yWindow<<v,Z=I-f0,N=A.scale+1-(A.mode&1);if(A.mode>=2){let V=Lx/(2-(A.mode&1)),w=yx/(2-(A.mode&1)),B=A.yWindow,G=V-A.yWindow,r0=A.xWindow,W=w-A.xWindow,k=n;for(let M=W-1;M>=r0;M--){let j=o0+(M<<N)+U,y=n0+(k<<N)+$;if(j>=0&&y>=0&&j<q&&y<J){let e0=this.memory.readUnmappedByte(T+(k<<8)+M);e0===0&&(e0=A.bg),e0===255&&(e0=A.fg),e0!==0&&this._drawPixel(j,y,N,e0)}}}else{let V=24*(A.mode+1),w=32*(A.mode+1),B=A.yWindow,G=V-A.yWindow,r0=A.xWindow,W=w-A.xWindow,k=A.lineSpacing,M=8+k,j=M-1,y=Math.floor(n/M);for(let e0=W-1;e0>=r0;e0--){let b0=(y<<5+(A.mode!==0))+e0,l0=this.memory.readUnmappedByte(T+b0),A0=this.memory.readUnmappedByte(T+b0+4096),m0=this.memory.readUnmappedByte(T+b0+8192),a0=n%M,Q=n0+(y*M+a0<<N)+$;for(let t0=7;t0>=0;t0--){let H=o0+(e0*8+t0<<N)+U,K0=Q*q+H;if(H>=0&&Q>=0&&H<q&&Q<J){let z=this.memory.readUnmappedByte(S+(l0<<6)+(a0<<3)+t0);a0>7&&(l0<128?z=0:z=this.memory.readUnmappedByte(S+(l0<<6)+(7<<3)+t0)),z===0&&(z=m0),z===255&&(z=A0),z===0&&(z=A.bg),z===255&&(z=A.fg),z!==0&&this._drawPixel(H,Q,N,z)}}}}}for(let T=O.length-1;T>=0;T--){let S=O[T];if(S.visible){let v=S.height,F=S.width,I=S.scale;if(n<S.yOffset||n>S.yOffset+v*8<<I)continue;for(let U=v-1;U>=0;U--)for(let $=F-1;$>=0;$--){let l=U*F+$,x0=this.memory.readUnmappedByte(S.pageAddr+l),f0=this.memory.readUnmappedByte(S.pageAddr+l+64),Z=this.memory.readUnmappedByte(S.pageAddr+l+128);for(let N=7;N>=0;N--){let V=(U*8+N<<I)+S.yOffset;for(let w=7;w>=0;w--){let B=($*8+w<<I)+S.xOffset,G=this.memory.readUnmappedByte(S.tilePageAddr+(x0<<6)+(N<<3)+w);G=G<1?Z:G<255?G:f0,G=G<1?S.bg:G<255?G:S.fg,G!==0&&this._drawPixelOnRaster(B,V,I,G,n)}}}}}}let g=n;for(let p=q-1;p>=0;p--){let A=g*q+p,T=(g<n0+s||g>=J-(n0+s)||p<o0+i||p>=q-(o0+i)?a:this._pixelFrame[A])<<2,S=this.memory.readUnmappedByte(f+T+0),v=this.memory.readUnmappedByte(f+T+1),F=this.memory.readUnmappedByte(f+T+2),I=A*4;this._frame[I+0]=S,this._frame[I+1]=v,this._frame[I+2]=F,this._frame[I+3]=255}}_generateRasterLine(){let f=this._read(Z0)<<14,t=this._read(Q0),r=this._read(fx),a=r&128?this._read(xx):t,i=(r&7)<<1,s=(r&56)>>2,c=this._read(H0),n=this._raster,u=this._getLayers(),R=this._spritesByLayer,g=n,p=0,A=0,O=0,T=0,S=0,v=0,F=0,I=0,U,$,l,x0,f0,Z,N,V,w,B,G,r0,W,k,M,j,y,e0,b0,l0,A0,m0=0,a0=0,Q=0,t0=0,H=0,K0=0,z=0,qf=0,wx=[],d0;for(let C0=0;C0<q;C0++){if(C0<o0+i||C0>=yx+o0-i)T=a;else if(g<n0+s||g>=Lx+n0-s)T=a;else for(T=t,p=0;p<4;p++)for(l=u[p],l.visible===1&&(M=l.page<<14,j=l.tilePage<<14,y=(l.mode&1)==0,l0=l.lineSpacing,b0=8+l0,A0=b0-1,m0=q-(o0<<1)>>y,a0=J-(n0<<1)>>y,Q=l.xOffset-((l.xOffset>127)<<8)<<y,t0=l.yOffset-((l.yOffset>127)<<8)<<y,H=l.xWindow<<y,K0=m0-H,z=l.yWindow<<y,qf=a0-z,W=C0-o0-Q>>y>>l.scale,k=g-n0-t0>>y>>l.scale,W<H||W>=K0||k<z||k>=qf?S=0:l.mode>=2?S=this.memory.readUnmappedByte(M+(k<<8)+W):(x0=W>>>3,f0=W&7,Z=k/b0,N=k%b0,V=(Z<<5+(l.mode!==0))+x0,w=this.memory.readUnmappedByte(M+V),B=this.memory.readUnmappedByte(j+(w<<6)+(N<<3)+f0),N>7&&(w<128?B=0:B=this.memory.readUnmappedByte(j+(w<<6)+(7<<3)+f0)),G=this.memory.readUnmappedByte(M+V+4096),r0=this.memory.readUnmappedByte(M+V+8192),B===0?S=r0:B===255?S=G:S=B,S===0?S=l.bg:S===255&&(S=l.fg)),T=S!==0?S:T),wx=R[p],A=0,O=wx.length;A<O;A++)d0=wx[A],d0.visible===1&&(M=d0.pageAddr,j=d0.tilePageAddr,Q=d0.xOffset,t0=d0.yOffset,m0=d0.maxWidth,a0=d0.maxHeight,W=C0-Q>>d0.scale,k=g-t0>>d0.scale,S=0,W>=0&&W<m0&&k>=0&&k<a0&&(x0=W>>>3,f0=W&7,Z=k>>>3,N=k&7,V=Z*d0.width+x0,w=this.memory.readUnmappedByte(M+V),B=this.memory.readUnmappedByte(j+(w<<6)+(N<<3)+f0),G=this.memory.readUnmappedByte(M+V+64),r0=this.memory.readUnmappedByte(M+V+128),B===0?S=r0:B===255?S=G:S=B,S===0?S=d0.bg:S===255&&(S=d0.fg)),T=S!==0?S:T);U=T<<2,v=this.memory.readUnmappedByte(f+U+0),F=this.memory.readUnmappedByte(f+U+1),I=this.memory.readUnmappedByte(f+U+2),$=(g<<9)+(g<<7)+C0<<2,this._frame[$+0]=v,this._frame[$+1]=F,this._frame[$+2]=I,this._frame[$+3]=255}}_adjustRasterSpeed(){let x=this._performance.now();if(x>=this._lastPerformance+_t){let f=(x-this._lastPerformance)/_t;this._lastPerformance=x,this._ticksPerSecond=(this._ticksLastSecond+this._ticksThisSecond/f)/2,this.adjustPerformance&&(this._ticksPerRaster=Math.floor(this._ticksPerSecond/(fs*J))),this._ticksLastSecond=this._ticksThisSecond/f,this._ticksThisSecond=0}}};var Y0=0,V0=4,Mx=8,Bf=12,ut=13,Cx=10,Nx=14,ts=1,ss=2,rs=4,as={[Y0+0]:!0,[Y0+1]:!0,[Y0+2]:!0,[V0+0]:!0,[V0+1]:!0,[V0+2]:!0,[Mx+0]:!0,[Mx+1]:!0,[Bf]:!0,[ut]:!0,[Cx]:!0,[Cx+1]:!0,[Nx]:!0,[Nx+1]:!0},If=class extends R0{constructor({device:x=13,length:f=16,controller:t,memory:r=void 0,clock:a=void 0}){super({device:x,length:f,controller:t,memory:r,clock:a})}pullFromBus(x){if(super.pullFromBus(x),x===Bf){let f=(this._read(Y0+0)<<16|this._read(Y0+1)<<8|this._read(Y0+2))&524287,t=(this._read(V0+0)<<16|this._read(V0+1)<<8|this._read(V0+2))&524287,r=(this._read(Mx+0)<<8|this._read(Mx+1))&65535,a=this._read(ut),i=(this._read(Cx)<<8|this._read(Cx+1))&65535,s=(this._read(Nx)<<8|this._read(Nx+1))&65535,c=this._read(Bf);do{switch(c){case ts:this.memory.copyWithin(f,t,r);break;case ss:this.memory.swapWithin(f,t,r);break;case rs:this.memory.fillWithin(a,f,r);break}s--,f+=i,t+=i}while(s>0)}}get mirrored(){return as}};var yf=0,pt=1,is=2,cs=3,os=4,ns=5,ds=6,_s=7,Lf=8,Mf=9,tx=10,hs=11,us={[yf]:!0,[pt]:!0,[is]:!0,[cs]:!0,[os]:!0,[ns]:!0,[ds]:!0,[_s]:!0,[Lf]:!0,[Mf]:!0,[tx]:!0,[hs]:!0};var ps=8,lt=9;var ls=12,sx=13,rx=16,ax=17,ix=18,cx=19,ox=20,nx=21,dx=22,_x=23,hx=24,ux=25,px=26,lx=27,St=29,Sx=30,bx=31,Ss=[[["Backquote","`","~",255,142,0],[["Digit1","Numpad1"],"1","!",228,134,28],[["Digit2","Numpad2"],"2","@",229,135,29],[["Digit3","Numpad3"],"3","#",251,136,30],[["Digit4","Numpad4"],"4","$",240,152,31],[["Digit5","Numpad5"],"5","%",241,168,0],[["Digit6","Numpad6"],"6","^",242,150,0],[["Digit7","Numpad7"],"7","&",243,151,0],[["Digit8","Numpad8","NumpadMultiply"],"8","*",244,166,0],[["Digit9","Numpad9"],"9","(",245,167,0],[["Digit0","Numpad0"],"0",")",246,158,27],[["Minus","NumpadSubtract"],"-","_",237,147,0],[["Equal","NumpadEqual","NumpadAdd"],"=","+",235,149,0],["Backspace",ps,St,127,St,ls],["F1",ix,ix,ix,ix,ix],["F2",cx,cx,cx,cx,cx]],[["Tab",lt,lt,0,0,0],["KeyQ","q","Q",218,213,"Q".charCodeAt(0)-64],["KeyW","w","W",194,209,"W".charCodeAt(0)-64],["KeyE","e","E",191,184,"E".charCodeAt(0)-64],["KeyR","r","R",201,214,"R".charCodeAt(0)-64],["KeyT","t","T",203,210,"T".charCodeAt(0)-64],["KeyY","y","Y",187,183,"Y".charCodeAt(0)-64],["KeyU","u","U",233,227,"U".charCodeAt(0)-64],["KeyI","i","I",223,196,"I".charCodeAt(0)-64],["KeyO","o","O",232,226,"O".charCodeAt(0)-64],["KeyP","p","P",178,131,"P".charCodeAt(0)-64],["BracketLeft","[","{",236,133,0],["BracketRight","]","}",234,132,0],["Backslash","\\","|",239,164,0],["F3",ox,ox,ox,ox,ox],["F4",nx,nx,nx,nx,nx]],[["CapsLock",0,0,0,0,0],["KeyA","a","A",195,198,"A".charCodeAt(0)-64],["KeyS","s","S",197,216,"S".charCodeAt(0)-64],["KeyD","d","D",180,181,"D".charCodeAt(0)-64],["KeyF","f","F",204,199,"F".charCodeAt(0)-64],["KeyG","g","G",206,215,"G".charCodeAt(0)-64],["KeyH","h","H",185,182,"H".charCodeAt(0)-64],["KeyJ","j","J",221,179,"J".charCodeAt(0)-64],["KeyK","k","K",219,159,"K".charCodeAt(0)-64],["KeyL","l","L",222,186,"L".charCodeAt(0)-64],["Semicolon",";",":",176,163,0],["Quote","'",'"',177,165,0],void 0,[["Enter","NumpadEnter"],sx,sx,sx,sx,sx],["F5",dx,dx,dx,dx,dx],["F6",_x,_x,_x,_x,_x]],[["ShiftLeft",0,0,0,0,0],["KeyZ","z","Z",192,212,"Z".charCodeAt(0)-64],["KeyX","x","X",193,207,"X".charCodeAt(0)-64],["KeyC","c","C",217,190,"C".charCodeAt(0)-64],["KeyV","v","V",200,211,"V".charCodeAt(0)-64],["KeyB","b","B",202,208,"B".charCodeAt(0)-64],["KeyN","n","N",188,189,"N".charCodeAt(0)-64],["KeyM","m","M",231,225,"M".charCodeAt(0)-64],["Comma",",","<",220,205,0],[["Period","NumpadDecimal"],".",">",230,224,0],[["Slash","NumpadDivide"],"/","?",238,143,0],void 0,["ArrowUp",Sx,Sx,Sx,Sx,Sx],["ShiftRight",0,0,0,0,0],["F7",hx,hx,hx,hx,hx],["F8",ux,ux,ux,ux,ux]],[[["MetaLeft","MetaRight"],0,0,0,0,0],[["AltLeft","AltRight"],0,0,0,0,0],[["ControlLeft","ControlRight"],0,0,0,0,0],void 0,void 0,void 0,void 0,void 0,["Space",32,32,32,32,32],void 0,void 0,["ArrowLeft",ax,ax,ax,ax,ax],["ArrowDown",bx,bx,bx,bx,bx],["ArrowRight",rx,rx,rx,rx,rx],["F9",px,px,px,px,px],["F10",lx,lx,lx,lx,lx]]],Cf={};Ss.map((e,x)=>e&&e.map((f,t)=>{if(f){let[r,a,i,s,c,n]=f,u={addr:x*16+t,unshifted:a,shifted:i,gru:s,grs:c,ctl:n};if(typeof u.unshifted=="string"&&(u.unshifted=u.unshifted.charCodeAt(0)),typeof u.shifted=="string"&&(u.shifted=u.shifted.charCodeAt(0)),typeof u.gru=="string"&&(u.gru=u.gru.charCodeAt(0)),typeof u.grs=="string"&&(u.grs=u.grs.charCodeAt(0)),typeof u.ctl=="string"&&(u.ctl=u.ctl.charCodeAt(0)),Array.isArray(r))for(let R of r)Cf[R]=u;else Cf[r]=u}}));function bt(e){let x=Cf[e];if(x){let f=x.addr;if(f!==void 0){let t=f&7,r=(f&248)>>3;return{mask:~(1<<t),bit:t,port:r+2,data:x}}return{}}return{}}var Nf=class extends R0{constructor({device:x=3,length:f=16,controller:t,memory:r=void 0,clock:a=void 0}){super({device:x,length:f,controller:t,memory:r,clock:a});this._buffer=""}get isShifted(){return this._read(Lf)&1||this._read(Mf)&32}get isGr(){return!!(this._read(tx)&2)}get isCtl(){return!!(this._read(tx)&4)}setRawKey(x,f){let t=f&7,r=2+((x*16+f&248)>>3),a=~(1<<t),i=this._read(r);this._write(r,i&a|1<<t)}clearRawKey(x,f){let t=f&7,r=2+((x*16+f&248)>>3),a=~(1<<t),i=this._read(r);this._write(r,i&a)}getRawKey(x,f){let t=f&7,r=2+((x*16+f&248)>>3),a=~(1<<t);return this._read(r)&1<<t?1:0}keyPressed(x){this._buffer+=String.fromCharCode(x),this.requestService()}keyDown(x){let{mask:f,port:t,bit:r,data:a}=bt(x);if(t!==void 0){let i=this._read(t);this._write(t,i&f|1<<r)}if(a){let i=this._read(Lf)&1||this._read(Mf)&32,s=!!(this._read(tx)&2),c=!!(this._read(tx)&4),n;if(c){this.keyPressed(a.ctl);return}if(!s&&!i){this.keyPressed(a.unshifted);return}if(!s&&i){this.keyPressed(a.shifted);return}if(s&&!i){this.keyPressed(a.gru);return}if(s&&i){this.keyPressed(a.grs);return}}this.requestService()}keyUp(x){let{mask:f,port:t,data:r}=bt(x);if(t!==void 0){let a=this._read(t);this._write(t,a&f)}this.requestService()}_read(x=0){let f=super._read(x);return x===yf&&(f=this._buffer.charCodeAt(0)),x===pt&&(f=255-Math.min(this._buffer.length,255)),f}putOnBus(x=0){super.putOnBus(x),x===yf&&(this._buffer=this._buffer.substr(1))}get mirrored(){return us}};var mt=0,Et=1,Rt=2,gt=3,wf=4,kf=5,vf=6,Uf=7,$f=8,Gf=9,Wf=10,Hf=11,Yf=12,Vf=13,At=14,bs=15,ms={[mt]:!0,[Et]:!0,[Rt]:!0,[gt]:!0,[wf]:!0,[kf]:!0,[vf]:!0,[Uf]:!0,[$f]:!0,[Gf]:!0,[Wf]:!0,[Hf]:!0,[At]:!0,[Yf]:!0,[Vf]:!0,[bs]:!0},mx={DISABLED:0,ONE_SHOT:1,MULTI_SHOT:2,RANDOM:3},Kf=class extends R0{constructor({device:x=0,length:f=16,controller:t,memory:r=void 0,clock:a=void 0,performance:i}){super({device:x,length:f,controller:t,memory:r,clock:a});this._timers=Array.from({length:5},(s,c)=>({mode:c<4?mx.DISABLED:mx.RANDOM,cur:0,dur:0,start:0,read:void 0})),this._performance=i,this._lastTime=i.now(),this._tickSkip=0}tick(){if(super.tick(),this._tickSkip>0){this._tickSkip--;return}this._tickSkip=100;let x=this._performance.now(),f=this._lastTime,t=x-f;this._lastTime=x;for(let r=0;r<this._timers.length;r++){let a=this._timers[r];switch(a.mode){case mx.ONE_SHOT:a.cur<a.dur?a.cur=a.cur+t:(a.read=a.cur,a.cur=0,a.dur=0,this.requestService());break;case mx.MULTI_SHOT:a.cur=a.cur+t,a.cur>=a.dur&&(a.read=a.cur,a.cur-=a.dur,this.requestService());break;case mx.RANDOM:a.cur=Math.floor(Math.random()*65536),a.read===void 0&&(a.read=a.cur);break}}}_write(x=0,f){switch(super._write(x,f),x){case Yf:case Wf:case $f:case vf:case wf:this._timers[x-4>>1].dur=this[k0][x]<<8|this[k0][x+1],this._timers[x-4>>1].cur=0;break;case At:this._timers[0].mode=f&3,this._timers[1].mode=(f&12)>>2,this._timers[2].mode=(f&48)>>4,this._timers[3].mode=(f&192)>>6;break}}_read(x=0){let f=super._read(x);switch(x){case mt:f=new Date().getHours();break;case Et:f=new Date().getMinutes();break;case Rt:f=new Date().getSeconds();break;case gt:f=Math.floor(new Date().getMilliseconds()/10);break;case Yf:case Wf:case $f:case vf:case wf:f=this._timers[x-4>>1].read,f===void 0&&(f=Math.floor(this._timers[x-4>>1].cur)),f=(f&65280)>>8;break;case Vf:case Hf:case Gf:case Uf:case kf:f=this._timers[x-4>>1].read,f===void 0&&(f=Math.floor(this._timers[x-4>>1].cur)),f=f&255;break}return f}putOnBus(x=0){switch(super.putOnBus(x),x){case Vf:case Hf:case Gf:case Uf:case kf:this._timers[x-4>>1].read!==void 0&&(this._timers[x-4>>1].read=void 0);break}}get mirrored(){return ms}};var Tt=[{addr:0,data:[167,167]},{addr:4352,data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{addr:45056,data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,23,22,22,23,22,19,21,23,37,64,180,157,20,0,0,0,48,80,0,167,37,64,180,165,49,16,0,167]},{addr:458752,data},{addr:475136,data:[0,0,0,0,0,0,63,0,0,63,0,0,0,63,63,0,63,0,0,0,63,0,63,0,63,63,0,0,63,63,63,0,0,0,0,0,0,0,127,0,0,127,0,0,0,127,127,0,127,0,0,0,127,0,127,0,127,127,0,0,127,127,127,0,0,0,0,0,0,0,255,0,0,255,0,0,0,255,255,0,255,0,0,0,255,0,255,0,255,255,0,0,255,255,255,0,0,0,0,0,16,16,16,0,32,32,32,0,48,48,48,0,64,64,64,0,80,80,80,0,96,96,96,0,112,112,112,0,128,128,128,0,144,144,144,0,160,160,160,0,176,176,176,0,192,192,192,0,208,208,208,0,224,224,224,0,240,240,240,0,0,0,0,0,0,0,51,0,0,0,102,0,0,0,153,0,0,0,204,0,0,0,255,0,0,51,0,0,0,51,51,0,0,51,102,0,0,51,153,0,0,51,204,0,0,51,255,0,0,102,0,0,0,102,51,0,0,102,102,0,0,102,153,0,0,102,204,0,0,102,255,0,0,153,0,0,0,153,51,0,0,153,102,0,0,153,153,0,0,153,204,0,0,153,255,0,0,204,0,0,0,204,51,0,0,204,102,0,0,204,153,0,0,204,204,0,0,204,255,0,0,255,0,0,0,255,51,0,0,255,102,0,0,255,153,0,0,255,204,0,0,255,255,0,51,0,0,0,51,0,51,0,51,0,102,0,51,0,153,0,51,0,204,0,51,0,255,0,51,51,0,0,51,51,51,0,51,51,102,0,51,51,153,0,51,51,204,0,51,51,255,0,51,102,0,0,51,102,51,0,51,102,102,0,51,102,153,0,51,102,204,0,51,102,255,0,51,153,0,0,51,153,51,0,51,153,102,0,51,153,153,0,51,153,204,0,51,153,255,0,51,204,0,0,51,204,51,0,51,204,102,0,51,204,153,0,51,204,204,0,51,204,255,0,51,255,0,0,51,255,51,0,51,255,102,0,51,255,153,0,51,255,204,0,51,255,255,0,102,0,0,0,102,0,51,0,102,0,102,0,102,0,153,0,102,0,204,0,102,0,255,0,102,51,0,0,102,51,51,0,102,51,102,0,102,51,153,0,102,51,204,0,102,51,255,0,102,102,0,0,102,102,51,0,102,102,102,0,102,102,153,0,102,102,204,0,102,102,255,0,102,153,0,0,102,153,51,0,102,153,102,0,102,153,153,0,102,153,204,0,102,153,255,0,102,204,0,0,102,204,51,0,102,204,102,0,102,204,153,0,102,204,204,0,102,204,255,0,102,255,0,0,102,255,51,0,102,255,102,0,102,255,153,0,102,255,204,0,102,255,255,0,153,0,0,0,153,0,51,0,153,0,102,0,153,0,153,0,153,0,204,0,153,0,255,0,153,51,0,0,153,51,51,0,153,51,102,0,153,51,153,0,153,51,204,0,153,51,255,0,153,102,0,0,153,102,51,0,153,102,102,0,153,102,153,0,153,102,204,0,153,102,255,0,153,153,0,0,153,153,51,0,153,153,102,0,153,153,153,0,153,153,204,0,153,153,255,0,153,204,0,0,153,204,51,0,153,204,102,0,153,204,153,0,153,204,204,0,153,204,255,0,153,255,0,0,153,255,51,0,153,255,102,0,153,255,153,0,153,255,204,0,153,255,255,0,204,0,0,0,204,0,51,0,204,0,102,0,204,0,153,0,204,0,204,0,204,0,255,0,204,51,0,0,204,51,51,0,204,51,102,0,204,51,153,0,204,51,204,0,204,51,255,0,204,102,0,0,204,102,51,0,204,102,102,0,204,102,153,0,204,102,204,0,204,102,255,0,204,153,0,0,204,153,51,0,204,153,102,0,204,153,153,0,204,153,204,0,204,153,255,0,204,204,0,0,204,204,51,0,204,204,102,0,204,204,153,0,204,204,204,0,204,204,255,0,204,255,0,0,204,255,51,0,204,255,102,0,204,255,153,0,204,255,204,0,204,255,255,0,255,0,0,0,255,0,51,0,255,0,102,0,255,0,153,0,255,0,204,0,255,0,255,0,255,51,0,0,255,51,51,0,255,51,102,0,255,51,153,0,255,51,204,0,255,51,255,0,255,102,0,0,255,102,51,0,255,102,102,0,255,102,153,0,255,102,204,0,255,102,255,0,255,153,0,0,255,153,51,0,255,153,102,0,255,153,153,0,255,153,204,0,255,153,255,0,255,204,0,0,255,204,51,0,255,204,102,0,255,204,153,0,255,204,204,0,255,204,255,0,255,255,0,0,255,255,51,0,255,255,102,0,255,255,153,0,255,255,204,0,255,255,255,0]},{addr:491520,data:[5,21,32,15,255,3,255,4,0,0,255,0,164,0,0,19,19,255,0,32,0,18,0,0,5,21,32,255,255,4,18,32,5,24,32,255,255,4,16,0,6,42,64,255,255,5,9,32,6,48,64,255,255,5,8,0]},{addr:499712,data:[12,27,49,55,18,219,219,219,219,219,219,219,219,219,219,219,13,27,49,56,18,219,227,220,232,219,219,219,219,219,219,27,50,53,53,18,32,32,82,69,84,82,79,80,85,84,69,82,32,66,65,83,73,67,32,49,46,48,27,49,57,18,219,222,219,222,219,219,219,219,219,27,50,53,53,18,32,32,32,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,27,50,48,18,219,227,220,232,219,219,219,219,27,50,53,53,18,13,27,50,49,18,219,222,219,221,219,219,219,27,50,53,53,18,32,32,32,49,51,49,48,55,50,32,67,111,100,101,32,66,121,116,101,115,32,70,114,101,101,27,50,50,18,219,222,219,221,219,219,27,50,53,53,18,32,32,32,32,32,54,53,53,51,54,32,72,101,97,112,32,66,121,116,101,115,32,70,114,101,101,27,50,51,18,219,219,219,219,219,27,50,53,53,18,13,0,13,82,69,65,68,89,46,13,0,83,89,78,84,65,88,0,84,89,80,69,32,77,73,83,77,65,84,67,72,0,85,78,68,69,70,73,78,69,68,32,83,85,66,82,79,85,84,73,78,69,0,85,78,68,69,70,73,78,69,68,32,70,85,78,67,84,73,79,78,0,85,78,68,69,70,73,78,69,68,32,83,84,65,84,69,77,69,78,84,0,73,78,83,85,70,70,73,67,73,69,78,84,32,65,82,71,85,77,69,78,84,83,0,84,79,79,32,77,65,78,89,32,65,82,71,85,77,69,78,84,83,0,67,65,78,39,84,32,67,79,78,84,73,78,85,69,0,79,85,84,32,79,70,32,68,65,84,65,0,68,69,70,70,78,32,87,73,84,72,79,85,84,32,69,78,68,70,78,0,68,69,70,83,85,66,32,87,73,84,72,79,85,84,32,69,78,68,83,85,66,0,78,79,84,32,69,78,79,85,71,72,32,77,69,77,79,82,89,0,79,85,84,32,79,70,32,77,69,77,79,82,89,0,73,78,86,65,76,73,68,32,81,85,65,78,84,73,84,89,0,68,79,32,87,73,84,72,79,85,84,32,76,79,79,80,0,77,73,83,77,65,84,67,72,69,68,32,78,69,88,84,0,73,70,32,87,73,84,72,79,85,84,32,69,78,68,73,70,0,69,76,83,69,32,87,73,84,72,79,85,84,32,73,70,0,69,78,68,73,70,32,87,73,84,72,79,85,84,32,73,70,0,69,76,83,69,73,70,32,87,73,84,72,79,85,84,32,73,70,0,70,73,76,69,32,78,79,84,32,70,79,85,78,68,0,82,69,84,85,82,78,32,87,73,84,72,79,85,84,32,67,65,76,76,32,79,82,32,71,79,83,85,66,0,79,85,84,32,79,70,32,68,73,83,75,32,83,80,65,67,69,0,70,73,76,69,32,69,88,73,83,84,83,0,83,84,79,80,80,69,68,0,83,84,82,73,78,71,32,84,79,79,32,76,79,78,71,0,76,73,78,69,32,84,79,79,32,76,79,78,71,0,78,69,88,84,32,87,73,84,72,79,85,84,32,70,79,82,0,87,72,73,76,69,32,87,73,84,72,79,85,84,32,76,79,79,80,0,85,78,84,73,76,32,87,73,84,72,79,85,84,32,76,79,79,80,0,76,79,79,80,32,87,73,84,72,79,85,84,32,68,79,0,69,88,80,82,69,83,83,73,79,78,32,84,79,79,32,67,79,77,80,76,69,88,0,83,84,65,67,75,32,79,86,69,82,70,76,79,87,0,69,88,80,69,67,84,69,68,32,65,32,81,85,79,84,69,0,69,88,80,69,67,84,69,68,32,76,69,70,84,32,80,65,82,69,78,0,69,88,80,69,67,84,69,68,32,82,73,71,72,84,32,80,65,82,69,78,0,69,88,80,69,67,84,69,68,32,76,69,70,84,32,66,82,65,67,75,69,84,0,69,88,80,69,67,84,69,68,32,82,73,71,72,84,32,66,82,65,67,75,69,84,0,78,79,84,32,73,77,80,76,69,77,69,78,84,69,68,0,13,63,0,32,69,82,82,79,82,0,13,32,65,84,32,76,73,78,69,32,0,160,224,160,231,160,245,161,10,161,29,161,49,161,72,161,91,161,106,161,118,161,138,161,160,161,178,161,192,161,209,161,225,161,241,162,2,162,18,162,35,162,53,162,68,162,97,162,115,162,127,162,135,162,151,162,165,162,182,162,201,162,220,162,236,163,3,163,18,163,35,163,55,163,76,163,98,163,121,163,137,163,140,163,147,65,66,83,0,128,65,78,68,0,129,65,83,67,0,130,65,83,77,0,131,65,84,78,0,132,65,84,0,133,67,65,76,76,0,134,67,65,84,65,76,79,71,0,135,67,72,82,83,36,0,136,67,72,82,36,0,137,67,73,82,67,76,69,0,138,67,76,83,0,139,67,76,79,83,69,0,140,67,79,78,84,73,78,85,69,0,141,67,79,78,84,0,141,67,79,76,79,82,0,142,67,79,80,89,0,143,67,79,83,0,144,68,65,84,65,0,145,68,69,70,0,146,68,73,77,0,147,68,79,0,148,68,82,65,87,0,149,69,76,83,69,0,150,69,78,68,0,151,69,88,80,0,152,70,73,76,76,0,153,70,78,0,154,70,79,82,0,155,70,82,79,77,0,156,71,79,83,85,66,0,157,71,79,84,79,0,158,72,69,88,36,0,159,73,70,0,160,73,78,80,85,84,0,161,73,78,84,0,162,73,78,0,163,75,69,89,36,0,164,76,65,89,69,82,0,165,76,69,70,84,36,0,166,76,69,78,0,167,76,69,84,0,168,76,73,78,69,0,169,76,73,83,84,0,170,76,79,65,68,0,171,76,79,67,65,76,0,172,76,79,71,0,173,76,79,79,80,0,174,76,79,87,69,82,36,0,175,77,69,77,0,176,77,73,68,36,0,177,77,79,68,69,0,178,77,79,85,83,69,0,179,78,69,87,0,180,78,69,88,84,0,181,78,79,84,0,182,79,70,70,0,183,79,78,0,184,79,80,69,78,0,185,79,82,0,186,79,85,84,0,187,80,69,69,75,0,188,80,76,65,89,0,189,80,79,73,78,84,0,190,80,79,75,69,0,191,80,82,73,78,84,0,192,63,0,192,82,69,65,68,0,193,82,69,67,84,0,194,82,69,77,0,195,39,0,195,82,69,84,85,82,78,0,196,82,73,71,72,84,36,0,197,82,78,68,0,198,82,69,78,65,77,69,0,199,82,69,77,79,86,69,0,200,82,69,83,84,79,82,69,0,201,82,85,78,0,202,83,65,86,69,0,203,83,67,82,69,69,78,0,204,83,71,78,0,205,83,73,78,0,206,83,73,90,69,0,207,83,79,85,82,67,69,0,208,83,80,67,0,209,83,80,82,65,84,84,82,0,210,83,80,82,73,84,69,0,211,83,81,82,0,212,83,84,65,84,85,83,0,213,83,84,69,80,0,214,83,84,73,67,75,0,215,83,84,79,80,0,216,83,84,82,36,0,217,83,85,66,0,218,83,87,65,80,0,219,84,65,66,0,220,84,65,78,0,221,84,72,69,78,0,222,84,73,76,69,83,69,84,0,223,84,73,77,69,0,224,84,79,0,225,85,78,84,73,76,0,226,85,80,80,69,82,36,0,227,85,83,82,0,228,86,65,76,0,229,87,72,73,76,69,0,230,43,0,231,45,0,232,45,0,233,42,0,234,47,0,235,37,0,236,94,0,237,60,62,0,238,33,61,0,238,60,61,0,239,61,60,0,239,62,61,0,240,61,62,0,240,60,0,241,62,0,242,61,0,243,40,0,244,41,0,245,44,0,246,59,0,247,58,0,248,0,163,242,0,1,163,247,0,4,163,252,0,1,164,1,0,2,164,6,0,1,164,11,0,2,164,15,0,2,164,21,0,2,164,30,0,1,164,37,0,1,164,43,0,2,164,51,0,2,164,56,0,2,164,63,0,2,164,79,0,2,164,86,0,2,164,92,0,1,164,97,0,2,164,103,64,2,164,108,0,2,164,113,64,2,164,117,0,2,164,123,192,2,164,129,128,2,164,134,0,1,164,139,0,2,164,145,0,2,164,149,64,2,164,154,0,2,164,160,0,2,164,167,0,2,164,173,0,1,164,179,0,2,164,183,0,2,164,190,0,1,164,195,0,1,164,199,0,1,164,205,0,2,164,212,0,1,164,219,0,1,164,224,0,2,164,229,0,2,164,235,0,2,164,241,0,2,164,247,0,2,164,254,0,1,165,3,128,2,165,9,0,1,165,17,0,2,165,22,0,1,165,28,0,2,165,34,0,1,165,41,0,2,165,46,128,2,165,52,0,4,165,57,0,2,165,62,0,2,165,66,0,2,165,72,0,4,165,76,0,2,165,81,0,1,165,87,0,2,165,93,0,2,165,100,0,2,165,106,0,2,165,116,0,2,165,122,0,2,165,128,0,2,165,136,0,2,165,144,0,1,165,152,0,1,165,157,0,2,165,165,0,2,165,173,0,2,165,182,0,2,165,187,0,2,165,193,0,2,165,201,0,1,165,206,0,1,165,211,0,2,165,217,0,2,165,225,0,1,165,230,0,1,165,239,0,2,165,247,0,1,165,252,0,1,166,4,0,2,166,10,0,1,166,17,0,2,166,23,0,1,166,29,0,2,166,34,0,2,166,40,0,1,166,45,0,1,166,50,96,2,166,56,0,2,166,65,0,1,166,71,0,2,166,75,0,2,166,82,0,1,166,90,0,1,166,95,0,1,166,100,0,2,166,107,0,4,166,110,0,4,166,113,0,4,166,116,0,4,166,119,0,4,166,122,0,4,166,125,0,4,166,128,0,4,166,136,0,4,166,144,0,4,166,152,0,4,166,155,0,4,166,158,0,4,166,161,0,8,166,164,0,8,166,167,0,8,166,170,0,8,166,173,0,8,163,242,0,6,0,0,0,0,164,15,0,11,164,97,0,5,164,123,0,3,164,139,0,4,164,160,0,2,164,173,0,1,164,179,0,4,0,0,0,0,164,199,0,1,164,205,0,11,165,17,0,4,165,41,0,3,165,57,0,5,165,81,0,5,0,0,0,0,165,116,0,10,165,187,0,17,166,40,0,6,166,75,0,3,166,95,0,1,166,100,0,1,0,0,0,0,0,0,0,0,0,0,0,0,166,107,0,18]},{addr:507904,data:[26,0,0,22,22,0,224,0,24,0,128,0,17,216,0,0,22,0,0,0,24,0,17,0,33,216,0,0,218,154,0,255,227,17,0,29,49,16,16,17,0,9,49,16,17,17,0,128,49,16,43,17,0,128,49,16,44,17,0,0,49,16,45,17,0,0,49,16,18,49,16,23,49,16,24,49,16,25,49,16,26,49,16,27,17,0,132,49,16,19,17,0,60,49,16,20,17,64,17,18,49,16,21,17,64,17,17,49,16,22,17,0,0,33,64,17,24,17,0,0,33,64,17,23,17,64,17,12,33,64,16,0,17,0,255,33,64,16,64,17,0,0,33,64,16,128,17,0,15,49,16,28,17,0,224,49,16,29,17,0,16,49,16,30,17,0,92,49,16,31,17,0,17,49,16,32,17,64,17,11,49,16,33,17,64,17,10,49,16,34,144,7,24,144,7,72,167,224,17,0,1,33,64,17,13,240,167,224,17,0,0,33,64,17,13,240,167,232,224,230,22,64,17,19,24,64,17,3,17,0,0,33,208,0,0,17,64,17,17,33,208,16,0,17,64,17,18,33,208,32,0,216,154,0,255,228,22,0,0,0,144,6,0,176,246,240,248,167,224,16,0,193,23,32,64,1,16,240,167,182,144,7,5,144,7,113,190,167,224,226,228,230,162,48,16,28,225,17,0,15,49,16,28,48,16,29,19,64,17,13,21,64,17,14,4,53,10,55,97,17,5,19,49,16,29,17,64,17,11,49,16,33,17,64,17,10,49,16,34,16,0,0,0,17,64,17,8,23,64,17,21,168,7,72,0,48,49,16,38,9,32,49,16,37,23,64,17,7,16,0,0,0,17,64,17,9,11,7,72,0,64,49,16,36,9,32,49,16,35,241,49,16,28,163,246,244,242,240,167,224,226,162,17,64,17,16,209,146,0,0,4,144,4,0,17,17,64,17,14,19,0,1,7,19,33,64,17,14,17,64,17,15,33,64,17,16,163,242,240,167,39,64,17,9,9,38,39,64,17,8,9,38,224,17,0,1,33,64,17,14,17,64,17,15,33,64,17,16,240,167,23,64,17,8,9,38,23,64,17,9,167,224,162,144,6,255,239,9,38,15,135,17,64,17,0,11,129,9,38,5,135,22,64,17,19,163,240,167,224,15,104,17,64,17,0,11,97,9,38,17,64,17,2,209,4,129,15,121,240,167,144,6,255,203,23,208,0,0,167,224,144,6,255,193,216,17,208,0,0,89,0,144,0,0,4,144,4,0,4,144,4,0,5,216,155,0,255,233,200,240,167,224,144,6,255,161,17,208,0,0,89,0,144,0,0,4,144,4,0,4,144,4,0,5,200,155,0,255,233,216,240,167,224,232,230,226,234,162,48,112,56,119,1,152,0,0,4,144,4,0,24,228,48,112,3,21,0,25,1,117,21,0,100,170,117,48,80,3,3,117,152,0,255,247,244,22,64,17,19,7,170,27,64,17,2,24,0,0,0,18,64,17,5,2,42,186,17,216,0,0,33,208,0,0,17,216,16,0,33,208,16,0,17,216,32,0,33,208,32,0,200,15,8,3,2,152,0,255,223,163,250,242,246,248,240,167,230,228,224,162,144,6,255,12,9,38,215,147,0,0,4,144,4,0,1,199,9,38,144,6,254,220,163,240,244,246,167,230,228,224,162,144,6,254,237,215,147,0,0,4,144,4,0,26,23,64,17,2,215,9,38,215,147,0,0,4,144,4,0,8,199,9,38,23,0,0,9,38,9,38,144,6,254,168,163,240,244,246,167,230,228,224,162,144,6,254,185,9,38,15,87,9,38,199,17,64,17,2,3,113,144,0,0,4,144,4,0,4,23,0,0,197,17,64,17,1,3,81,144,0,0,4,144,4,0,5,213,144,6,255,17,9,38,15,117,9,38,144,6,254,101,163,240,244,246,167,230,228,224,162,144,6,254,118,9,38,199,17,64,17,1,3,113,144,0,0,4,144,4,0,5,215,144,6,254,228,9,38,144,6,254,60,163,240,244,246,167,230,228,224,162,144,6,254,77,9,38,15,87,9,38,23,0,0,197,17,64,17,1,3,81,144,0,0,4,144,4,0,5,213,144,6,254,180,9,38,15,117,9,38,144,6,254,8,163,240,244,246,167,230,234,224,162,144,6,255,36,144,6,254,32,15,168,144,6,254,116,3,138,147,0,0,31,17,200,0,1,33,200,0,0,17,200,16,1,33,200,16,0,17,200,32,1,33,200,32,0,202,3,138,155,0,255,225,163,240,250,246,167,167,162,224,17,0,4,33,64,17,23,17,0,0,33,64,17,24,240,163,167,162,224,17,0,0,33,64,17,23,240,163,167,39,64,17,10,39,64,17,17,167,23,64,17,17,167,162,224,17,64,17,24,33,64,17,10,33,64,17,17,240,163,167,39,64,17,18,167,23,64,17,18,167,162,224,17,64,17,24,33,64,17,18,240,163,167,162,230,144,6,254,200,144,6,253,133,103,7,152,0,255,242,246,163,167,195,241,195,241,195,241,195,241,195,241,195,241,195,241,195,241,195,181,196,71,195,88,195,241,192,217,195,129,195,241,195,241,195,21,194,225,196,31,196,58,195,241,195,241,195,241,195,241,192,217,195,241,196,5,195,242,195,241,195,241,194,194,195,88,224,226,232,230,234,162,15,23,19,64,17,23,91,128,144,1,60,91,2,144,1,55,91,4,144,0,0,4,144,4,0,39,89,32,146,0,0,4,144,4,0,8,144,6,255,61,144,4,0,31,19,64,17,24,25,0,10,168,57,81,48,1,49,35,64,17,24,144,4,0,58,89,32,146,0,0,4,144,4,0,20,22,0,248,139,24,0,0,2,15,161,10,161,144,222,0,0,144,4,0,28,144,6,252,222,33,208,0,0,17,64,17,17,33,208,16,0,17,64,17,18,33,208,32,0,144,6,253,250,163,250,246,248,242,240,167,162,48,112,48,95,0,144,0,0,4,144,4,0,10,62,48,112,48,95,0,144,0,255,246,163,167,162,232,224,17,208,0,0,89,0,152,0,0,4,144,4,0,19,14,6,144,6,255,71,14,6,200,17,208,0,0,89,0,144,4,255,229,240,248,163,167,162,224,17,0,128,33,64,17,23,144,6,255,203,17,0,0,33,64,17,23,240,163,167,162,224,226,234,56,0,232,230,144,6,251,62,144,6,255,151,95,13,144,0,0,46,144,6,255,5,95,34,144,0,0,4,144,4,0,28,17,64,17,23,89,2,144,0,0,4,144,4,0,7,17,0,0,144,4,0,3,17,0,2,33,64,17,23,144,4,255,200,144,6,251,12,17,0,0,33,64,17,23,144,6,252,109,15,40,144,6,252,71,2,40,194,232,230,90,0,0,144,0,0,4,144,4,0,12,20,0,0,0,37,167,255,252,144,4,0,50,3,66,147,0,0,4,144,4,0,8,20,0,255,255,144,4,0,32,15,66,228,26,0,0,0,21,175,255,248,37,175,255,252,202,210,90,0,0,152,0,255,239,21,0,0,37,175,255,252,244,57,8,250,242,240,163,167]},{addr:509481,data:[56,17,162,224,226,228,230,232,234,26,0,0,0,15,4,15,64,170,3,186,72,0,48,88,0,58,155,0,0,4,144,4,0,3,72,0,7,33,143,255,239,202,15,4,169,3,88,0,0,152,0,255,218,9,34,3,179,147,0,0,4,144,4,0,14,17,0,48,33,143,255,239,202,3,179,147,0,255,245,218,17,143,255,239,33,208,0,0,200,218,154,0,255,242,17,0,0,33,208,0,0,250,248,246,244,242,240,163,57,17,167,162,224,92,0,0,147,0,0,4,144,4,0,9,17,0,45,9,20,144,4,0,3,17,0,32,33,208,0,0,200,144,6,255,111,216,240,163,167,56,0,224,226,230,234,162,144,0,0,4,144,4,0,7,19,0,0,144,4,0,3,19,0,1,26,0,0,0,21,216,0,0,17,168,0,4,91,1,144,0,0,4,144,4,0,5,93,0,144,1,43,3,81,144,0,0,4,144,4,0,9,93,0,144,1,28,202,144,5,214,147,0,0,4,144,4,0,10,163,179,184,144,5,13,144,4,0,6,163,187,184,144,5,3,163,187,176,15,74,250,246,242,240,57,0,167,56,0,234,162,26,208,0,0,218,146,0,0,4,144,4,0,7,163,179,178,183,144,5,19,202,234,10,161,20,216,0,0,250,163,144,1,6,218,42,208,0,0,191,250,57,0,167,56,0,234,26,208,0,0,234,10,161,232,200,200,36,216,0,0,248,250,202,42,208,0,0,250,57,0,167,56,0,234,26,0,0,2,36,216,0,0,26,0,0,4,42,208,0,0,250,57,0,167,56,0,234,26,0,0,2,20,216,0,0,26,208,0,0,186,2,74,250,57,0,167,56,0,234,226,224,26,0,0,2,18,216,0,0,16,208,0,0,1,4,3,2,155,0,0,4,144,4,0,13,183,22,0,0,0,24,0,0,0,144,4,0,12,191,18,208,0,0,32,208,0,0,186,1,130,240,242,250,57,0,167]},{addr:512e3,data:[144,6,30,214,144,6,30,248,144,6,31,193,63,56,0,230,191,48,112,56,119,8,152,0,0,4,144,4,0,14,48,112,58,119,4,152,0,0,4,144,4,0,1,183,246,57,0,167,56,10,230,226,232,234,162,95,0,152,0,0,4,144,4,0,107,15,167,22,0,244,113,24,0,0,1,144,70,254,40,22,0,244,115,24,0,0,6,218,10,161,24,216,0,0,22,0,224,0,144,70,254,40,22,0,240,0,24,0,35,140,144,70,254,40,92,0,0,152,0,0,4,144,4,0,47,22,0,244,114,24,0,0,3,144,70,254,40,15,108,86,0,10,15,134,22,0,0,0,18,0,0,10,144,70,254,50,144,70,254,40,22,0,244,27,24,0,0,6,144,70,254,40,163,250,248,242,246,57,10,167,56,0,234,224,226,162,26,0,0,0,19,0,0,17,216,0,0,89,34,144,0,0,4,144,4,0,2,123,255,91,255,152,0,0,4,144,4,0,26,89,97,155,0,0,4,144,4,0,16,89,123,147,0,0,4,144,4,0,6,97,223,33,216,0,0,202,89,0,152,0,255,197,17,0,34,4,19,15,113,163,242,240,250,57,0,167,162,3,117,147,1,15,9,36,3,117,144,1,3,155,1,5,163,176,144,5,2,163,184,167,228,20,0,57,48,144,6,255,223,244,167,228,20,0,90,65,144,6,255,212,244,167,144,6,255,230,144,1,4,144,6,255,234,167,144,6,255,218,144,1,10,228,20,0,70,65,144,6,255,182,244,167,56,6,232,234,228,226,26,0,0,1,42,135,255,250,26,0,0,0,42,135,255,254,42,135,255,252,23,0,0,144,6,2,238,23,168,0,8,144,6,2,250,95,32,144,0,0,4,144,4,0,29,23,168,0,8,95,32,144,0,0,4,144,4,0,4,202,144,5,238,144,6,2,208,23,0,32,144,4,2,153,144,6,255,120,152,0,0,186,20,0,0,0,18,0,0,10,144,6,2,171,186,87,48,168,66,95,10,155,0,0,4,144,4,0,3,186,87,7,3,115,155,0,0,76,186,1,71,23,168,0,8,95,88,144,0,0,4,144,4,0,28,92,0,0,152,0,0,4,144,4,0,7,23,0,1,144,4,2,95,23,0,48,19,0,16,144,4,0,26,91,10,144,0,0,4,144,4,0,8,144,6,255,21,144,4,0,4,144,6,255,47,152,0,0,5,202,144,4,255,156,144,6,2,77,144,6,2,68,9,36,93,0,144,0,0,4,144,4,0,7,23,0,255,144,4,0,3,23,0,254,9,36,39,168,0,4,202,95,254,144,0,0,4,144,4,0,10,36,168,0,4,202,202,144,4,0,5,37,168,0,4,202,144,6,2,20,144,6,2,95,144,4,255,11,95,34,152,1,65,144,6,1,249,23,0,251,39,168,0,4,144,6,2,5,144,6,1,229,23,168,0,8,144,6,1,241,95,34,144,0,0,4,144,4,0,3,23,0,0,144,6,1,209,39,168,0,4,144,6,1,224,95,0,152,1,214,144,6,2,25,144,4,254,197,20,0,126,33,144,6,254,84,152,0,0,115,230,22,0,224,0,24,0,163,242,18,128,0,10,186,1,42,210,226,18,128,0,8,226,19,208,0,0,91,0,144,1,76,184,144,70,254,54,152,0,0,4,144,4,0,16,200,19,208,0,0,91,0,152,0,255,245,200,200,144,5,218,186,1,132,200,19,208,0,0,144,6,1,134,144,6,1,99,35,168,0,4,144,6,1,114,144,6,1,82,186,1,164,218,144,6,1,84,18,0,0,4,1,226,246,144,4,254,77,18,0,0,4,1,226,246,144,6,253,252,152,0,1,10,186,87,65,144,6,1,46,21,0,250,37,168,0,4,144,6,1,58,9,38,144,6,1,24,23,168,0,8,202,144,6,253,226,152,0,0,4,144,4,0,8,218,23,0,255,144,4,0,14,186,87,65,147,0,0,4,144,4,0,3,186,79,43,20,0,0,0,95,255,152,0,0,4,144,4,0,17,9,38,15,71,24,0,0,36,168,72,186,24,0,0,26,1,72,9,38,186,1,71,10,65,144,6,0,204,234,36,168,0,4,202,202,144,6,0,203,144,6,0,184,218,144,6,0,189,19,0,0,195,202,23,168,0,8,144,6,253,121,144,0,255,242,144,6,0,163,35,168,0,4,144,6,0,178,144,6,0,146,23,168,0,8,144,6,0,158,144,6,0,139,39,168,0,4,144,6,0,154,211,152,0,255,227,144,6,0,117,23,168,0,8,15,138,250,19,168,0,4,200,95,36,144,0,0,4,144,4,0,6,107,64,144,4,0,33,95,35,144,0,0,4,144,4,0,6,107,128,144,4,0,17,216,95,40,144,0,0,4,144,4,0,6,107,192,144,4,0,0,35,168,0,4,15,168,144,6,0,56,144,6,0,136,144,4,253,52,144,6,0,39,39,168,0,4,144,6,0,54,95,0,152,0,253,34,23,0,0,9,38,144,6,0,16,15,123,9,38,242,244,250,248,57,6,167,26,135,255,254,167,26,135,255,252,167,42,135,255,254,167,42,135,255,252,167,144,7,233,202,144,7,239,167,144,7,230,202,144,7,236,167,91,232,144,0,0,4,144,4,0,25,234,228,26,135,255,250,20,0,0,1,3,164,144,0,0,4,144,4,0,3,19,0,233,244,250,91,245,144,0,0,4,144,4,0,8,144,6,0,9,144,4,0,4,144,6,0,12,167,234,26,0,0,0,42,135,255,250,250,167,234,26,0,0,1,42,135,255,250,250,167,232,234,24,64,180,8,26,0,0,0,23,104,180,6,202,95,32,144,1,246,250,248,167,232,23,96,180,6,24,64,180,8,200,40,64,180,8,95,32,144,1,238,248,167,232,23,96,180,6,24,64,180,8,200,40,64,180,8,248,167,230,232,24,64,180,8,216,40,64,180,8,23,96,180,6,95,32,144,1,238,248,246,167,232,22,96,180,6,24,64,180,8,200,200,40,64,180,8,248,167,23,0,0,167,23,0,39,167,23,0,1,167,56,0,224,226,228,144,6,19,214,9,20,144,6,18,147,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,18,225,15,4,15,38,144,6,18,217,3,55,152,0,0,4,144,4,0,6,23,0,2,144,5,11,1,4,15,64,144,6,18,97,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,19,140,151,1,22,15,4,15,38,144,6,19,129,151,1,11,2,4,15,64,144,6,18,57,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,19,100,151,1,22,15,4,15,38,144,6,19,89,151,1,11,168,4,15,64,144,6,18,17,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,19,60,151,1,22,15,4,15,38,144,6,19,49,151,1,11,169,4,15,64,144,6,17,233,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,19,20,151,1,22,15,4,15,38,144,6,19,9,151,1,11,170,4,15,64,144,6,17,193,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,18,15,15,4,15,38,144,6,18,7,3,55,152,0,0,4,144,4,0,6,23,0,2,144,5,29,3,4,147,0,0,4,144,4,0,8,20,0,0,1,144,4,0,4,20,0,0,0,144,6,17,125,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,17,203,15,4,15,38,144,6,17,195,3,55,152,0,0,4,144,4,0,6,23,0,2,144,5,45,3,4,147,0,0,4,144,4,0,8,20,0,0,1,144,4,0,20,144,0,0,4,144,4,0,8,20,0,0,1,144,4,0,4,20,0,0,0,144,6,17,41,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,17,119,15,4,15,38,144,6,17,111,3,55,152,0,0,4,144,4,0,6,23,0,2,144,5,29,3,4,147,0,0,4,144,4,0,8,20,0,0,1,144,4,0,4,20,0,0,0,144,6,16,229,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,17,51,15,4,15,38,144,6,17,43,3,55,152,0,0,4,144,4,0,6,23,0,2,144,5,45,3,4,147,0,0,4,144,4,0,8,20,0,0,1,144,4,0,20,144,0,0,4,144,4,0,8,20,0,0,1,144,4,0,4,20,0,0,0,144,6,16,145,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,16,223,15,4,15,38,144,6,16,215,3,55,152,0,0,4,144,4,0,6,23,0,2,144,5,29,3,64,147,0,0,4,144,4,0,8,20,0,0,1,144,4,0,4,20,0,0,0,144,6,16,77,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,16,155,15,4,15,38,144,6,16,147,3,55,152,0,0,4,144,4,0,6,23,0,2,144,5,45,3,64,147,0,0,4,144,4,0,8,20,0,0,1,144,4,0,20,144,0,0,4,144,4,0,8,20,0,0,1,144,4,0,4,20,0,0,0,144,6,15,249,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,16,71,15,4,15,38,144,6,16,63,3,55,152,0,0,4,144,4,0,6,23,0,2,144,5,29,3,4,144,0,0,4,144,4,0,8,20,0,0,1,144,4,0,4,20,0,0,0,144,6,15,181,23,0,0,244,242,240,57,0,167,56,0,224,226,228,144,6,16,3,15,4,15,38,144,6,15,251,3,55,152,0,0,4,144,4,0,6,23,0,2,144,5,29,3,4,144,0,0,4,144,4,0,8,20,0,0,0,144,4,0,4,20,0,0,1,144,6,15,113,23,0,0,244,242,240,57,0,167,56,0,228,144,6,16,158,151,1,11,144,6,220,2,144,6,15,86,23,0,0,244,57,0,167,56,0,228,224,144,6,16,132,151,1,19,48,16,12,9,32,48,16,13,170,4,15,64,144,6,15,52,23,0,0,240,244,57,0,167,56,0,224,226,228,232,144,6,16,95,151,1,35,15,4,15,38,144,6,16,84,151,1,24,15,132,15,96,10,109,20,0,0,0,21,208,0,0,23,0,254,144,6,14,255,23,0,0,248,244,242,240,57,0,167,144,70,254,0,23,0,0,167,22,0,0,0,144,70,254,4,23,0,0,167,144,6,22,71,23,0,0,167,23,0,255,167,56,4,228,234,232,224,26,0,0,0,144,6,251,204,95,0,144,0,0,81,95,248,144,0,0,75,144,6,251,225,144,6,16,22,95,0,152,0,0,96,144,6,15,9,95,254,152,0,0,4,144,4,0,7,23,0,2,144,4,0,75,36,143,255,252,202,202,17,0,4,3,177,144,0,0,25,144,6,251,138,95,246,152,0,0,4,144,4,0,7,23,0,1,144,4,0,39,144,4,255,165,17,0,4,3,177,152,0,0,4,144,4,0,7,23,0,1,144,4,0,15,16,135,255,254,20,135,255,252,144,6,219,4,23,0,0,240,248,250,244,57,4,167,56,6,228,234,232,224,26,0,0,0,144,6,251,61,95,0,144,0,0,81,95,248,144,0,0,75,144,6,251,82,144,6,15,135,95,0,152,0,0,102,144,6,14,122,95,254,152,0,0,4,144,4,0,7,23,0,2,144,4,0,81,36,143,255,250,202,202,17,0,6,3,177,144,0,0,25,144,6,250,251,95,246,152,0,0,4,144,4,0,7,23,0,1,144,4,0,45,144,4,255,165,17,0,6,3,177,152,0,0,4,144,4,0,7,23,0,1,144,4,0,21,16,135,255,254,24,135,255,252,22,135,255,250,10,109,33,208,0,0,23,0,0,240,248,250,244,57,6,167,56,0,224,226,228,232,234,144,6,250,208,144,6,250,167,95,250,152,0,0,4,144,4,0,7,23,0,1,144,4,0,179,144,6,250,206,15,38,12,46,102,63,255,15,166,22,0,0,0,91,0,144,0,0,4,144,4,0,11,19,0,254,24,0,32,0,144,4,0,51,91,1,144,0,0,4,144,4,0,11,19,0,252,24,0,39,132,144,4,0,30,91,2,144,0,0,4,144,4,0,13,19,0,249,24,0,47,8,10,162,144,4,0,7,23,0,39,144,4,0,90,15,6,144,6,250,76,144,6,250,72,95,0,144,0,0,4,144,4,0,7,23,0,1,144,4,0,63,95,248,144,0,0,4,144,4,0,7,23,0,1,144,4,0,46,95,243,152,0,255,212,144,6,14,101,95,0,152,0,0,30,144,6,13,88,3,115,152,0,0,4,144,4,0,7,23,0,2,144,4,0,9,14,6,36,216,0,0,23,0,0,250,248,244,242,240,57,0,167,56,0,144,6,249,213,144,6,255,27,57,0,167,56,0,228,144,6,249,199,95,0,144,0,0,4,144,4,0,7,23,0,1,144,4,0,66,95,248,144,0,0,4,144,4,0,7,23,0,1,144,4,0,49,144,6,249,198,144,6,13,251,95,0,152,0,0,35,144,6,12,238,95,254,152,0,0,4,144,4,0,7,23,0,2,144,4,0,14,36,64,180,2,23,0,0,21,0,1,37,64,180,1,244,57,0,167,56,0,228,144,6,249,82,95,0,144,0,0,4,144,4,0,7,23,0,1,144,4,0,90,95,248,144,0,0,4,144,4,0,7,23,0,1,144,4,0,73,144,6,13,161,95,0,152,0,0,63,144,6,12,148,95,254,152,0,0,4,144,4,0,7,23,0,2,144,4,0,42,92,0,0,144,0,0,4,144,4,0,7,23,0,255,144,4,0,24,144,6,249,18,95,222,152,0,0,4,144,4,0,7,23,0,1,144,4,0,3,23,0,254,244,57,0,167,56,0,228,20,0,0,0,36,64,180,2,144,6,248,235,95,0,144,0,0,4,144,4,0,8,144,6,249,2,144,4,0,57,95,248,144,0,0,4,144,4,0,8,144,6,248,240,144,4,0,39,144,6,248,232,144,6,13,29,95,0,152,0,0,35,144,6,12,16,95,254,152,0,0,4,144,4,0,7,23,0,2,144,4,0,14,36,64,180,2,23,0,0,21,0,1,37,64,180,1,244,57,0,167,56,6,228,232,224,226,144,70,254,12,230,20,0,0,0,37,135,255,251,37,135,255,250,36,135,255,254,144,6,2,161,144,6,248,111,95,0,144,0,0,4,144,4,0,8,144,6,248,134,144,4,0,153,95,248,144,0,0,4,144,4,0,8,144,6,248,116,144,4,0,135,95,246,144,0,0,44,144,6,248,102,144,6,12,155,95,0,152,0,2,85,144,6,11,142,95,254,152,0,0,4,144,4,0,7,23,0,2,144,4,2,64,36,135,255,254,196,36,135,255,252,144,6,248,21,95,246,144,1,247,95,0,144,0,0,4,144,4,0,8,144,6,248,39,144,4,0,58,95,248,144,0,0,4,144,4,0,8,144,6,248,21,144,4,0,40,144,6,248,13,144,6,12,66,95,0,152,0,1,252,144,6,11,53,95,254,152,0,0,4,144,4,0,7,23,0,2,144,4,1,231,196,36,135,255,252,20,135,255,254,22,135,255,252,144,6,242,213,151,0,1,207,22,0,96,0,15,132,10,129,16,208,0,0,88,0,0,152,0,0,4,144,4,1,173,23,64,180,139,144,70,254,10,230,232,18,0,0,10,22,0,0,0,24,0,180,105,144,70,254,50,144,70,254,40,248,246,19,135,255,251,23,0,32,144,70,254,36,211,155,0,255,247,23,0,0,39,135,255,250,22,0,128,0,15,128,16,208,0,0,15,49,9,32,89,128,147,0,0,4,144,4,0,12,230,15,113,144,70,254,36,246,144,4,1,51,89,255,144,0,0,4,144,4,0,17,200,16,0,0,0,17,208,0,0,144,6,1,99,144,4,1,24,89,254,144,0,0,4,144,4,0,14,200,16,208,0,0,200,144,6,1,75,144,4,1,0,89,251,144,0,0,4,144,4,0,9,200,144,6,1,95,144,4,0,237,89,249,144,0,0,231,89,250,144,0,0,4,144,4,0,9,200,144,6,1,115,144,4,0,212,230,232,23,64,180,143,144,70,254,10,22,0,224,0,24,0,166,177,96,0,127,10,2,1,128,200,200,16,208,0,0,112,0,1,152,0,0,4,144,4,0,10,230,23,64,180,140,144,70,254,10,246,112,0,4,152,0,0,4,144,4,0,10,230,23,64,180,141,144,70,254,10,246,112,0,8,152,0,0,4,144,4,0,10,230,23,64,180,142,144,70,254,10,246,112,64,0,152,0,0,4,144,4,0,36,112,32,0,152,0,0,4,144,4,0,6,91,0,152,0,0,19,230,224,23,64,180,138,17,135,255,251,186,1,23,33,135,255,251,240,246,112,128,0,152,0,0,4,144,4,0,48,230,19,135,255,250,91,0,144,0,0,4,144,4,0,17,19,64,180,138,211,23,0,17,144,70,254,36,211,155,0,255,247,23,64,180,138,17,135,255,251,186,2,23,33,135,255,251,246,216,216,24,208,0,0,144,70,254,40,248,246,200,17,0,1,33,135,255,250,16,208,0,0,15,49,9,32,89,0,152,0,254,161,230,23,0,13,144,70,254,36,246,196,22,135,255,252,3,70,147,0,254,41,23,0,0,15,87,246,144,70,254,10,15,117,242,240,248,244,57,6,167,20,64,180,4,196,36,135,255,252,167,226,228,230,232,23,64,180,144,144,70,254,10,22,0,0,0,24,0,180,105,15,64,18,0,0,10,144,70,254,50,144,70,254,40,248,246,244,242,167,232,230,23,64,180,145,144,70,254,10,23,0,34,144,70,254,36,246,144,70,254,48,230,23,0,34,144,70,254,36,246,248,17,208,0,0,200,89,0,152,0,255,245,216,167,230,23,64,180,146,144,70,254,10,246,226,18,208,0,0,12,46,200,200,17,208,0,0,200,230,23,208,0,0,144,70,254,36,246,209,152,0,255,240,91,1,144,0,0,4,144,4,0,13,230,23,0,36,144,70,254,36,246,144,4,0,19,91,2,144,0,0,4,144,4,0,9,230,23,0,35,144,70,254,36,246,242,167,56,0,224,228,144,6,9,119,95,0,152,0,0,105,144,6,9,71,151,0,0,97,49,80,18,144,6,245,4,95,0,144,0,0,77,95,248,144,0,0,71,95,184,144,0,0,77,95,183,144,0,0,83,95,208,144,0,0,89,95,207,144,0,0,115,95,223,144,0,0,143,95,142,144,0,0,169,95,133,144,0,0,209,95,194,144,0,0,239,95,178,144,0,1,13,95,169,144,0,1,39,144,6,244,221,23,0,1,144,4,0,7,144,6,244,210,23,0,0,244,240,57,0,167,48,80,19,109,128,49,80,19,144,4,255,145,48,80,19,101,127,49,80,19,144,4,255,133,144,6,8,231,95,0,152,0,255,217,144,6,8,183,151,0,255,209,48,16,19,97,224,5,21,49,16,19,144,4,255,101,144,6,8,199,95,0,152,0,255,185,144,6,8,151,151,0,255,177,48,16,20,97,63,10,86,5,21,49,16,20,144,4,255,67,144,6,8,165,95,0,152,0,255,151,144,6,8,117,151,0,255,143,48,16,20,97,224,5,21,49,16,20,144,4,255,35,144,6,8,142,95,0,152,0,255,119,144,6,8,85,151,0,255,111,49,80,22,144,6,8,74,151,0,0,4,144,4,0,6,95,6,144,4,255,87,49,80,21,144,4,254,245,144,6,8,96,95,0,152,0,255,73,144,6,8,39,151,0,255,65,49,80,23,144,6,8,28,151,0,255,54,49,80,24,144,4,254,209,144,6,8,60,95,0,152,0,255,37,144,6,8,3,151,0,255,29,49,80,25,144,6,7,248,151,0,255,18,49,80,26,144,4,254,173,144,6,8,15,95,0,152,0,255,1,144,6,7,223,151,0,254,249,48,16,27,97,252,5,21,49,16,27,144,4,254,141,144,6,7,239,95,0,152,0,254,225,144,6,7,191,151,0,254,217,48,16,20,97,223,10,85,5,21,49,16,20,144,4,254,107,56,2,144,6,243,109,95,0,144,0,0,168,95,248,144,0,0,162,95,247,144,0,0,202,95,246,144,0,0,208,95,137,144,0,0,213,95,136,144,0,0,235,95,133,144,0,1,5,95,209,144,0,1,105,95,220,144,0,1,92,144,6,243,88,144,6,7,141,95,0,152,1,104,144,6,6,129,95,251,144,0,0,4,144,4,0,36,23,64,180,1,95,0,144,0,0,4,144,4,0,8,22,0,0,0,144,4,0,4,22,0,128,0,15,132,144,70,254,40,144,4,0,46,95,252,144,0,0,4,144,4,0,14,22,0,64,0,15,132,144,70,254,40,144,4,0,22,18,0,0,10,15,68,22,0,0,0,24,0,180,105,144,70,254,52,144,70,254,40,144,6,0,44,144,4,255,81,57,2,167,22,135,255,254,94,0,1,152,0,0,4,144,4,0,12,22,0,244,27,24,0,0,6,144,70,254,40,23,0,0,144,6,242,194,144,5,216,22,0,0,0,38,135,255,254,167,22,0,0,1,38,135,255,254,144,4,255,20,23,0,9,144,70,254,36,144,4,255,233,144,6,6,212,95,0,152,0,255,174,144,6,6,164,151,0,255,166,15,117,144,70,254,36,144,4,254,237,144,6,6,184,95,0,152,0,255,146,144,6,6,136,151,0,255,138,15,53,144,6,6,126,151,0,255,128,144,4,0,127,144,6,6,152,95,0,152,0,255,114,144,6,5,139,95,254,152,0,0,4,144,4,0,7,23,0,2,144,4,255,93,15,36,144,6,242,25,95,246,152,0,0,4,144,4,0,7,23,0,1,144,4,255,70,144,6,6,98,95,0,152,0,255,60,144,6,5,85,95,254,152,0,0,4,144,4,0,7,23,0,2,144,4,255,39,15,98,9,38,15,117,144,70,254,4,144,4,254,106,19,0,9,144,4,0,3,19,0,32,144,6,6,43,95,0,152,0,255,5,144,6,5,251,151,0,254,253,92,0,0,15,115,152,0,0,4,144,4,0,9,144,70,254,36,212,144,4,255,239,144,4,255,20,56,0,224,228,144,6,5,251,95,0,152,0,0,93,144,6,5,203,151,0,0,85,49,80,28,144,6,241,136,95,0,144,0,0,65,95,248,144,0,0,59,95,184,144,0,0,65,95,183,144,0,0,71,95,208,144,0,0,77,95,207,144,0,0,114,95,223,144,0,0,183,95,142,144,0,0,209,95,133,144,0,0,249,95,165,144,0,1,37,144,6,241,109,23,0,1,144,4,0,7,144,6,241,98,23,0,0,244,240,57,0,167,48,80,29,109,128,49,80,29,144,4,255,157,48,80,29,101,127,49,80,29,144,4,255,145,144,6,5,128,95,0,152,0,255,217,144,6,5,71,151,0,255,209,48,16,29,97,224,5,21,49,16,29,144,6,5,53,151,0,255,191,49,80,30,144,4,255,102,144,6,5,85,95,0,152,0,255,174,144,6,5,28,151,0,255,166,15,21,97,15,144,6,5,16,151,0,255,154,10,20,101,15,5,21,9,33,49,16,32,144,6,4,253,151,0,0,4,144,4,0,6,95,6,144,4,255,122,48,16,31,97,63,10,86,5,21,49,16,31,144,4,255,27,144,6,5,1,95,0,152,0,255,99,144,6,4,209,151,0,255,91,48,16,31,97,224,5,21,49,16,31,144,4,254,251,144,6,4,234,95,0,152,0,255,67,144,6,4,177,151,0,255,59,49,80,34,144,6,4,166,151,0,0,4,144,4,0,6,95,6,144,4,255,35,49,80,33,144,4,254,205,144,6,4,188,95,0,152,0,255,21,144,6,4,131,151,0,255,13,9,36,49,80,35,9,36,49,80,36,144,6,4,113,151,0,254,251,9,36,49,80,37,9,36,49,80,38,144,4,254,155,144,6,4,129,95,0,152,0,254,227,144,6,4,81,151,0,254,219,48,16,29,97,159,10,85,5,21,49,16,29,144,4,254,121,213,65,16,20,213,65,32,6,213,65,16,20,213,69,0,0,213,65,16,20,213,69,0,0,213,69,0,0,213,69,0,0,213,65,32,20,213,65,16,20,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,65,16,20,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,65,16,20,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,65,16,20,213,69,0,0,213,69,0,0,213,65,16,20,216,131,16,20,213,65,0,20,213,69,0,0,213,65,32,20,213,65,16,20,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,65,16,20,213,69,0,0,213,65,16,20,213,69,0,0,213,65,48,20,213,69,0,0,213,65,16,20,213,69,0,0,213,69,0,0,213,65,31,17,213,69,0,0,213,69,0,0,213,69,0,0,213,65,32,5,213,69,0,0,216,191,32,20,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,65,32,20,216,156,16,20,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,69,0,0,213,65,16,20,213,65,16,20,213,69,0,0,213,69,0,0,213,65,16,20,213,65,32,20,213,69,0,0,213,65,16,20,213,65,16,20,213,69,0,0,213,65,32,20,213,69,0,0,213,65,16,20,213,69,0,0,213,69,0,0,213,65,16,20,213,65,16,20,213,69,0,0,213,69,0,0,213,65,16,20,213,69,0,0,213,69,0,0,213,65,16,20,213,65,16,20,213,65,16,20,213,69,0,0,213,97,32,14,213,147,32,14,213,73,16,17,213,187,32,15,213,227,32,15,214,11,32,15,213,65,47,16,216,63,32,11,215,15,32,12,215,167,32,12,214,203,32,12,215,99,32,12,215,251,32,11,255,254,32,21,255,255,32,21,0,0,0,1,213,65,0,255,213,65,0,255,213,65,0,255,213,65,0,255,213,65,0,255,213,65,0,255,213,65,0,255,213,65,0,255,213,65,0,255,213,69,213,69,213,69,213,65,213,69,213,69,213,65,213,65,213,69,213,69,213,65,216,246,213,65,213,65,213,65,213,65,213,69,213,65,213,65,213,65,213,65,213,65,213,65,213,65,213,69,213,65,213,65,213,65,213,65,213,65,219,34,213,69,219,128,213,65,213,69,213,69,213,69,223,207,213,69,213,69,219,21,213,65,220,94,213,65,213,65,213,69,213,65,213,69,213,65,213,69,213,65,213,69,217,10,213,65,213,69,213,65,213,65,213,65,213,69,217,22,213,69,213,65,213,65,217,165,225,125,213,65,213,65,217,18,213,65,213,69,213,69,213,65,213,65,213,65,219,246,213,65,213,65,213,69,213,69,213,65,213,65,213,69,213,69,227,75,213,69,213,69,213,69,213,69,213,69,213,69,213,65,213,65,213,69,213,69,213,69,213,65,213,69,213,69,213,65,213,69,213,69,213,69,213,65,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,69,213,65,213,69,218,58,213,69,213,69,213,69,213,69,213,69,56,0,232,24,0,0,0,25,64,180,14,39,80,180,15,10,131,95,249,152,0,0,4,144,4,0,8,36,80,180,25,144,4,0,48,234,15,164,20,72,47,8,36,80,180,25,202,202,200,200,20,72,47,8,36,80,180,25,202,202,200,200,20,72,47,8,36,80,180,25,202,202,200,200,20,72,47,8,36,80,180,25,250,25,64,180,14,201,41,64,180,14,248,57,0,167,56,0,232,24,0,0,0,25,64,180,14,217,147,0,0,4,144,4,0,5,183,144,4,0,20,191,23,80,180,15,10,131,20,80,180,25,25,64,180,14,217,41,64,180,14,248,57,0,167,56,0,232,234,26,0,0,0,27,64,180,14,3,155,155,0,0,4,144,4,0,5,183,144,4,0,16,2,185,219,15,155,191,23,80,180,15,10,131,20,80,180,25,250,248,57,0,167,56,0,232,24,0,0,0,40,64,180,14,248,57,0,167,232,226,234,144,6,236,106,15,38,98,192,0,12,46,102,63,255,230,144,6,236,52,24,64,180,8,186,1,135,40,64,180,8,246,15,134,90,0,0,144,0,0,4,144,4,0,12,22,0,0,254,20,80,32,0,144,4,0,46,90,0,1,144,0,0,4,144,4,0,12,22,0,0,252,20,80,39,132,144,4,0,23,90,0,2,144,0,0,4,144,4,0,12,22,0,0,249,10,130,15,72,144,4,0,0,250,242,248,167,144,6,255,31,151,0,0,4,144,4,0,7,23,0,6,144,4,0,18,95,254,152,0,0,4,144,4,0,8,23,0,2,183,144,4,0,0,167,144,6,255,90,191,144,4,0,19,144,6,255,81,183,144,4,0,10,191,144,4,0,5,183,144,4,0,0,236,224,15,206,16,0,1,15,186,2,224,234,232,228,226,224,46,135,255,250,151,0,0,4,144,4,0,11,17,0,255,33,135,254,241,144,4,0,7,17,0,0,33,135,254,241,230,232,22,0,255,116,15,140,186,1,134,22,0,0,0,38,208,0,0,248,246,230,232,22,0,254,242,15,140,186,1,134,22,0,0,0,38,208,0,0,248,246,16,0,0,0,33,135,255,252,33,135,255,253,24,135,254,242,20,0,0,64,3,132,155,0,3,38,24,135,255,116,20,0,0,64,3,132,155,0,3,24,144,6,235,2,95,0,144,0,2,97,95,248,144,0,2,91,17,135,255,253,89,0,144,0,0,4,144,4,0,30,17,135,254,241,89,0,144,0,0,4,144,4,0,6,95,246,144,0,2,57,95,247,144,0,2,51,144,4,0,31,95,246,144,0,0,4,144,4,0,4,144,4,255,154,95,247,144,0,0,4,144,4,0,7,23,0,1,144,4,2,170,15,71,101,127,10,66,232,15,132,16,87,228,235,200,200,18,87,228,235,248,90,0,0,144,0,0,4,144,4,0,4,144,4,1,237,95,250,144,0,0,4,144,4,0,60,144,6,254,69,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,15,100,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,144,4,255,32,95,255,144,0,0,4,144,4,0,65,23,0,254,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,22,0,0,0,144,6,234,41,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,144,4,254,213,95,254,144,0,0,4,144,4,0,58,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,144,6,234,12,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,144,4,254,145,95,251,144,0,0,4,144,4,0,68,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,22,64,180,8,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,144,6,233,132,95,0,152,0,255,246,144,4,254,67,95,244,144,0,0,4,144,4,0,17,144,6,1,111,17,135,255,253,193,33,135,255,253,144,4,254,40,95,245,144,0,0,4,144,4,0,66,24,135,255,116,20,0,0,0,3,132,152,0,0,4,144,4,0,28,144,6,1,117,88,255,254,144,1,25,144,6,1,160,24,135,255,116,20,0,0,0,3,132,144,4,255,220,23,0,35,144,4,1,10,17,135,255,253,209,33,135,255,253,144,4,253,220,24,135,255,116,20,0,0,0,3,132,15,128,15,162,152,0,0,4,144,4,0,61,144,6,1,47,3,59,147,0,0,4,144,4,0,8,144,6,0,238,144,4,0,39,88,255,254,144,0,0,4,144,4,0,8,144,6,0,219,144,4,0,20,144,6,1,59,232,24,135,255,116,20,0,0,0,3,132,248,144,4,255,187,15,8,15,42,144,6,0,187,144,4,253,125,144,0,253,121,144,6,232,188,24,135,255,116,20,0,0,0,3,132,152,0,0,4,144,4,0,39,144,6,0,204,88,255,254,144,0,0,4,144,4,0,6,23,0,36,144,5,111,144,6,0,236,24,135,255,116,20,0,0,0,3,132,144,4,255,209,228,230,232,22,0,254,242,15,140,186,1,134,22,0,0,0,184,144,70,254,58,248,246,15,100,244,151,0,0,50,15,70,228,230,232,22,0,254,242,15,140,186,1,134,22,0,0,0,184,144,70,254,58,248,246,15,100,244,151,0,0,18,19,64,180,14,91,10,144,0,0,40,144,6,251,13,144,4,255,176,21,64,180,14,93,1,147,0,1,49,23,0,0,30,135,255,250,240,242,244,248,250,16,0,1,15,186,1,224,240,252,167,23,0,32,144,5,231,228,230,232,15,64,22,0,255,116,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,228,230,232,15,66,22,0,255,116,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,167,228,230,232,22,0,255,116,15,140,186,1,134,22,0,0,0,184,144,70,254,58,248,246,15,36,244,228,230,232,22,0,255,116,15,140,186,1,134,22,0,0,0,184,144,70,254,58,248,246,15,4,244,167,88,0,0,144,0,0,4,144,4,0,1,167,15,98,102,240,0,12,108,95,0,152,0,0,4,144,4,0,73,15,38,228,230,232,22,0,254,242,15,140,186,1,134,22,0,0,0,184,144,70,254,58,248,246,15,100,244,151,0,0,119,15,70,228,230,232,22,0,254,242,15,140,186,1,134,22,0,0,0,184,144,70,254,58,248,246,15,100,244,151,0,0,87,144,6,250,26,211,152,0,255,185,32,135,255,246,144,134,255,246,95,0,152,0,255,11,144,6,250,99,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,15,100,228,230,232,15,70,22,0,254,242,15,140,186,1,134,22,0,0,0,144,70,254,56,248,246,244,167,23,0,1,144,4,254,203,23,0,6,144,4,254,196,56,0,232,224,234,228,26,0,0,0,144,6,225,212,151,0,0,4,144,4,0,14,23,0,0,39,64,180,1,23,0,25,144,4,0,119,144,6,230,157,15,71,116,0,128,144,0,0,4,144,4,0,23,92,0,0,144,0,0,4,144,4,0,6,23,0,0,144,5,85,23,0,1,144,5,79,100,0,127,10,65,15,132,144,86,230,235,95,254,144,0,0,4,144,4,0,4,144,4,255,165,95,0,152,1,49,144,6,230,87,95,0,144,0,0,4,144,4,0,7,144,5,32,144,4,0,24,95,248,144,0,0,4,144,4,0,8,144,4,255,125,144,4,0,6,23,0,1,144,5,4,144,0,255,111,95,255,144,0,0,4,144,4,0,3,23,0,0,244,250,240,248,57,0,167,24,0,0,20,23,87,238,236,39,80,180,147,216,154,0,255,243,167,37,64,180,157,20,0,0,0,48,80,0,167,37,64,180,165,49,16,0,167,22,0,244,0,24,0,0,0,144,70,254,40,144,6,0,69,144,6,0,1,167,23,0,1,39,64,180,138,23,0,23,39,64,180,139,23,0,22,39,64,180,140,23,0,22,39,64,180,141,23,0,23,39,64,180,142,23,0,19,39,64,180,144,23,0,21,39,64,180,145,23,0,23,39,64,180,146,23,0,22,39,64,180,143,167,22,0,0,0,38,64,180,0,38,64,180,4,38,64,180,2,22,0,0,1,38,64,180,10,38,64,180,12,22,0,128,0,24,0,0,0,38,64,180,6,40,64,180,8,22,0,0,0,38,64,180,1,17,0,0,22,0,0,0,24,0,32,0,26,0,60,32,218,33,216,0,0,152,0,255,247,22,0,96,0,24,0,0,0,26,0,0,0,218,33,216,0,0,152,0,255,247,228,230,232,22,0,64,0,24,0,0,0,20,0,255,252,144,70,254,60,248,246,244,167,22,0,244,26,24,0,0,7,144,70,254,40,22,0,22,0,24,0,0,0,20,0,0,255,144,70,254,42,22,0,244,27,24,0,0,6,144,70,254,40,92,0,0,144,0,0,4,144,4,0,4,144,4,255,213,147,0,0,4,144,4,0,15,20,0,0,0,23,0,27,144,6,224,25,144,4,255,178,22,0,22,0,24,0,0,0,144,6,224,141,95,0,152,0,0,4,144,4,0,12,20,0,0,0,144,6,223,247,144,4,255,144,22,0,22,0,24,0,0,0,26,0,0,0,17,216,0,0,202,89,32,144,0,255,245,218,234,17,216,0,0,202,89,0,152,0,255,245,218,218,17,216,0,0,89,32,144,0,255,245,202,17,0,0,33,216,0,0,250,22,0,22,0,24,0,0,0,232,230,22,0,22,32,24,0,0,0,232,230,144,6,224,200,95,0,152,0,0,248,9,38,15,55,9,38,16,0,0,8,186,1,224,22,0,0,0,24,0,177,0,17,208,0,0,89,32,144,0,0,4,144,4,0,6,200,211,17,208,0,0,89,255,144,1,36,89,254,144,1,31,21,0,0,37,64,180,1,20,0,255,255,36,64,180,2,38,64,180,6,40,64,180,8,144,6,253,73,144,4,0,166,20,0,0,0,89,255,144,0,0,4,144,4,0,12,200,211,21,208,0,0,200,211,144,4,0,10,200,211,20,208,0,0,200,211,200,211,17,208,0,0,89,32,144,0,0,4,144,4,0,2,200,211,36,64,180,2,226,18,64,180,4,3,66,155,0,0,4,144,4,0,4,36,64,180,4,242,91,1,144,0,0,4,144,4,0,12,18,0,0,0,34,64,180,8,144,4,0,43,16,64,180,12,32,64,180,8,16,64,180,12,186,1,3,32,64,180,12,16,0,128,0,32,64,180,6,15,163,218,17,216,0,0,33,104,180,6,218,154,0,255,243,22,0,96,0,24,0,0,0,10,65,186,15,164,18,64,180,8,34,216,0,0,144,4,254,77,20,0,0,0,95,0,152,0,0,4,144,4,0,4,144,6,222,146,23,64,180,1,95,0,152,0,0,4,144,4,0,107,20,64,180,2,22,0,96,0,24,0,0,0,10,65,15,164,20,64,180,2,196,36,64,180,2,18,216,0,0,90,0,0,144,0,0,39,16,0,128,0,32,64,180,6,34,64,180,8,144,6,252,75,95,0,152,0,0,4,144,4,0,13,16,0,0,0,33,64,180,1,212,144,6,222,57,23,64,180,1,95,0,152,0,0,4,144,4,0,18,20,64,180,2,18,64,180,4,3,66,144,0,255,153,147,0,255,149,144,4,253,178,167]},{addr:523776,data:[192,217,194,90,193,184,193,214,193,225,196,17,196,26,196,48,196,53,193,252,194,18,194,27,194,59,194,194,194,225,195,21,195,88,195,129,196,154,197,34,197,60,197,123,192,197,192,207,197,100,198,41,198,152,198,190,199,88,199,41,199,116,199,139,199,161]},{addr:524032,data:[182,16,0,124,65,224,165,22,0,0,0,24,0,0,0,20,0,2,0,16,0,0,0,33,208,0,0,200,212,92,0,0,152,0,255,243,24,0,167,167,40,64,0,0,28,0,32,0,15,236,144,6,192,202,190,48,16,56,113,1,152,0,0,4,144,4,0,8,144,4,32,184,144,4,0,4,144,4,208,176]}];var Ot=class{constructor(x){this.config=Object.assign({},{options:{timingMethod:K.SENTINEL,sliceGranularity:16384,sliceTime:16,ticksBetweenRasterLines:"AUTO",accurateScreen:!0,sentinel:void 0}},x);let f=new Ef({performance,debug:!0,timingMethod:this.config.options.timingMethod,sliceTime:this.config.options.sliceTime,sliceGranularity:this.config.options.sliceGranularity,sentinel:this.config.options.sentinel});f.memory.loadFromJS(Tt,!0);let t=new gf(f),r=new Kf({device:0,length:16,controller:f.controller,memory:f.memory,clock:f.clock,performance}),a=new Of({device:8,length:16,controller:f.controller,memory:f.memory,clock:f.clock}),i=new Df({device:1,length:32,controller:f.controller,memory:f.memory,clock:f.clock,performance});i.adjustPerformance=this.config.options.ticksBetweenRasterLines==="AUTO",this.config.options.ticksBetweenRasterLines!=="AUTO"&&(i.ticksBetweenRasterLines=Number(this.config.options.ticksBetweenRasterLines)),i.mode=2;let s=new If({device:13,length:16,controller:f.controller,memory:f.memory,clock:f.clock}),c=new Nf({device:3,length:16,controller:f.controller,memory:f.memory,clock:f.clock});this.computer=f,this.diagnostics=t,this.devices={console:a,screen:i,dma:s,keyboard:c,timers:r},f.reset()}},L;onmessage=e=>{let{data:x}=e,{command:f,options:t}=x;switch(f){case"sys-init":L=new Ot({options:t});break;case"sys-config":break;case"cpu-reset":if(L.computer.reset(),L.diagnostics.state==="running")return;L.computer.run();break;case"cpu-start":if(L.computer.processor.jump(Number(t.startAddress||"0xFF00")),L.computer.processor.registers.SINGLE_STEP=0,L.diagnostics.state==="running")return;L.computer.run();break;case"cpu-stop":L.computer.stop();break;case"cpu-continue":if(L.diagnostics.state==="running")return;L.computer.processor.registers.SINGLE_STEP=0,L.computer.processor.registers.INTERRUPT_DISABLE=0,L.computer.run();break;case"cpu-step":L.diagnostics.state==="running"&&(L.computer.processor.registers.INTERRUPT_DISABLE=1,L.computer.processor.registers.SINGLE_STEP=1),L.computer.step();break;case"cpu-jump":L.computer.processor.jump(Number(t.startAddress||"0xFF00"));break;case"frame-dump":let r=L.devices.screen.frame;L.devices.screen._wait&&L.devices.screen.resetWait(),postMessage({command:"frame",frame:r});break;case"frame-tick":break;case"dump-statistics":break;case"dump-registers":break;case"dump-flags":break;case"dump-fpu":break;case"key-get-gr":break;case"key-get-ctrl":break;case"key-get-shifted":break;case"key-down":{let{keyboard:a}=L.devices;a.keyDown(t.which);break}case"key-up":{let{keyboard:a}=L.devices;a.keyUp(t.which);break}case"key-pressed":{let{keyboard:a}=L.devices;a.keyPressed(t.which);break}case"key-set-raw":break;case"key-clear-raw":break;case"mem-peek":break;case"mem-poke":break;case"io-peek":break;case"io-poke":break;case"io-dump":{postMessage({command:"io-dump",io:L.computer.controller.readBytes(0,256)});break}case"mem-dump":{postMessage({command:"mem-dump",memory:L.computer.memory.readBytes(t.address,t.length)});break}case"disassemble":{let{address:a,length:i}=t,s=Number(a);a==="PC"&&(s=L.computer.processor.registers.PC);let c=L.diagnostics.disassembleMemory({start:Number(s),length:Number(i)}).split(`
`).map(n=>({address:n.substr(0,5),bytes:n.substr(7,11).trim(),asm:n.substr(22).trim()}));postMessage({command:"disassemble",asm:c});break}default:console.log(`Received unsupported event: ${e}`)}};})();
//# sourceMappingURL=worker.js.map
