{"version":3,"sources":["../../../docs/technical/technical-overview/6448-video-generator-1/hardware-sprites.md"],"names":["makeShortcode","name","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","file":"hardware-sprites.14788f61.js","sourceRoot":"../src/www/simple","sourcesContent":["/* @jsx mdx */\nimport React from 'react';\nimport { mdx } from '@mdx-js/react'\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Hardware Sprites`}</h1>\n    <p>{`The video processor can display up to sixteen sprites in any given frame. These sprites can have arbitrary dimensions, and can also be scaled.`}</p>\n    <p>{`Some sprites are initially reserved by the system:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Sprite 14: reserved for the mouse pointer`}</li>\n      <li parentName=\"ul\">{`Sprite 15: reserved for the text cursor`}</li>\n    </ul>\n    <h2>{`Sprite Configuration`}</h2>\n    <p>{`Sprites are configured using ports `}<inlineCode parentName=\"p\">{`0x1D`}</inlineCode>{`â€”`}<inlineCode parentName=\"p\">{`0x26`}</inlineCode>{`, but must first be selected using port `}<inlineCode parentName=\"p\">{`0x1C`}</inlineCode>{` in order to read or write sprite configuration data.`}</p>\n    <h3>{`Sprite Selection `}{`(`}{`0x1C:3-0`}{`)`}</h3>\n    <p>{`Selects the desired sprite `}{`(`}{`0 - 15`}{`)`}{`.`}</p>\n    <h3>{`Sprite Visibility `}{`(`}{`0x1D:7`}{`)`}</h3>\n    <p>{`If set, the selected sprite is visible. If not set, the selected sprite is hidden and not rendered.`}</p>\n    <h3>{`Sprite Layer `}{`(`}{`0x1D:6-5`}{`)`}</h3>\n    <p>{`Determines the layer over which to draw the sprite. Sprites are always drawn above the indicated layer.`}</p>\n    <h3>{`Sprite Source Page `}{`(`}{`0x1D:4-0`}{`)`}</h3>\n    <p>{`Determines the page from which to load the sprite's tile data. This is then mapped against sprite's tile page `}{`(`}<inlineCode parentName=\"p\">{`0X1F`}</inlineCode>{`)`}{` and used to render the sprite. Sprite are always tile-based in nature; there is no unique pixel addressing mode for sprites.`}</p>\n    <h3>{`Sprite Index `}{`(`}{`0x1E`}{`)`}</h3>\n    <p>{`Within a given 16K page, this is used to select the actual sprite data. An index addresses 64 bytes of memory, although with color data, a sprite is usually larger than 64 bytes.`}</p>\n    <h3>{`Sprite Scale `}{`(`}{`0x1F:7-6`}{`)`}</h3>\n    <p>{`Indicates the scale of the sprite.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`0`}</inlineCode>{`: normal scale`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1`}</inlineCode>{`: double scale`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`2`}</inlineCode>{`: 4x scale`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`3`}</inlineCode>{`: 8x scale`}</li>\n    </ul>\n    <h3>{`Sprite Tile Page `}{`(`}{`0x1F:4-0`}{`)`}</h3>\n    <p>{`Indicates the source tile material for the sprite.`}</p>\n    <h3>{`Sprite Height `}{`(`}{`0x20:7-4`}{`)`}</h3>\n    <p>{`Indicates the height of the sprite, in tiles. Ranges from 0 to 15 tiles high.`}</p>\n    <h3>{`Sprite Width `}{`(`}{`0x20:3-0`}{`)`}</h3>\n    <p>{`Indicates the width of the sprite, in tiles. Ranges from 0 to 15 tiles wide.`}</p>\n    <h3>{`Sprite Background Color `}{`(`}{`0x21`}{`)`}</h3>\n    <p>{`Indicates the sprite's background color. If `}<inlineCode parentName=\"p\">{`0x00`}</inlineCode>{`, the sprite will be transparent.`}</p>\n    <h3>{`Sprite Foreground Color `}{`(`}{`0x22`}{`)`}</h3>\n    <p>{`Indicates the sprite's foreground color. Any `}<inlineCode parentName=\"p\">{`0xFF`}</inlineCode>{` pixels in the sprite will render with this color.`}</p>\n    <h3>{`Sprite X Position `}{`(`}{`0x23 & 0x24`}{`)`}</h3>\n    <p>{`Determines the sprite's horizontal position. Combined, ports `}<inlineCode parentName=\"p\">{`0x23`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`0x24`}</inlineCode>{` form a sixteen-bit word `}{`(`}{`with `}<inlineCode parentName=\"p\">{`0x23`}</inlineCode>{` as the high eight bits`}{`)`}{` allowing a sprite to be positioned anywhere on the screen. The position is signed, meaning that negative values can be specified to ensure that a sprite is off screen `}{`(`}{`to the left`}{`)`}{`.`}</p>\n    <p>{`Note that the horizontal sprite position of `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` does not indicate the left-most visible pixel column on the screen. Instead `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` is typically behind the screen border. For small sprites, this means it's easy to go \"off screen\" without having to go negative.`}</p>\n    <p>{`The screen border is typically 64 pixels wide. To display a sprite at the first visible horizontal pozition, set the X position to 64. Similarly, the last visible X position is 575.`}</p>\n    <h3>{`Sprite Y Position `}{`(`}{`0x25 & 0x26`}{`)`}</h3>\n    <p>{`Determines the sprite's vertical position. Like the X position, these two ports combine to form a sixteen-bit word `}{`(`}{`with `}<inlineCode parentName=\"p\">{`0x25`}</inlineCode>{` as the high byte`}{`)`}{`. This allows the sprite to be positioned anywhere on the screen. The position is signed, meaning that negative values can be specified to ensure that a sprite is off screen `}{`(`}{`above the top`}{`)`}{`.`}</p>\n    <p>{`A vertical position of `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` does not indicate the top-most visible pixel row on the screen. Instead this is typically behind the screen border. The screen border is typically 48 pixels high. To display a sprite at the first visible position, set the Y position to 48. Similarly the last visible Y position is 431.`}</p>\n    <h2>{`Sprite Collisions`}</h2>\n    <p>{`Sprite collisions are tracked with ports `}<inlineCode parentName=\"p\">{`0x29`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`0x2A`}</inlineCode>{`. Each bit `}{`(`}{`with `}<inlineCode parentName=\"p\">{`0x29`}</inlineCode>{` being the high bits`}{`)`}{` represents a single sprite. If the bit is set, the sprite collided with `}<em parentName=\"p\">{`something`}</em>{` `}{`(`}{`although the system doesn't track `}<em parentName=\"p\">{`what`}</em>{`)`}{`. If unset, the sprite hasn't collided with anything.`}</p>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`TODO: Implement this!`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"]}