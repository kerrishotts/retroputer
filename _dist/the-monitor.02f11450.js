parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"uQQb":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=l;var t=a(require("react")),e=require("@mdx-js/react");function a(t){return t&&t.__esModule?t:{default:t}}function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t}).apply(this,arguments)}const n=t=>(function(a){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,e.mdx)("div",a)}),d={},m="wrapper";function l({components:t,...a}){return(0,e.mdx)(m,r({},d,a,{components:t,mdxType:"MDXLayout"}),(0,e.mdx)("h1",null,"The Monitor"),(0,e.mdx)("p",null,"The Retroputer monitor is a way to view the state of the machine from ",(0,e.mdx)("em",{parentName:"p"},"within")," the machine itself. It allows you to debug programs, inspect memory, and make changes on the fly."),(0,e.mdx)("p",null,"Launching the monitor can be done in one of several ways:"),(0,e.mdx)("table",null,(0,e.mdx)("thead",{parentName:"table"},(0,e.mdx)("tr",{parentName:"thead"},(0,e.mdx)("th",r({parentName:"tr"},{align:"left"}),"Context"),(0,e.mdx)("th",r({parentName:"tr"},{align:"left"}),"Mechanism"))),(0,e.mdx)("tbody",{parentName:"table"},(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"At power-on or warm reset"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Press and hold SHIFT until the monitor appears.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"From BASIC"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Type ",(0,e.mdx)("inlineCode",{parentName:"td"},"MONITOR")," and press ",(0,e.mdx)("strong",{parentName:"td"},"ENTER"),".")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"From machine code"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Jump to address ",(0,e.mdx)("inlineCode",{parentName:"td"},"0x7D800")," ","(","assumes that page thirty-one is mapped to page three",")")))),(0,e.mdx)("p",null,"Upon launch, the monitor will announce itself and display the current status of the machine by listing out several registers:"),(0,e.mdx)("p",null,(0,e.mdx)("img",r({parentName:"p"},{src:"../images/monitor-greeting.png",alt:"The Retroputer Monitor Welcome"}))),(0,e.mdx)("p",null,"Whenever you see a ",(0,e.mdx)("inlineCode",{parentName:"p"},"READY.")," prompt, the monitor is waiting for your command. The monitor understands the following commands:"),(0,e.mdx)("table",null,(0,e.mdx)("thead",{parentName:"table"},(0,e.mdx)("tr",{parentName:"thead"},(0,e.mdx)("th",r({parentName:"tr"},{align:"left"}),"Monitor Command"),(0,e.mdx)("th",r({parentName:"tr"},{align:"left"}),"Mnemonic"),(0,e.mdx)("th",r({parentName:"tr"},{align:"left"}),"Meaning"))),(0,e.mdx)("tbody",{parentName:"table"},(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"A ","[","address","]"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Assemble"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Start writing assembly code at the address ","(","or PC if not supplied",")",".")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"B ","[","address","]"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Break ","(","at",")"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Set a breakpoint at the given address ","(","or PC",")",".")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"C ","[","address","]"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Clear ","(","breapoint",")"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Clear a breakpoint at the given address ","(","or PC",")",".")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"D ","[","address","]"," ","[","count","]"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Disassemble"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Show a dissassembly at the specified address, for the specified number of lines. If no address is supplied, PC is assumed. If no count is supplied, 16 is assumed.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"E ","[","address","]"," - ","[","address","]"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Examine"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Examine memory contents at the specified address. If no ending address is specified, sixteen bytes are displayed.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"F"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"})),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}))),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"G ","[","address","]"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Go"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Starts execution at the specified address ","(","or PC",")",".")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"H"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"})),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}))),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"I port"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"In"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Reads a byte from the specified port.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"J"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"})),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}))),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"K address size target-address"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Copy Bloc","(","K",")"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Copies a block from one place to another.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),'L "program name"'),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Load"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Loads the specified program from persistent storage.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"M"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"})),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}))),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"N ","[","address","]"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Next"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Executes the instruction at address ","(","or PC",")",", and advances by a single instruction.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"O port value"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Out"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Writes the value to the specified port.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"P"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Processor ","(","Status",")"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Prints the processor status.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Q"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Quit"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Exits the monitor and returns control to the caller. If started at power-on or warm reset, control is given to BASIC.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"R register value"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"(","Set",")"," Register"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Sets the specified register to the given value.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"S ","[",'"program name"',"]"," ","[","start address","]"," ","[","end address","]"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Save"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Saves the specified contents of memory.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"T 0","|","1"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Trace"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Enables ","(","1",")"," or disables ","(","0",")"," tracing of instructions during execution. During trace mode, use N to step through each instruction.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"U"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"})),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}))),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"V"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"})),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}))),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"W address bytes..."),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Write"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Writes the specified bytes to the given address.")),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"X"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"})),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}))),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Y"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"})),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}))),(0,e.mdx)("tr",{parentName:"tbody"},(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}),"Z"),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"})),(0,e.mdx)("td",r({parentName:"tr"},{align:"left"}))))))}l.isMDXComponent=!0;
},{"react":"SAdv","@mdx-js/react":"QaRW"}]},{},[], null)
//# sourceMappingURL=/the-monitor.02f11450.js.map