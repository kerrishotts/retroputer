{"version":3,"sources":["../../../docs/programming-retroputer/basic/statement-reference/def.md"],"names":["makeShortcode","name","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";AA2EA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EA1EA,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,iBAyEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,IAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,WArEA,MAAMA,EAAgBC,IAAQ,SAA6BC,GAElD,OADPC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,EAASC,EAAAA,KAAAA,MAAAA,KAGZG,EAAc,GAGdC,EAAY,UACH,SAASC,GAAW,WACjCC,KACGN,IAEI,OAAA,EAAC,EAAA,KAAA,EAAcG,EAAAA,GAAAA,EAAiBH,EAAhC,CAAuC,WAAYM,EAAY,QAAQ,eAC5E,EADK,EAAA,KAAA,KAAA,KAAA,QAEL,EAAG,EAAA,KAAA,IAAA,MAAA,EAAA,EAAA,KAAA,aAAA,CAAY,WAAW,KAA1B,OAFK,yCAGL,EAHK,EAAA,KAAA,KAAA,KAAA,UAIL,EAJK,EAAA,KAAA,KAAA,KAAA,qBAKL,EAAK,EAAA,KAAA,MAAA,MAAA,EAAA,EAAA,KAAA,OAAA,EAAA,CAAM,WAAW,OAAU,CACf,UAAA,kBADjB,sGAKA,EAVK,EAAA,KAAA,KAAA,KAAA,mBAWL,EAAK,EAAA,KAAA,MAAA,MAAA,EAAA,EAAA,KAAA,OAAA,EAAA,CAAM,WAAW,OAAU,CACf,UAAA,kBADjB,mJAWA,EAtBK,EAAA,KAAA,KAAA,KAAA,aAuBL,EAvBK,EAAA,KAAA,KAAA,KAAA,0BAwBL,EAAK,EAAA,KAAA,MAAA,MAAA,EAAA,EAAA,KAAA,OAAA,EAAA,CAAM,WAAW,OAAU,CACf,UAAA,kBADjB,0FAKA,EA7BK,EAAA,KAAA,KAAA,KAAA,uBA8BL,EAAK,EAAA,KAAA,MAAA,MAAA,EAAA,EAAA,KAAA,OAAA,EAAA,CAAM,WAAW,OAAU,CACf,UAAA,kBADjB,oPAeA,EA7CK,EAAA,KAAA,KAAA,KAAA,eA8CL,EAAK,EAAA,KAAA,MAAA,MAAA,EAAA,EAAA,KAAA,OAAA,EAAA,CAAM,WAAW,OAAU,CACf,UAAA,kBADjB,8DAUJD,EAAWE,gBAAiB","file":"def.d85dacbf.js","sourceRoot":"../src/www/simple","sourcesContent":["/* @jsx mdx */\nimport React from 'react';\nimport { mdx } from '@mdx-js/react'\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`DEF`}</h1>\n    <p><inlineCode parentName=\"p\">{`DEF`}</inlineCode>{` defines a function or a subroutine.`}</p>\n    <h3>{`Forms`}</h3>\n    <h4>{`Single line form`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`DEF FN fnName([arg [, args...]]) = expression\nDEF SUB subName([arg, [, args...]]) = statement\n`}</code></pre>\n    <h4>{`Multiline form`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`DEF FN fnName([arg [, args...])\n  REM statements\n  RETURN result\nEND FN\n\nDEF SUB subName([arg [, args...]])\n  REM Statements\nEND SUB\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <h4>{`Single line functions`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`DEF FN double(x) = RETURN x * 2\nDEF FN textAddr(row, col) = RETURN row * 32 + col\n`}</code></pre>\n    <h4>{`Multiline function`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`DEF FN upper$(str$)\n  DIM t$, ch$, ch\n  FOR i = 0 TO LEN(str$)\n    ch$ = str$[i]\n    ch = ASC(ch$)\n    IF ch >= ASC(\"a\") AND ch <= ASC(\"z\") THEN\n      ch = ch - 32\n    END IF\n    t$ = t$ + CHR$(ch)\n  NEXT i\n  RETURN t$\nEND FN\n`}</code></pre>\n    <h4>{`Subroutine`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`DEF SUB printIntro()\n  PRINT \"Hello, world!\"\nEND SUB\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"]}