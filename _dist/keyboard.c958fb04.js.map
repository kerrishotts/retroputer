{"version":3,"sources":["../../../docs/technical/devices-1/keyboard.md"],"names":["makeShortcode","name","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","file":"keyboard.c958fb04.js","sourceRoot":"../src/www/simple","sourcesContent":["/* @jsx mdx */\nimport React from 'react';\nimport { mdx } from '@mdx-js/react'\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Keyboard`}</h1>\n    <p>{`The keyboard device listens for user keypresses and then sends them to the processor for further handling.`}</p>\n    <h3>{`Layout`}</h3>\n    <p>{`The physical layout is modern, especially when compared with typical computers of the era where it often seemed as every computer had a different location for various symbols. Retroputer does have a few custom keys, but nothing that would be surprising to modern users.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../../images/unshifted-keyboard.png\",\n        \"alt\": \"Physical key placement\"\n      }}></img></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Retroputer Key`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`macOS`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Windows`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`fn`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Cmd`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Windows`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`gr`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Opt`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Alt`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`ctrl`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Ctrl`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Ctrl`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`bksp`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Delete`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Backspace`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`enter`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Return`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Enter`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`caps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Caps Lock`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Caps Lock`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Logically the keyboard is laid out in five rows of two quadrants. Each quadrant is represented by an I/O byte and can represent if a key is pressed by setting a bit `}{`(`}{`or a key is not pressed by clearing the bit`}{`)`}{`.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../../images/keyboard-scan-codes.png\",\n        \"alt\": \"Logical Keyboard Layout\"\n      }}></img></p>\n    <p>{`This makes it possible to detect if multiple keys are `}<em parentName=\"p\">{`currently`}</em>{` being pressed.`}</p>\n    <h3>{`The `}{`[`}{`GR`}{`]`}{` Key`}</h3>\n    <p>{`The `}<strong parentName=\"p\">{`GR`}</strong>{` key enables you to type graphical characters with the keyboard. You can access an alternate set by pressing `}<strong parentName=\"p\">{`GR`}</strong>{`+`}<strong parentName=\"p\">{`SHIFT`}</strong>{` at the same time.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../../images/keyboard-gr-unshifted.png\",\n        \"alt\": \"Characters obtained with GR\"\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../../images/keyboard-gr-shifted.png\",\n        \"alt\": \"Characters obtained with GR and SHIFT\"\n      }}></img></p>\n    <h3>{`The `}{`[`}{`CTRL`}{`]`}{` Key`}</h3>\n    <p>{`The `}<strong parentName=\"p\">{`CTRL`}</strong>{` key is used to translate keys to their corresponding control codes. This only works for alphabetical keys and a few numerical keys. `}<strong parentName=\"p\">{`CTRL`}</strong>{`+`}<strong parentName=\"p\">{`H`}</strong>{` will generate RetSCII code `}<inlineCode parentName=\"p\">{`08`}</inlineCode>{`, which corresponds to `}<strong parentName=\"p\">{`BACKSPACE`}</strong>{`.`}</p>\n    <p>{`The following maps the `}<strong parentName=\"p\">{`CTRL`}</strong>{` combination to the resulting control code.`}</p>\n    <table>\n  <thead>\n    <tr>\n      <th style=\"text-align:left\">CTRL +</th>\n      <th style=\"text-align:left\">RetSCII Code</th>\n      <th style=\"text-align:left\">Control Code</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align:left\">A</td>\n      <td style=\"text-align:left\"><code>01</code>\n      </td>\n      <td style=\"text-align:left\">N/A</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">B</td>\n      <td style=\"text-align:left\"><code>02</code>\n      </td>\n      <td style=\"text-align:left\">N/A</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">C</td>\n      <td style=\"text-align:left\"><code>03</code>\n      </td>\n      <td style=\"text-align:left\">Break</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">D</td>\n      <td style=\"text-align:left\"><code>04</code>\n      </td>\n      <td style=\"text-align:left\">N/A</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">E</td>\n      <td style=\"text-align:left\"><code>05</code>\n      </td>\n      <td style=\"text-align:left\">N/A</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">F</td>\n      <td style=\"text-align:left\"><code>06</code>\n      </td>\n      <td style=\"text-align:left\">N/A</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">G</td>\n      <td style=\"text-align:left\"><code>07</code>\n      </td>\n      <td style=\"text-align:left\">Bell</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">H</td>\n      <td style=\"text-align:left\"><code>08</code>\n      </td>\n      <td style=\"text-align:left\">Backspace</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">I</td>\n      <td style=\"text-align:left\"><code>09</code>\n      </td>\n      <td style=\"text-align:left\">Tab</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">J</td>\n      <td style=\"text-align:left\"><code>0A</code>\n      </td>\n      <td style=\"text-align:left\">Line Feed</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">K</td>\n      <td style=\"text-align:left\"><code>0B</code>\n      </td>\n      <td style=\"text-align:left\">N/A</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">L</td>\n      <td style=\"text-align:left\"><code>0C</code>\n      </td>\n      <td style=\"text-align:left\">\n        <p>Form Feed /</p>\n        <p>Clear Screen</p>\n      </td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">M</td>\n      <td style=\"text-align:left\"><code>0D</code>\n      </td>\n      <td style=\"text-align:left\">\n        <p>Carriage Return /</p>\n        <p>Enter</p>\n      </td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">N</td>\n      <td style=\"text-align:left\"><code>0E</code>\n      </td>\n      <td style=\"text-align:left\">N/A</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">O</td>\n      <td style=\"text-align:left\"><code>0F</code>\n      </td>\n      <td style=\"text-align:left\">N/A</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">P</td>\n      <td style=\"text-align:left\"><code>10</code>\n      </td>\n      <td style=\"text-align:left\">Cursor Right</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">Q</td>\n      <td style=\"text-align:left\"><code>11</code>\n      </td>\n      <td style=\"text-align:left\">Cursor Left</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">R</td>\n      <td style=\"text-align:left\"><code>12</code>\n      </td>\n      <td style=\"text-align:left\">F1</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">S</td>\n      <td style=\"text-align:left\"><code>13</code>\n      </td>\n      <td style=\"text-align:left\">F2</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">T</td>\n      <td style=\"text-align:left\"><code>14</code>\n      </td>\n      <td style=\"text-align:left\">F3</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">U</td>\n      <td style=\"text-align:left\"><code>15</code>\n      </td>\n      <td style=\"text-align:left\">F4</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">V</td>\n      <td style=\"text-align:left\"><code>16</code>\n      </td>\n      <td style=\"text-align:left\">F5</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">W</td>\n      <td style=\"text-align:left\"><code>17</code>\n      </td>\n      <td style=\"text-align:left\">F6</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">X</td>\n      <td style=\"text-align:left\"><code>18</code>\n      </td>\n      <td style=\"text-align:left\">F7</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">Y</td>\n      <td style=\"text-align:left\"><code>19</code>\n      </td>\n      <td style=\"text-align:left\">F8</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">Z</td>\n      <td style=\"text-align:left\"><code>1A</code>\n      </td>\n      <td style=\"text-align:left\">F9</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0</td>\n      <td style=\"text-align:left\"><code>1B</code>\n      </td>\n      <td style=\"text-align:left\">F10</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">1</td>\n      <td style=\"text-align:left\"><code>1C</code>\n      </td>\n      <td style=\"text-align:left\">N/A</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">2</td>\n      <td style=\"text-align:left\"><code>1D</code>\n      </td>\n      <td style=\"text-align:left\">Delete</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">3</td>\n      <td style=\"text-align:left\"><code>1E</code>\n      </td>\n      <td style=\"text-align:left\">Cursor Up</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">4</td>\n      <td style=\"text-align:left\"><code>1F</code>\n      </td>\n      <td style=\"text-align:left\">Cursor Down</td>\n    </tr>\n  </tbody>\n    </table>### The Buffer\n    <p>{`Because it's possible that the computer won't have a chance to check for a keyboard character being registered during long computations, the keyboard has a 256-character buffer that will store these until they are read back. Once the user reaches the end of the buffer, additional key presses are lost.`}</p>\n    <h3>{`Ports`}</h3>\n    <table>\n  <thead>\n    <tr>\n      <th style=\"text-align:left\">Port</th>\n      <th style=\"text-align:left\">Name</th>\n      <th style=\"text-align:left\">Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align:left\">0x30</td>\n      <td style=\"text-align:left\">RetSCII code of key pressed</td>\n      <td style=\"text-align:left\">\n        <ul>\n          <li>0x00 if no key pressed.</li>\n          <li>Reading will clear the value.</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x31</td>\n      <td style=\"text-align:left\">Buffer Remaining</td>\n      <td style=\"text-align:left\"># of characters remaining in the buffer</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x32</td>\n      <td style=\"text-align:left\">r0:0-7 keys pressed</td>\n      <td style=\"text-align:left\">A set bit indicates the key is currently pressed. Zero indicates that\n        it is up.</td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x33</td>\n      <td style=\"text-align:left\">r0:8-F keys pressed</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x34</td>\n      <td style=\"text-align:left\">r1:0-7 keys pressed</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x35</td>\n      <td style=\"text-align:left\">r1:8-F keys pressed</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x36</td>\n      <td style=\"text-align:left\">r2:0-7 keys pressed</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x37</td>\n      <td style=\"text-align:left\">r2:8-F keys pressed</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x38</td>\n      <td style=\"text-align:left\">r3:0-7 keys pressed</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x39</td>\n      <td style=\"text-align:left\">r3:8-F keys pressed</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x3A</td>\n      <td style=\"text-align:left\">r4:0-7 keys pressed</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x3B</td>\n      <td style=\"text-align:left\">r4:8-F keys pressed</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x3C</td>\n      <td style=\"text-align:left\">&#x2013;</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x3D</td>\n      <td style=\"text-align:left\">&#x2013;</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x3E</td>\n      <td style=\"text-align:left\">&#x2013;</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n    <tr>\n      <td style=\"text-align:left\">0x3F</td>\n      <td style=\"text-align:left\">&#x2013;</td>\n      <td style=\"text-align:left\"></td>\n    </tr>\n  </tbody>\n    </table>\n    <h3>{`Polling the keyboard`}</h3>\n    <p>{`You can poll the keyboard for input as follows:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Read the value of port 0x30`}</li>\n      <li parentName=\"ul\">{`If it is non-zero, a key is in the buffer waiting to be processed`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`You must immediately handle the key; checking the buffer will remove the key from the buffer.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Repeat!`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Call `}<inlineCode parentName=\"li\">{`PUT_CHAR`}</inlineCode>{` if you'd like to echo the results on screen.`}</li>\n        </ul></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`.segment code 0x02000 {\n.const PUT_CHAR 0x0FE0C\n\ntop:\n    do {\n        in dl, 0x30\n        cmp dl, 0\n    } while z\n    call [PUT_CHAR]\n    br top\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"]}