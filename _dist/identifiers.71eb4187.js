parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"dhZQ":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=o;var e=a(require("react")),n=require("@mdx-js/react");function a(e){return e&&e.__esModule?e:{default:e}}function t(){return(t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}const i=e=>(function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.mdx)("div",a)}),r={},d="wrapper";function o({components:e,...a}){return(0,n.mdx)(d,t({},r,a,{components:e,mdxType:"MDXLayout"}),(0,n.mdx)("h1",null,"Identifiers"),(0,n.mdx)("p",null,"Identifiers can be used to label any address, whether it be for code or for data storage. Identifiers can consist of alphanumeric characters as well as underscores and dashes."),(0,n.mdx)("blockquote",null,(0,n.mdx)("h4",{parentName:"blockquote"},"Important"),(0,n.mdx)("ul",{parentName:"blockquote"},(0,n.mdx)("li",{parentName:"ul"},"An identifier must start with an alphabetic character or an underscore. It may not begin with a digit or a dash."),(0,n.mdx)("li",{parentName:"ul"},"An identifier may ",(0,n.mdx)("em",{parentName:"li"},"not")," be a reserved word or register."))),(0,n.mdx)("p",null,"Identifiers are often defined by providing the name of the identifier followed by a colon ","(",(0,n.mdx)("inlineCode",{parentName:"p"},":"),")",". For example:"),(0,n.mdx)("pre",null,(0,n.mdx)("code",t({parentName:"pre"},{className:"language-text"}),"cursor-pos: .word 0x0000\ncursor-page: .byte 0x01\n\n    LD A, screen.tile-pages-bot\n    LD B, screen.tile-page-offset\n    XOR C, C\n    LD CL, [cursor-page]\n    SUB A, B\nloop:\n    ADD A, B\n    LOOP CL, loop\n")),(0,n.mdx)("p",null,"Identifiers are scoped to their nearest parent block. Identifiers within a block do not need additional qualification, but to access identifiers in other blocks, one must qualify the identifier with the scope name. For example:"),(0,n.mdx)("pre",null,(0,n.mdx)("code",t({parentName:"pre"},{className:"language-text"}),".segment kdata 0x0B800 .append {\n    cursor-pos: .word 0x0000\n    cursor-page: .byte 0x01\n}\n\n.segment kcode 0x0BC00 .append {\n    LD A, [kdata.cursor-pos]\n}\n")),(0,n.mdx)("h2",null,"Reserved Words"),(0,n.mdx)("h3",null,"Registers"),(0,n.mdx)("p",null,"Registers can be specified using their alias ","(",(0,n.mdx)("inlineCode",{parentName:"p"},"A"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"B"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"C"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"D"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"X"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"Y"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"SP"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"BP"),")",". For ",(0,n.mdx)("inlineCode",{parentName:"p"},"A")," - ",(0,n.mdx)("inlineCode",{parentName:"p"},"D")," and ",(0,n.mdx)("inlineCode",{parentName:"p"},"X")," and ",(0,n.mdx)("inlineCode",{parentName:"p"},"Y"),", the eight-bit form can also be used ","(",(0,n.mdx)("inlineCode",{parentName:"p"},"AL"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"BL"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"CL"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"DL"),", etc",")","."),(0,n.mdx)("p",null,"The status register and the ",(0,n.mdx)("inlineCode",{parentName:"p"},"PC"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"MM"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"CF")," registers cannot be specified directly in any assembly language instruction. This also means that registers 16 - 23 are inaccessible. Only certain commands can work on these registers. ",(0,n.mdx)("inlineCode",{parentName:"p"},"PUSHF"),", for example, can push the status register on to the stack. ",(0,n.mdx)("inlineCode",{parentName:"p"},"BR")," and ",(0,n.mdx)("inlineCode",{parentName:"p"},"CALL")," and ",(0,n.mdx)("inlineCode",{parentName:"p"},"RET")," all manipulate the ",(0,n.mdx)("inlineCode",{parentName:"p"},"PC"),"."),(0,n.mdx)("h3",null,"Flags"),(0,n.mdx)("p",null,"Flags can be specified using their names: ",(0,n.mdx)("inlineCode",{parentName:"p"},"N"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"V"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"C"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"Z"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"ID"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"IS"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"EX"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"SS"),". Flag names are not reserved for identifiers as it is unambiguous when flags are being used in an instruction."))}o.isMDXComponent=!0;
},{"react":"SAdv","@mdx-js/react":"QaRW"}]},{},[], null)
//# sourceMappingURL=/identifiers.71eb4187.js.map