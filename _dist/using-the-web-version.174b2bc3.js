parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"HgRH":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=l;var e=a(require("react")),t=require("@mdx-js/react");function a(e){return e&&e.__esModule?e:{default:e}}function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}const r=e=>(function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,t.mdx)("div",a)}),o={},i="wrapper";function l({components:e,...a}){return(0,t.mdx)(i,n({},o,a,{components:e,mdxType:"MDXLayout"}),(0,t.mdx)("h1",null,"Using the Web Version"),(0,t.mdx)("p",null,"The Web Version of Retroputer makes it easy to get a feel for how Retroputer works. It's a completely integrated development environment, including the ability to see the current state of the machine, the contents of memory, the I/O bus, and an assembler. "),(0,t.mdx)("p",null,(0,t.mdx)("img",n({parentName:"p"},{src:"./images/web-interface.png",alt:"The web version of Retroputer"}))),(0,t.mdx)("blockquote",null,(0,t.mdx)("p",{parentName:"blockquote"},(0,t.mdx)("strong",{parentName:"p"},"Note")),(0,t.mdx)("p",{parentName:"blockquote"},"Retroputer's emulation speed depends upon the performance capabilities of your browser and computer processor. Code written for Retroputer assumes that it is running at roughly 1MHz and that the VGU is creating roughly 60 frames per second."),(0,t.mdx)("p",{parentName:"blockquote"},"If your browser does not match this performance, Retroputer may feel slow to you.")),(0,t.mdx)("h2",null,"The Workspace"),(0,t.mdx)("p",null,"Retroputer's workspace is a collection of dockable, resizable panels that can be maximized and restored as you desire. This allows you to change the workspace to something that suits the needs at hand."),(0,t.mdx)("p",null,"By default, there are several panels present:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Control")," panel controls if the Retroputer processor and other accessories are running, as well as the various performance characteristics of the emulation."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"FPS")," panel indicates how often the VGU is able to generate a frame ","(","and how well the browser is coping with frame generation in general",")","."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"State")," panel indicates the machine's current status."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Code")," panel allows you to enter Assembly language code and assemble it into memory."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Memory")," panel displays the current contents of Retroputer's RAM and ROM. It updates automatically every second."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"I/O")," panel displays the current readings of the I/O bus."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Screen")," panel renders the frame generated by the VGU."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Console")," panel renders any content sent to Retroputer's console ","(","not the same as the screen",")","."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Documentation")," panel renders Retroputer's documentation within the app.")),(0,t.mdx)("h3",null,"The Control Panel"),(0,t.mdx)("p",null,"The ",(0,t.mdx)("strong",{parentName:"p"},"Control")," panel is used to start, pause, and single-step the Retroputer's processor. It is also used to configure performance characteristics of the emulation while not single-stepping."),(0,t.mdx)("p",null,"There are several fields available that control the execution of Retroputer:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Starting Address")," indicates the first instruction that will be executed when Retroputer is started ","(","using the ",(0,t.mdx)("strong",{parentName:"li"},"Start")," button",")",". It also specifies the instruction that will be pointed to when the ",(0,t.mdx)("strong",{parentName:"li"},"Jump")," button is clicked. The default value is ",(0,t.mdx)("inlineCode",{parentName:"li"},"0x0FF00"),", which is the ",(0,t.mdx)("inlineCode",{parentName:"li"},"INIT")," vector."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"Start")," will jump to the ",(0,t.mdx)("strong",{parentName:"li"},"Starting Address")," and begin running the Retroputer from there. Execution continues until the machine encounters a ",(0,t.mdx)("inlineCode",{parentName:"li"},"BRK")," ","(","break",")"," instruction or until manually stopped by clicking the ",(0,t.mdx)("strong",{parentName:"li"},"Stop")," or ",(0,t.mdx)("strong",{parentName:"li"},"Step")," buttons."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"Continue")," will continue execution from the last place before being stopped. "),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"Stop")," will stop execution of the Retroputer processor immediately. The VGU continues to execute for a couple more frames just to ensure that you can see any output that may have been generated before the completion of a frame."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"Jump")," will set ",(0,t.mdx)("inlineCode",{parentName:"li"},"PC")," to the ",(0,t.mdx)("strong",{parentName:"li"},"Starting Address")," value. Most useful with ",(0,t.mdx)("strong",{parentName:"li"},"Step")," and ",(0,t.mdx)("strong",{parentName:"li"},"Continue"),"."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"Step")," will execute the next instruction and ",(0,t.mdx)("strong",{parentName:"li"},"stop"),"."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"Randomize")," assigns random values to all of RAM ","(","excluding ROM",")",".")),(0,t.mdx)("p",null,"There are also several fields that control the performance characteristics of Retroputer:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("strong",{parentName:"li"},"Mode")," indicates if the emulator should execute a ",(0,t.mdx)("strong",{parentName:"li"},"fixed")," number of instructions per slice ","(","roughly a single frame",")",", or if the emulator is free to maximize the number of instructions per slice ","(","while trying to target 60fps",")"," – this value is called ",(0,t.mdx)("strong",{parentName:"li"},"auto"),". The default value is ",(0,t.mdx)("inlineCode",{parentName:"li"},"fixed"),"."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Slice Granularity")," behaves differently depending upon the selected ",(0,t.mdx)("strong",{parentName:"li"},"Mode"),".",(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},"When ",(0,t.mdx)("strong",{parentName:"li"},"Mode")," is ",(0,t.mdx)("strong",{parentName:"li"},"fixed"),", this number of instructions will ",(0,t.mdx)("em",{parentName:"li"},"always")," be executed per slice – no more, no less. ","(","Unless a ",(0,t.mdx)("inlineCode",{parentName:"li"},"BRK")," is encountered.",")"," The default value is ",(0,t.mdx)("inlineCode",{parentName:"li"},"4192"),"."),(0,t.mdx)("li",{parentName:"ul"},"When ",(0,t.mdx)("strong",{parentName:"li"},"Mode")," is ",(0,t.mdx)("strong",{parentName:"li"},"auto"),", this specifies the number of instructions to execute ",(0,t.mdx)("em",{parentName:"li"},"before")," checking to see if there's additional time available in the slice to process more instructions. Because the act of checking the time itself takes time, it can be slower to check every instruction if there's still time. The default value here is ",(0,t.mdx)("inlineCode",{parentName:"li"},"255"),"."))),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Ticks Between Raster")," field indicates how many processor ticks occur before the next VGU update. The default mode is to render a VGU frame all at once, but this isn't as accurate. It's more accurate to render a VGU frame ",(0,t.mdx)("em",{parentName:"li"},"as")," the processor is working, but this is significantly slower. The default value is ",(0,t.mdx)("strong",{parentName:"li"},"Auto"),", indicating that the processor will be given as much time as possible, while also trying to generate a full frame every 60th of a second."),(0,t.mdx)("li",{parentName:"ul"},"The ",(0,t.mdx)("strong",{parentName:"li"},"Apply")," button applies any changes to the performance characteristics.")),(0,t.mdx)("h3",null,"The FPS Panel"),(0,t.mdx)("p",null,"The FPS panel indicates the frames-per-second that Retroputer is achieving. The first graph shows how rapidly the browser is able to apply frames from the VGU to the browser canvas ","(","the target here should always be 60fps",")",". The second graph shows how many frames are being generated from the VGU. Ideally this is always the same as the first graph, but if it's lower, it can indicate that the VGU and processor emulation are taking too much time and causing slower frame output."),(0,t.mdx)("h3",null,"The State Panel"),(0,t.mdx)("p",null,"The ",(0,t.mdx)("strong",{parentName:"p"},"State")," panel lets you take a look into the processor state. You can request a single update simply by clicking the ",(0,t.mdx)("strong",{parentName:"p"},"Refresh")," button, or you can start a continuous stream of updates by clicking the ",(0,t.mdx)("strong",{parentName:"p"},"Play")," button ","(","which turns into a ",(0,t.mdx)("strong",{parentName:"p"},"Stop")," button",")","."),(0,t.mdx)("h3",null,"The Code Panel"),(0,t.mdx)("h3",null,"The Memory Panel"),(0,t.mdx)("h3",null,"The I/O Panel"),(0,t.mdx)("h3",null,"The Screen panel"),(0,t.mdx)("h3",null,"The Console Panel"),(0,t.mdx)("h3",null,"The Documentation Panel"),(0,t.mdx)("h2",null,"Starting Retroputer"),(0,t.mdx)("p",null,(0,t.mdx)("img",n({parentName:"p"},{src:"./images/basic-greeting.png",alt:"Retroputer's Launch Screen with BASIC running"}))))}l.isMDXComponent=!0;
},{"react":"SAdv","@mdx-js/react":"QaRW"}]},{},[], null)
//# sourceMappingURL=/using-the-web-version.174b2bc3.js.map