parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"KKXg":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=u;var e=r(require("react")),n=require("@mdx-js/react");function r(e){return e&&e.__esModule?e:{default:e}}function t(){return(t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e}).apply(this,arguments)}const a=e=>(function(r){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.mdx)("div",r)}),l={},o="wrapper";function u({components:e,...r}){return(0,n.mdx)(o,t({},l,r,{components:e,mdxType:"MDXLayout"}),(0,n.mdx)("h1",null,"DEF"),(0,n.mdx)("p",null,(0,n.mdx)("inlineCode",{parentName:"p"},"DEF")," defines a function or a subroutine."),(0,n.mdx)("h3",null,"Forms"),(0,n.mdx)("h4",null,"Single line form"),(0,n.mdx)("pre",null,(0,n.mdx)("code",t({parentName:"pre"},{className:"language-text"}),"DEF FN fnName([arg [, args...]]) = expression\nDEF SUB subName([arg, [, args...]]) = statement\n")),(0,n.mdx)("h4",null,"Multiline form"),(0,n.mdx)("pre",null,(0,n.mdx)("code",t({parentName:"pre"},{className:"language-text"}),"DEF FN fnName([arg [, args...])\n  REM statements\n  RETURN result\nEND FN\n\nDEF SUB subName([arg [, args...]])\n  REM Statements\nEND SUB\n")),(0,n.mdx)("h2",null,"Examples"),(0,n.mdx)("h4",null,"Single line functions"),(0,n.mdx)("pre",null,(0,n.mdx)("code",t({parentName:"pre"},{className:"language-text"}),"DEF FN double(x) = RETURN x * 2\nDEF FN textAddr(row, col) = RETURN row * 32 + col\n")),(0,n.mdx)("h4",null,"Multiline function"),(0,n.mdx)("pre",null,(0,n.mdx)("code",t({parentName:"pre"},{className:"language-text"}),'DEF FN upper$(str$)\n  DIM t$, ch$, ch\n  FOR i = 0 TO LEN(str$)\n    ch$ = str$[i]\n    ch = ASC(ch$)\n    IF ch >= ASC("a") AND ch <= ASC("z") THEN\n      ch = ch - 32\n    END IF\n    t$ = t$ + CHR$(ch)\n  NEXT i\n  RETURN t$\nEND FN\n')),(0,n.mdx)("h4",null,"Subroutine"),(0,n.mdx)("pre",null,(0,n.mdx)("code",t({parentName:"pre"},{className:"language-text"}),'DEF SUB printIntro()\n  PRINT "Hello, world!"\nEND SUB\n')))}u.isMDXComponent=!0;
},{"react":"SAdv","@mdx-js/react":"QaRW"}]},{},[], null)
//# sourceMappingURL=/def.d85dacbf.js.map