.segment __current__ kmemmap.basic.code-start .append {
    expression-handlers:
        .word token-not-impl                  ,0x1014 # 128, ABS
        .word token-not-impl                  ,0x2006 # 129, AND
        .word token-not-impl                  ,0x1014 # 130, ASC
        .word handler-syntax-error            ,0x0000 # 131, ASM
        .word token-not-impl                  ,0x1014 # 132, ATN
        .word handler-syntax-error            ,0x0000 # 133, AT
        .word handler-syntax-error            ,0x0000 # 134, CALL
        .word handler-syntax-error            ,0x0000 # 135, CATALOG
        .word token-not-impl                  ,0x2014 # 136, CHRS$
        .word token-not-impl                  ,0x1014 # 137, CHR$
        .word handler-syntax-error            ,0x0000 # 138, CIRCLE
        .word handler-syntax-error            ,0x0000 # 139, CLS
        .word handler-syntax-error            ,0x0000 # 140, CLOSE
        .word handler-syntax-error            ,0x0000 # 141, CONTINUE,CONT
        .word handler-syntax-error            ,0x0000 # 142, COLOR
        .word handler-syntax-error            ,0x0000 # 143, COPY
        .word token-not-impl                  ,0x1014 # 144, COS
        .word handler-syntax-error            ,0x0000 # 145, DATA
        .word handler-syntax-error            ,0x0000 # 146, DEF
        .word handler-syntax-error            ,0x0000 # 147, DIM
        .word handler-syntax-error            ,0x0000 # 148, DO
        .word handler-syntax-error            ,0x0000 # 149, DRAW
        .word handler-syntax-error            ,0x0000 # 150, ELSE
        .word handler-syntax-error            ,0x0000 # 151, END
        .word token-not-impl                  ,0x1014 # 152, EXP
        .word handler-syntax-error            ,0x0000 # 153, FILL
        .word handler-syntax-error            ,0x0000 # 154, FN
        .word handler-syntax-error            ,0x0000 # 155, FOR
        .word handler-syntax-error            ,0x0000 # 156, FROM
        .word handler-syntax-error            ,0x0000 # 157, GOSUB
        .word handler-syntax-error            ,0x0000 # 158, GOTO
        .word token-not-impl                  ,0x1014 # 159, HEX$
        .word handler-syntax-error            ,0x0000 # 160, IF
        .word handler-syntax-error            ,0x0000 # 161, INPUT
        .word token-not-impl                  ,0x1014 # 162, INT
        .word handler-in-expr                 ,0x1014 # 163, IN
        .word token-not-impl                  ,0x0014 # 164, KEY$
        .word handler-syntax-error            ,0x0000 # 165, LAYER
        .word token-not-impl                  ,0x2014 # 166, LEFT$
        .word token-not-impl                  ,0x1014 # 167, LEN
        .word handler-syntax-error            ,0x0000 # 168, LET
        .word handler-syntax-error            ,0x0000 # 169, LINE
        .word handler-syntax-error            ,0x0000 # 170, LIST
        .word handler-syntax-error            ,0x0000 # 171, LOAD
        .word handler-syntax-error            ,0x0000 # 172, LOCAL
        .word token-not-impl                  ,0x1014 # 173, LOG
        .word handler-syntax-error            ,0x0000 # 174, LOOP
        .word token-not-impl                  ,0x1014 # 175, LOWER$
        .word handler-syntax-error            ,0x0000 # 176, MEM
        .word token-not-impl                  ,0x3014 # 177, MID$
        .word handler-syntax-error            ,0x0000 # 178, MODE
        .word token-not-impl                  ,0x1014 # 179, MOUSE
        .word handler-syntax-error            ,0x0000 # 180, NEW
        .word handler-syntax-error            ,0x0000 # 181, NEXT
        .word token-not-impl                  ,0x1F11 # 182, NOT
        .word handler-syntax-error            ,0x0000 # 183, OFF
        .word handler-syntax-error            ,0x0000 # 184, ON
        .word handler-syntax-error            ,0x0000 # 185, OPEN
        .word token-not-impl                  ,0x2005 # 186, OR
        .word handler-syntax-error            ,0x0000 # 187, OUT
        .word handler-peek-expr               ,0x2014 # 188, PEEK
        .word handler-syntax-error            ,0x0000 # 189, PLAY
        .word handler-syntax-error            ,0x0000 # 190, POINT
        .word handler-syntax-error            ,0x0000 # 191, POKE
        .word handler-syntax-error            ,0x0000 # 192, PRINT,?
        .word handler-syntax-error            ,0x0000 # 193, READ
        .word handler-syntax-error            ,0x0000 # 194, RECT
        .word handler-syntax-error            ,0x0000 # 195, REM,'
        .word handler-syntax-error            ,0x0000 # 196, RETURN
        .word token-not-impl                  ,0x2014 # 197, RIGHT$
        .word handler-rnd-expr                ,0x1014 # 198, RND
        .word handler-syntax-error            ,0x0000 # 199, RENAME
        .word handler-syntax-error            ,0x0000 # 200, REMOVE
        .word handler-syntax-error            ,0x0000 # 201, RESTORE
        .word handler-syntax-error            ,0x0000 # 202, RUN
        .word handler-syntax-error            ,0x0000 # 203, SAVE
        .word handler-syntax-error            ,0x0000 # 204, SCREEN
        .word token-not-impl                  ,0x1014 # 205, SGN
        .word token-not-impl                  ,0x1014 # 206, SIN
        .word handler-syntax-error            ,0x0000 # 207, SIZE
        .word handler-syntax-error            ,0x0000 # 208, SOURCE
        .word token-not-impl                  ,0x1014 # 209, SPC
        .word token-not-impl                  ,0x2014 # 210, SPRATTR
        .word handler-syntax-error            ,0x0000 # 211, SPRITE
        .word token-not-impl                  ,0x1014 # 212, SQR
        .word token-not-impl                  ,0x1014 # 213, STATUS
        .word handler-syntax-error            ,0x0000 # 214, STEP
        .word token-not-impl                  ,0x2014 # 215, STICK
        .word handler-syntax-error            ,0x0000 # 216, STOP
        .word token-not-impl                  ,0x1014 # 217, STR$
        .word handler-syntax-error            ,0x0000 # 218, SUB
        .word handler-syntax-error            ,0x0000 # 219, SWAP
        .word token-not-impl                  ,0x1014 # 220, TAB
        .word token-not-impl                  ,0x1014 # 221, TAN
        .word handler-syntax-error            ,0x0000 # 222, THEN
        .word handler-syntax-error            ,0x0000 # 223, TILESET
        .word token-not-impl                  ,0x1014 # 224, TIME
        .word handler-syntax-error            ,0x0000 # 225, TO
        .word handler-syntax-error            ,0x0000 # 226, UNTIL
        .word token-not-impl                  ,0x1014 # 227, UPPER$
        .word token-not-impl                  ,0x1014 # 228, USR
        .word token-not-impl                  ,0x1014 # 229, VAL
        .word handler-syntax-error            ,0x0000 # 230, WHILE
        .word handler-add-expr                ,0x200E # 231, +
        .word handler-sub-expr                ,0x200E # 232, -
        .word handler-neg-expr                ,0x1011 # 233, -
        .word handler-mul-expr                ,0x200F # 234, *
        .word handler-div-expr                ,0x200F # 235, /
        .word handler-mod-expr                ,0x200F # 236, %
        .word token-not-impl                  ,0x2F10 # 237, ^
        .word handler-neq-expr                ,0x200B # 238, <>,!=
        .word handler-lte-expr                ,0x200C # 239, <=,=<
        .word handler-gte-expr                ,0x200C # 240, >=,=>
        .word handler-lt-expr                 ,0x200C # 241, <
        .word handler-gt-expr                 ,0x200C # 242, >
        .word handler-equ-expr                ,0x200B # 243, =
        .word 0xFFFE                          ,0x2015 # 244, (
        .word 0xFFFF                          ,0x2015 # 245, )
        .word 0x0000                          ,0x0001 # 246, ,
        .word token-not-impl                  ,0x00FF # 247, ;
        .word token-not-impl                  ,0x00FF # 248, :
        .word token-not-impl                  ,0x00FF # 249, REAL
        .word token-not-impl                  ,0x00FF # 250, VARIABLE
        .word token-not-impl                  ,0x00FF # 251, CODE_STRING
        .word token-not-impl                  ,0x00FF # 252, STRING
        .word token-not-impl                  ,0x00FF # 253, DWORD
        .word token-not-impl                  ,0x00FF # 254, WORD
        .word token-not-impl                  ,0x00FF # 255, BYTE
}
