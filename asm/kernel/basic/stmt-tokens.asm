.segment __current__ kmemmap.basic.code-start .append {
    statement-handlers:
        .word handler-syntax-error             # 128, ABS
        .word handler-syntax-error             # 129, AND
        .word handler-syntax-error             # 130, ASC
        .word token-not-impl                   # 131, ASM
        .word handler-syntax-error             # 132, ATN
        .word handler-syntax-error             # 133, AT
        .word token-not-impl                   # 134, CALL
        .word token-not-impl                   # 135, CATALOG
        .word handler-syntax-error             # 136, CHRS$
        .word handler-syntax-error             # 137, CHR$
        .word token-not-impl                   # 138, CIRCLE
        .word handler-clear-screen             # 139, CLS
        .word token-not-impl                   # 140, CLOSE
        .word token-not-impl                   # 141, CONTINUE,CONT
        .word token-not-impl                   # 142, COLOR
        .word token-not-impl                   # 143, COPY
        .word handler-syntax-error             # 144, COS
        .word token-not-impl                   # 145, DATA
        .word token-not-impl                   # 146, DEF
        .word token-not-impl                   # 147, DIM
        .word token-not-impl                   # 148, DO
        .word token-not-impl                   # 149, DRAW
        .word token-not-impl                   # 150, ELSE
        .word token-not-impl                   # 151, END
        .word handler-syntax-error             # 152, EXP
        .word token-not-impl                   # 153, FILL
        .word token-not-impl                   # 154, FN
        .word token-not-impl                   # 155, FOR
        .word token-not-impl                   # 156, FROM
        .word token-not-impl                   # 157, GOSUB
        .word handler-goto                     # 158, GOTO
        .word handler-syntax-error             # 159, HEX$
        .word handler-if                       # 160, IF
        .word token-not-impl                   # 161, INPUT
        .word handler-syntax-error             # 162, INT
        .word handler-syntax-error             # 163, IN
        .word handler-syntax-error             # 164, KEY$
        .word handler-layer                    # 165, LAYER
        .word handler-syntax-error             # 166, LEFT$
        .word handler-syntax-error             # 167, LEN
        .word handler-let                      # 168, LET
        .word token-not-impl                   # 169, LINE
        .word handler-list                     # 170, LIST
        .word token-not-impl                   # 171, LOAD
        .word token-not-impl                   # 172, LOCAL
        .word handler-syntax-error             # 173, LOG
        .word token-not-impl                   # 174, LOOP
        .word handler-syntax-error             # 175, LOWER$
        .word token-not-impl                   # 176, MEM
        .word handler-syntax-error             # 177, MID$
        .word token-not-impl                   # 178, MODE
        .word handler-syntax-error             # 179, MOUSE
        .word handler-new                      # 180, NEW
        .word token-not-impl                   # 181, NEXT
        .word handler-syntax-error             # 182, NOT
        .word token-not-impl                   # 183, OFF
        .word token-not-impl                   # 184, ON
        .word token-not-impl                   # 185, OPEN
        .word handler-syntax-error             # 186, OR
        .word handler-out                      # 187, OUT
        .word handler-syntax-error             # 188, PEEK
        .word token-not-impl                   # 189, PLAY
        .word token-not-impl                   # 190, POINT
        .word handler-poke                     # 191, POKE
        .word handler-print                    # 192, PRINT,?
        .word token-not-impl                   # 193, READ
        .word token-not-impl                   # 194, RECT
        .word handler-rem                      # 195, REM,'
        .word token-not-impl                   # 196, RETURN
        .word handler-syntax-error             # 197, RIGHT$
        .word handler-syntax-error             # 198, RND
        .word token-not-impl                   # 199, RENAME
        .word token-not-impl                   # 200, REMOVE
        .word token-not-impl                   # 201, RESTORE
        .word handler-run                      # 202, RUN
        .word token-not-impl                   # 203, SAVE
        .word token-not-impl                   # 204, SCREEN
        .word handler-syntax-error             # 205, SGN
        .word handler-syntax-error             # 206, SIN
        .word token-not-impl                   # 207, SIZE
        .word token-not-impl                   # 208, SOURCE
        .word handler-syntax-error             # 209, SPC
        .word handler-syntax-error             # 210, SPRATTR
        .word handler-sprite                   # 211, SPRITE
        .word handler-syntax-error             # 212, SQR
        .word handler-syntax-error             # 213, STATUS
        .word handler-syntax-error             # 214, STEP
        .word handler-syntax-error             # 215, STICK
        .word handler-syntax-error             # 216, STOP
        .word handler-syntax-error             # 217, STR$
        .word token-not-impl                   # 218, SUB
        .word token-not-impl                   # 219, SWAP
        .word handler-syntax-error             # 220, TAB
        .word handler-syntax-error             # 221, TAN
        .word handler-syntax-error             # 222, THEN
        .word token-not-impl                   # 223, TILESET
        .word handler-syntax-error             # 224, TIME
        .word handler-syntax-error             # 225, TO
        .word token-not-impl                   # 226, UNTIL
        .word handler-syntax-error             # 227, UPPER$
        .word handler-syntax-error             # 228, USR
        .word handler-syntax-error             # 229, VAL
        .word token-not-impl                   # 230, WHILE
        .word handler-syntax-error             # 231, +
        .word handler-syntax-error             # 232, -
        .word handler-syntax-error             # 233, -
        .word handler-syntax-error             # 234, *
        .word handler-syntax-error             # 235, /
        .word handler-syntax-error             # 236, %
        .word handler-syntax-error             # 237, ^
        .word handler-syntax-error             # 238, <>,!=
        .word handler-syntax-error             # 239, <=,=<
        .word handler-syntax-error             # 240, >=,=>
        .word handler-syntax-error             # 241, <
        .word handler-syntax-error             # 242, >
        .word handler-syntax-error             # 243, =
        .word handler-syntax-error             # 244, (
        .word handler-syntax-error             # 245, )
        .word handler-syntax-error             # 246, ,
        .word handler-syntax-error             # 247, ;
        .word token-not-impl                   # 248, :
        .word handler-syntax-error             # 249, REAL
        .word handler-assignment               # 250, VARIABLE
        .word handler-syntax-error             # 251, CODE_STRING
        .word handler-syntax-error             # 252, STRING
        .word handler-syntax-error             # 253, DWORD
        .word handler-syntax-error             # 254, WORD
        .word handler-syntax-error             # 255, BYTE
}
